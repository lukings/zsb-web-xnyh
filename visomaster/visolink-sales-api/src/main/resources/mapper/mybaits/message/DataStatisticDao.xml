<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.visolink.system.channel.dao.DataStatisticDao">

    <!--获取项目统计-->
    <select id="getProDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select tt.projectId,
        tt.name,
        tt.areaName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        count( opp.OpportunityClueId ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_project_opportunity opp on bp.id = opp.projectId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_customer_add_log log on bp.id = log.project_id
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and log.report_create_time BETWEEN #{startTime} AND #{endTime} and log.is_add = 1
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        ifnull(sum(case when cl.customer_level = 'A' then 1 else 0 end),0) aCount,
        ifnull(sum(case when cl.customer_level = 'B' then 1 else 0 end),0) bCount,
        ifnull(sum(case when cl.customer_level = 'C' then 1 else 0 end),0) cCount,
        ifnull(sum(case when cl.customer_level = 'D' then 1 else 0 end),0) dCount
        FROM b_project bp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl on bp.id = cl.project_id
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
            COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
                and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
            , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_followup_record fo on bp.id = fo.MainFollowProjectId
        left join b_project_opportunity opp on fo.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus > 0
        and fo.Status = 2 and FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_opportunity_trade tr on bp.id = tr.ProjectID
        left join b_project_opportunity opp on tr.IntentionID = opp.IntentionID
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )) tt
        GROUP BY
        tt.projectId
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>
    <select id="getProDataStatisticsGather" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        where bp2.id = #{projectId} and opp.ClueStatus > 0
        and fol.Status = 2 and fol.FollowUpDate BETWEEN #{startTime} AND #{endTime} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getProDataStatisticsGatherCc" resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id = #{projectId} and opp.ClueStatus > 0
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getDataStatisticsGatherAt" resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            log.sales_attribution_name                                                                            salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            opp.CustomerLevel                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures,
        <if test="followUpType != '' and followUpType != null and 'addSum'.toString() == followUpType">
            log.report_create_time                                                                                  reportCreateTime,
            log.sales_attribution_name                                                                              reportUserName,
            log.sales_attribution_team_name                                                                         reportTeamName
            FROM b_customer_add_log log
            left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_account bac on bac.ID = opp.CreateUserId
            left join b_project bp on bp.ID = log.project_id
            <if test="gsType != '' and gsType != null and 'pro'.toString() == gsType">
                WHERE bp.id = #{projectId}
            </if>
            <if test="gsType != '' and gsType != null and 'proUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and log.sales_attribution_id = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'zyUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and log.sales_attribution_id = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'grUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and log.sales_attribution_id = #{ownerUserId}
            </if>
            <if test="gsType != '' and gsType != null and 'qy'.toString() == gsType">
                WHERE bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="gsType != '' and gsType != null and 'qyUser'.toString() == gsType">
                WHERE bp.id in (select ID from b_project where ComGUID = #{projectId}) and log.sales_attribution_id = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'group'.toString() == gsType">
                WHERE 1 = 1
            </if>
            <if test="gsType != '' and gsType != null and 'groupUser'.toString() == gsType">
                WHERE log.sales_attribution_id = #{userId}
            </if>
            and log.report_create_time BETWEEN #{startTime} AND #{endTime} and log.is_add = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'orderSum'.toString() == followUpType">
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName
            FROM b_project_opportunity opp
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_account bac on bac.ID = opp.CreateUserId
            left join b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
            left join b_project bp on bp.id = tr.ProjectID
            <if test="gsType != '' and gsType != null and 'pro'.toString() == gsType">
                WHERE bp.id = #{projectId}
            </if>
            <if test="gsType != '' and gsType != null and 'proUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and opp.SalesAttributionId = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'zyUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and opp.SalesAttributionId = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'grUser'.toString() == gsType">
                WHERE bp.id = #{projectId} and opp.SalesAttributionId = #{ownerUserId}
            </if>
            <if test="gsType != '' and gsType != null and 'qy'.toString() == gsType">
                WHERE bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="gsType != '' and gsType != null and 'qyUser'.toString() == gsType">
                WHERE bp.id in (select ID from b_project where ComGUID = #{projectId}) and opp.SalesAttributionId = #{userId}
            </if>
            <if test="gsType != '' and gsType != null and 'group'.toString() == gsType">
                WHERE 1 = 1
            </if>
            <if test="gsType != '' and gsType != null and 'groupUser'.toString() == gsType">
                WHERE opp.SalesAttributionId = #{userId}
            </if>
            and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <!--获取个人统计-->
    <select id="getGrUserDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select tt.projectId,
        tt.name,
        tt.areaName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        count( opp.OpportunityClueId ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_project_opportunity opp on bp.id = opp.projectId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &lt; 9 and opp.SalesAttributionId = #{ownerUserId}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_customer_add_log log on bp.id = log.project_id
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and log.report_create_time BETWEEN #{startTime} AND #{endTime} and log.sales_attribution_id = #{ownerUserId}
        and log.is_add = 1
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        ifnull(sum(case when cl.customer_level = 'A' then 1 else 0 end),0) aCount,
        ifnull(sum(case when cl.customer_level = 'B' then 1 else 0 end),0) bCount,
        ifnull(sum(case when cl.customer_level = 'C' then 1 else 0 end),0) cCount,
        ifnull(sum(case when cl.customer_level = 'D' then 1 else 0 end),0) dCount
        FROM b_project bp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl on bp.id = cl.project_id
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.SalesAttributionId = #{ownerUserId} and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
            COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
                and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
            , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_followup_record fo on bp.id = fo.ProjectId
        left join b_project_opportunity opp on fo.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus > 0
        and fo.Status = 2 and FollowUpDate BETWEEN #{startTime} AND #{endTime} and opp.SalesAttributionId = #{ownerUserId}
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_opportunity_trade tr on bp.id = tr.ProjectID
        left join b_project_opportunity opp ON tr.IntentionID = opp.IntentionID
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.SalesAttributionId = #{ownerUserId}
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.id) tt
        GROUP BY
        tt.projectId
    </select>
    <select id="getGrUserDataStatisticsGather"
            resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE bp.id = #{projectId} and opp.ClueStatus > 0
        and fol.Status = 2 and fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and opp.SalesAttributionId = #{ownerUserId} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>
    <select id="getGrUserDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id = #{projectId} and cl.sales_attribution_id = #{ownerUserId} and opp.ClueStatus > 0 and cl.customer_level in ('A','B','C','D')
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>
    <!--
    select tt.projectId,
        tt.name,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.visitCount) visitCount,
        sum(tt.threeOnesCount) threeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        opp.projectId,
        opp.ProjectName name,
        count( 1 ) oppSum,
        sum(case when opp.IsTaoGuest is null and opp.IsReferralOk = 0 then 1 else 0 end) addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        sum(opp.IsThreeOnes) threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
        sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
        sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
        sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
        b_project_opportunity opp
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId
        union all
        SELECT
        opp.projectId,
        opp.ProjectName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        count( 1 ) firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        WHERE opp.TheFirstVisitDate BETWEEN #{startTime} AND #{endTime} and opp.VisitDate is null
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId
        union all
        SELECT
        opp.projectId,
        opp.ProjectName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        count( 1 ) reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        WHERE opp.VisitDate BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId
        union all
        SELECT
        opp.projectId,
        opp.ProjectName name,
        0 oppSum,
        0 addSum,
        count( tr.IntentionID ) orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        INNER JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime}) tr ON tr.IntentionID = opp.IntentionID
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId
        union all
        SELECT
        opp.projectId,
        opp.ProjectName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        ifnull(sum(case when fo.FollowUpWay = 1 then 1 else 0 end ),0) callCount,
        ifnull(sum(case when fo.FollowUpWay = 2 then 1 else 0 end ),0) visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        INNER JOIN ( SELECT OpportunityClueId,FollowUpWay FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay in (2,1) and ProjectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and Status = 2 and FollowUpDate BETWEEN #{startTime}
        AND #{endTime}) fo ON fo.OpportunityClueId = opp.OpportunityClueId
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId) tt
        GROUP BY
        tt.projectId

    -->



    <!--
    SELECT
            opp.projectId,
            opp.ProjectName name,
            count( 1 ) oppSum,
            count( tr.IntentionID ) orderSum,
            count(fo.OpportunityClueId) visitCount,
            sum(opp.IsThreeOnes) threeOnesCount,
            sum(case when opp.TheFirstVisitDate is not null and opp.VisitDate is null then 1 else 0 end) firstVisitCount,
            sum(case when opp.VisitDate is not null then 1 else 0 end) reVisitCount,
            sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
            sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
            sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
            sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
            b_project_opportunity opp
                LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
                AND #{endTime} GROUP BY IntentionID ) tr ON tr.IntentionID = opp.IntentionID
                LEFT JOIN ( SELECT OpportunityClueId FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay = 2 and ProjectId in (
                            <foreach collection="proIds" item="item" separator=",">
                                #{item}
                            </foreach>
                            ) and Status = 2 and FollowUpDate BETWEEN #{startTime}
                AND #{endTime} GROUP BY OpportunityClueId ) fo ON fo.OpportunityClueId = opp.OpportunityClueId
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
          and opp.projectId in (
            <foreach collection="proIds" item="item" separator=",">
                #{item}
            </foreach>
            ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
            opp.projectId


    -->

    <!--获取区域统计-->
    <select id="getQyDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select tt.projectId,
        tt.name,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        count( opp.OpportunityClueId ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN b_project_opportunity opp ON bp.id = opp.projectId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE
        bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        left join b_customer_add_log log on bp.id = log.project_id
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE
        bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and log.report_create_time BETWEEN #{startTime} AND #{endTime}
        and log.is_add = 1
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        ifnull(sum(case when cl.customer_level = 'A' then 1 else 0 end),0) aCount,
        ifnull(sum(case when cl.customer_level = 'B' then 1 else 0 end),0) bCount,
        ifnull(sum(case when cl.customer_level = 'C' then 1 else 0 end),0) cCount,
        ifnull(sum(case when cl.customer_level = 'D' then 1 else 0 end),0) dCount
        FROM b_project bp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl on bp.id = cl.project_id
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE
        bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        AND #{endTime} and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
            COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
                and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
            , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        left join b_followup_record fo on bp.id = fo.MainFollowProjectId
        left join b_project_opportunity opp on fo.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE
        bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus > 0
        and fo.Status = 2 and FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        left join b_opportunity_trade tr on bp.id = tr.ProjectID
        left join b_project_opportunity opp on tr.IntentionID = opp.IntentionID
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.ComGUID) tt
        GROUP BY
        tt.projectId

    </select>
    <select id="getQyDataStatisticsGather" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE bp2.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus > 0
        and fol.Status = 2 and fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getQyDataStatisticsGatherCc" resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus > 0 and cl.customer_level in ('A','B','C','D')
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getTeamListByProId" parameterType="java.util.Map" resultType="java.util.Map">
        <if test="type==1">
            select OrgName label,
            id                                                                                                  value
            from  s_organization
            WHERE
            IsDel = 0
            AND  projectId = #{projectId}
        </if>
        <if test="type==2">
            select replace((substring(FullPath, ((length(substring_index(FullPath, '/', 2)) - 1) / 3) + 3)), '/', '-') label,
            substring_index(FullPath, '/', 2)                                                                   dex,
            id                                                                                                  value
            from  s_organization
            WHERE
            IsDel = 0
            and projectId in (
            select ID from b_project where ComGUID = #{projectId}
            )
        </if>
        and OrgCategory &lt;&gt;4
    </select>

    <!--
    select tt.projectId,
        tt.name,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.visitCount) visitCount,
        sum(tt.threeOnesCount) threeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        count( 1 ) oppSum,
        sum(case when opp.IsTaoGuest is null and opp.IsReferralOk = 0 then 1 else 0 end) addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        sum(opp.IsThreeOnes) threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
        sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
        sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
        sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        count( 1 ) firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        WHERE opp.TheFirstVisitDate BETWEEN #{startTime} AND #{endTime} and opp.VisitDate is null
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        count( 1 ) reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        WHERE opp.VisitDate BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        count( tr.IntentionID ) orderSum,
        0 callCount,
        0 visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        INNER JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime}) tr ON tr.IntentionID = opp.IntentionID
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID
        union all
        SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        0 oppSum,
        0 addSum,
        0 orderSum,
        ifnull(sum(case when fo.FollowUpWay = 1 then 1 else 0 end ),0) callCount,
        ifnull(sum(case when fo.FollowUpWay = 2 then 1 else 0 end ),0) visitCount,
        0 threeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        INNER JOIN ( SELECT OpportunityClueId,FollowUpWay FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay in (2,1) and ProjectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and Status = 2 and FollowUpDate BETWEEN #{startTime}
        AND #{endTime}) fo ON fo.OpportunityClueId = opp.OpportunityClueId
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID) tt
        GROUP BY
        tt.projectId
    -->

    <!--
    SELECT
        bp.ComGUID projectId,
        org.OrgName name,
        count( 1 ) oppSum,
        count( tr.IntentionID ) orderSum,
        count(fo.OpportunityClueId) visitCount,
        sum(opp.IsThreeOnes) threeOnesCount,
        sum(case when opp.TheFirstVisitDate is not null and opp.VisitDate is null then 1 else 0 end) firstVisitCount,
        sum(case when opp.VisitDate is not null then 1 else 0 end) reVisitCount,
        sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
        sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
        sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
        sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime} GROUP BY IntentionID ) tr ON tr.IntentionID = opp.IntentionID
        LEFT JOIN ( SELECT OpportunityClueId FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay = 2 and ProjectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and Status = 2 and FollowUpDate BETWEEN #{startTime}
        AND #{endTime} GROUP BY OpportunityClueId ) fo ON fo.OpportunityClueId = opp.OpportunityClueId
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID

    -->

    <select id="proConversionRateStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProConversionRate">
        SELECT
        bp.ProjectName name,
        count( opp.OpportunityClueId ) oppSum,
        count( tr.IntentionID ) orderSum,
        ifnull(sum(opp.IsThreeOnes),0) threeOnesCount,
        ifnull(sum(case when opp.TheFirstVisitDate is not null then 1 else 0 end),0) visitCount,
        ifnull(sum(case when opp.SalesTheLatestFollowDate is not null then 1 else 0 end),0) followCount
        FROM b_project bp
        LEFT JOIN b_project_opportunity opp on bp.id = opp.projectId and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime} and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime} GROUP BY IntentionID) tr ON tr.IntentionID = opp.IntentionID
        WHERE
        bp.id in (
        <foreach collection="projectIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        GROUP BY
        bp.id
    </select>

    <!--
        SELECT
        opp.ProjectName name,
        count( 1 ) oppSum,
        count( tr.IntentionID ) orderSum,
        sum(opp.IsThreeOnes) threeOnesCount,
        sum(case when opp.TheFirstVisitDate is not null then 1 else 0 end) visitCount,
        sum(case when opp.SalesTheLatestFollowDate is not null then 1 else 0 end) followCount
        FROM
        b_project_opportunity opp
        LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime} GROUP BY IntentionID) tr ON tr.IntentionID = opp.IntentionID
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="projectIds" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        opp.projectId
    -->


    <select id="regionConversionRateStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProConversionRate">
        SELECT
        org.OrgName name,
        count( opp.OpportunityClueId ) oppSum,
        count( tr.IntentionID ) orderSum,
        ifnull(sum(opp.IsThreeOnes),0) threeOnesCount,
        ifnull(sum(case when opp.TheFirstVisitDate is not null then 1 else 0 end),0) visitCount,
        ifnull(sum(case when opp.SalesTheLatestFollowDate is not null then 1 else 0 end),0) followCount
        FROM
        b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN b_project_opportunity opp ON bp.id = opp.projectId and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime} and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime} GROUP BY IntentionID) tr ON tr.IntentionID = opp.IntentionID
        WHERE
        bp.id in (
        <foreach collection="regionList" item="item" separator=",">
            #{item}
        </foreach>
        )
        GROUP BY
        bp.ComGUID
    </select>

    <!--
        SELECT
        org.OrgName name,
        count( 1 ) oppSum,
        count( tr.IntentionID ) orderSum,
        sum(opp.IsThreeOnes) threeOnesCount,
        sum(case when opp.TheFirstVisitDate is not null then 1 else 0 end) visitCount,
        sum(case when opp.SalesTheLatestFollowDate is not null then 1 else 0 end) followCount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
        AND #{endTime} GROUP BY IntentionID) tr ON tr.IntentionID = opp.IntentionID
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        and opp.projectId in (
        <foreach collection="regionList" item="item" separator=",">
            #{item}
        </foreach>
        ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
        bp.ComGUID
    -->

    <!--获取人员统计-->
    <select id="getUserDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select
        tt.name,
        tt.areaName,
        tt.projectId,
        tt.projectName,
        tt.orgName,
        tt.SalesAttributionId userId,
        tt.UserName userName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        count( 1 ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE opp.projectId = #{projectId}
          <if test="teamIds!=null">
          and opp.SalesAttributionTeamId in(
              <foreach collection="teamIds" item="item" separator=",">
                  #{item}
              </foreach>
              )
          </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.SalesAttributionId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        log.sales_attribution_id SalesAttributionId,
        log.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_customer_add_log log
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = log.sales_attribution_id
        LEFT JOIN b_project bp ON bp.id = log.project_id
        WHERE log.report_create_time BETWEEN #{startTime} AND #{endTime}
        and log.project_id = #{projectId} and log.is_add = 1
          <if test="teamIds!=null">
          and log.sales_attribution_team_id in(
              <foreach collection="teamIds" item="item" separator=",">
                  #{item}
              </foreach>
              )
          </if>
        and log.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        log.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        cl.sales_attribution_id SalesAttributionId,
        cl.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        sum(case when cl.customer_level = 'A' then 1 else 0 end) aCount,
        sum(case when cl.customer_level = 'B' then 1 else 0 end) bCount,
        sum(case when cl.customer_level = 'C' then 1 else 0 end) cCount,
        sum(case when cl.customer_level = 'D' then 1 else 0 end) dCount
        FROM
        (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_team_name,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = cl.sales_attribution_id
        LEFT JOIN b_project bp on bp.id = cl.project_id
        WHERE cl.project_id = #{projectId}
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and cl.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        cl.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        fo.UserId SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
        , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_followup_record fo
        left join b_project_opportunity opp on opp.OpportunityClueId = fo.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = fo.UserId
        LEFT JOIN b_project bp ON bp.id = fo.ProjectId
        WHERE fo.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.ProjectId = #{projectId}
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.ClueStatus > 0
        and fo.Status = 2
        and fo.UserId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        fo.UserId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        left join b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = tr.ProjectID
        WHERE opp.projectId = #{projectId} and opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.SalesAttributionId) tt
        GROUP BY
        tt.SalesAttributionId
    </select>
    <select id="getUserDataStatisticsGather" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fol.ProjectId = #{projectId} and opp.ClueStatus > 0 and fol.Status = 2
        and fol.UserId = #{userId} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getUserDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
        opp.ProjectClueId                                                                                     projectClueId,
        opp.projectId                                                                                         projectId,
        opp.ProjectName                                                                                       projectName,
        if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
        concat(left(opp.CustomerName, 1), '**'),
        opp.diy_hide_customer_name)                                                                        customerName,
        (case
        when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
        length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
        concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
        else opp.CustomerName end)                                                                       oldCustomerName,
        opp.SourceMode                                                                                        sourceMode,
        inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
        opp.Contacts                                                                                          contacts,
        CONCAT(
        LEFT(opp.CustomerMobile, 3),
        '****',
        RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
        (case
        when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
        RIGHT(opp.CustomerMobile, 4))
        else opp.CustomerMobile end)                                                                     oldCustomerMobile,
        opp.ReportCreateTime                                                                                  reportCreateTime,
        opp.ReportUserName                                                                                    reportUserName,
        opp.ReportTeamName                                                                                    reportTeamName,
        (
        CASE
        WHEN opp.ReportUserRole = '1' THEN
        '项目招商专员'
        WHEN opp.ReportUserRole = '2' THEN
        '区域招商专员'
        WHEN opp.ReportUserRole = '3' THEN
        '全民经纪人'
        ELSE
        ''
        END
        )                                                                                                 reportUserRole,
        opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
        opp.SalesAttributionName                                                                              salesAttributionName,
        opp.SalesAttributionTime                                                                              salesAttributionTime,
        opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
        opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
        opp.VisitDate                                                                                         visitDate,
        cl.customer_level                                                                                     customerLevel,
        opp.TradeLevel                                                                                        tradeLevel,
        opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
        opp.DeliveryDate                                                                                      deliveryDate,
        (
        CASE
        WHEN opp.IsTaoGuest = 1 THEN
        '是'
        ELSE
        '否'
        END
        )                                                                                                 isTaoGuest,
        (
        CASE
        WHEN opp.ClueStatus = 1 THEN
        '报备'
        WHEN opp.ClueStatus = 2 THEN
        '到访'
        WHEN opp.ClueStatus = 3 THEN
        '交房'
        WHEN opp.ClueStatus = 4 THEN
        '相似客户审批中'
        WHEN opp.ClueStatus = 12 THEN
        '相似客户审批驳回'
        WHEN opp.ClueStatus = 8 THEN
        '签约'
        ELSE
        '作废'
        END
        )                                                                                                 clueStatus,
        (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
        opp.ParkName                                                                                          parkName,
        opp.ParkAddress                                                                                       parkAddress,
        opp.ParkFloor                                                                                         parkFloor,
        opp.CustomerAddress                                                                                   customerAddress,
        inf.DetailedAddress                                                                                   detailedAddress,
        inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
        opp.MainProducts                                                                                      businessProducts,
        inf.MainRawMaterials                                                                                  mainRawMaterials,
        inf.PeopleNum                                                                                         peopleNum,
        inf.ExistingPlantArea                                                                                 existingPlantArea,
        inf.AnnualOutputValue                                                                                 annualOutputValue,
        inf.TaxAmountYear                                                                                     taxAmountYear,
        inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
        opp.PlantTypeDesc                                                                                     plantTypeDesc,
        inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
        inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
        inf.IntentionalPrice                                                                                  acceptPriceDesc,
        inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
        opp.Label                                                                                             label,
        bp.AreaName                                                                                           areaName,
        (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
        (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
        from b_followup_record
        where IsDel = 0
        and Status in (1, 3, 4, 5)
        and FollowUpType = 1
        and FollowUpWay in (1, 2, 3, 4, 5)
        and UserId = opp.SalesAttributionId
        and FollowUpDate > opp.CatchTime
        and FollowUpDate > '2024-03-15 22:00:00'
        and OpportunityClueId = opp.OpportunityClueId
        order by EditTime desc, CreateTime desc
        limit 1)                                                                                             isFollUpOk,
        opp.visit_count                                                                                       visitCount,
        opp.three_ones_before_count                                                                           threeOnesBeforeCount,
        opp.three_ones_after_count                                                                            threeOnesAfterCount,
        opp.come_visit_count                                                                                  comeVisitCount,
        opp.CreateTime                                                                                        createTime,
        bac.EmployeeName                                                                                      createUserName,
        opp.CustomerType                                                                                      customerType,
        inf.BelongIndustrise                                                                                  belongIndustrise,
        inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
        inf.BelongIndustriseThree                                                                             belongIndustriseThree,
        inf.BelongIndustriseFour                                                                              belongIndustriseFour,
        opp.MainProducts                                                                                      mainProducts,
        opp.Position                                                                                          position,
        opp.LegalPerson                                                                                       legalPerson,
        opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
        opp.LegalPersonCardNum                                                                                legalPersonCardNum,
        opp.EnterpriseType                                                                                    enterpriseType,
        opp.PostCode                                                                                          postCode,
        opp.Floor                                                                                             floor,
        opp.RentAndSaleType                                                                                   rentAndSaleType,
        opp.RentalPrice                                                                                       rentalPrice,
        inf.YxArea                                                                                            yxArea,
        inf.IntentionClass                                                                                    intentionClass,
        inf.IntentionType                                                                                     intentionType,
        inf.IntentionalPrice                                                                                  intentionalPrice,
        inf.NowRent                                                                                           nowRent,
        inf.NowOfficeSpace                                                                                    nowOfficeSpace,
        inf.PollutantDischarge                                                                                pollutantDischarge,
        inf.Zyreason                                                                                          zyreason,
        inf.ResistanceDesc                                                                                    resistanceDesc,
        inf.TechnologicalProcess                                                                              technologicalProcess,
        inf.MajorEquipment                                                                                    majorEquipment,
        inf.ImportantDescription                                                                              importantDescription,
        inf.ElectricityYear                                                                                   electricityYear,
        inf.WaterYear                                                                                         waterYear,
        (select distinct '是'
        from b_followup_record bfr
        where status = 2
        and IsThreeOnesStatus = 1
        and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where OpportunityClueId = opp.OpportunityClueId
        and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
        LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
        left join b_project bp on bp.ID = cl.project_id
        left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id = #{projectId} and cl.sales_attribution_id = #{userId} and opp.ClueStatus > 0
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <!--获取专员统计-->
    <select id="getZyUserDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select
        tt.name,
        tt.areaName,
        tt.projectId,
        tt.projectName,
        tt.orgName,
        tt.SalesAttributionId userId,
        tt.UserName userName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        count( 1 ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &lt; 9
        <if test="sreachName != null and sreachName != ''">
            and ba.EmployeeName = #{sreachName}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.projectId, opp.SalesAttributionTeamId, opp.SalesAttributionId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        log.sales_attribution_id SalesAttributionId,
        log.sales_attribution_team_id SalesAttributionTeamId,
        log.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_customer_add_log log
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = log.sales_attribution_id
        LEFT JOIN b_project bp ON bp.id = log.project_id
        WHERE log.report_create_time BETWEEN #{startTime} AND #{endTime}
        and log.is_add = 1
        and log.project_id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and log.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="sreachName != null and sreachName != ''">
            and ba.EmployeeName = #{sreachName}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        log.project_id, log.sales_attribution_team_id, log.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        cl.sales_attribution_id SalesAttributionId,
        cl.sales_attribution_team_id SalesAttributionTeamId,
        cl.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        sum(case when cl.customer_level = 'A' then 1 else 0 end) aCount,
        sum(case when cl.customer_level = 'B' then 1 else 0 end) bCount,
        sum(case when cl.customer_level = 'C' then 1 else 0 end) cCount,
        sum(case when cl.customer_level = 'D' then 1 else 0 end) dCount
        FROM
        (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_team_name,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = cl.sales_attribution_id
        LEFT JOIN b_project bp ON bp.id = cl.project_id
        WHERE cl.project_id in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and cl.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="sreachName != null and sreachName != ''">
            and ba.EmployeeName = #{sreachName}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        cl.project_id, cl.sales_attribution_team_id, cl.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        fo.UserId SalesAttributionId,
        opp.SalesAttributionTeamId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
        , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_followup_record fo
        left join b_project_opportunity opp on opp.OpportunityClueId = fo.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = fo.UserId
        LEFT JOIN b_project bp ON bp.id = fo.ProjectId
        WHERE fo.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.ProjectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus > 0
        and fo.Status = 2
        and fo.UserId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="sreachName != null and sreachName != ''">
            and ba.EmployeeName = #{sreachName}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        fo.projectId, opp.SalesAttributionTeamId, fo.UserId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        left join b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = tr.ProjectID
        WHERE opp.projectId in (
        <foreach collection="proIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="sreachName != null and sreachName != ''">
            and ba.EmployeeName = #{sreachName}
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.projectId, opp.SalesAttributionTeamId, opp.SalesAttributionId) tt
        GROUP BY
        tt.projectId,tt.SalesAttributionTeamId,tt.SalesAttributionId
    </select>
    <select id="getZyUserDataStatisticsGather"
            resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fol.ProjectId = #{projectId} and opp.ClueStatus > 0
        and fol.Status = 2 and fol.UserId = #{userId} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getZyUserDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id = #{projectId} and cl.sales_attribution_id = #{userId} and opp.ClueStatus > 0
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <!--
        SELECT
            ba.EmployeeName name,
            count( 1 ) oppSum,
            count( tr.IntentionID ) orderSum,
            count(fo.OpportunityClueId) visitCount,
            sum(opp.IsThreeOnes) threeOnesCount,
            sum(case when opp.TheFirstVisitDate is not null and opp.VisitDate is null then 1 else 0 end) firstVisitCount,
            sum(case when opp.VisitDate is not null then 1 else 0 end) reVisitCount,
            sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
            sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
            sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
            sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
            b_project_opportunity opp
                LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
                AND #{endTime} GROUP BY IntentionID ) tr ON tr.IntentionID = opp.IntentionID
                LEFT JOIN ( SELECT OpportunityClueId FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay = 2 and ProjectId = #{projectId} and Status = 2 and FollowUpDate BETWEEN #{startTime}
                AND #{endTime} GROUP BY OpportunityClueId ) fo ON fo.OpportunityClueId = opp.OpportunityClueId
                LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
          and opp.projectId = #{projectId} and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
            opp.SalesAttributionId
    -->

    <!--获取人员统计-->
    <select id="getUserQyDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select
            tt.name,
            tt.areaName,
            tt.projectId,
            tt.projectName,
            tt.orgName,
            tt.SalesAttributionId userId,
            tt.UserName userName,
            sum(tt.oppSum) oppSum,
            sum(tt.addSum) addSum,
            sum(tt.orderSum) orderSum,
            sum(tt.callCount) callCount,
            sum(tt.firstComeVisitCount) firstComeVisitCount,
            sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
            sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
            sum(tt.sjThreeOnesCount) sjThreeOnesCount,
            sum(tt.jsThreeOnesCount) jsThreeOnesCount,
            sum(tt.firstVisitCount) firstVisitCount,
            sum(tt.reVisitCount) reVisitCount,
            round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
            sum(tt.followVisitCount) followVisitCount,
            sum(tt.aCount) aCount,
            sum(tt.bCount) bCount,
            sum(tt.cCount) cCount,
            sum(tt.dCount) dCount

        from (
                 SELECT
                     bp.ComGUID projectId,
                     bp.ProjectName projectName,
                     bp.AreaName areaName,
                     opp.SalesAttributionId,
                     opp.SalesAttributionTeamName orgName,
                     ba.EmployeeName name,
                     ba.UserName,
                     count( 1 ) oppSum,
                     0 addSum,
                     0 orderSum,
                     0 callCount,
                     0 firstComeVisitCount,
                     0 threeOnesBeforeReComeVisitCount,
                     0 threeOnesAfterReComeVisitCount,
                     0 sjThreeOnesCount,
                     0 jsThreeOnesCount,
                     0 firstVisitCount,
                     0 reVisitCount,
                     0 followVisitCount,
                     0 aCount,
                     0 bCount,
                     0 cCount,
                     0 dCount
                 FROM
                     b_project_opportunity opp
                         left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                         LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
                         LEFT JOIN b_project bp ON bp.id = opp.projectId
                 WHERE opp.projectId in (
                     select ID from b_project where ComGUID = #{projectId}
                 )
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
                 GROUP BY
                     opp.SalesAttributionId
                 union all
                 SELECT
                     bp.ComGUID projectId,
                     bp.ProjectName projectName,
                     bp.AreaName areaName,
                     log.sales_attribution_id SalesAttributionId,
                     log.sales_attribution_team_name orgName,
                     ba.EmployeeName name,
                     ba.UserName,
                     0 oppSum,
                     count(DISTINCT log.opportunity_clue_id ) addSum,
                     0 orderSum,
                     0 callCount,
                     0 firstComeVisitCount,
                     0 threeOnesBeforeReComeVisitCount,
                     0 threeOnesAfterReComeVisitCount,
                     0 sjThreeOnesCount,
                     0 jsThreeOnesCount,
                     0 firstVisitCount,
                     0 reVisitCount,
                     0 followVisitCount,
                     0 aCount,
                     0 bCount,
                     0 cCount,
                     0 dCount
                 FROM
                    b_customer_add_log log
                         left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                         left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                         LEFT JOIN b_account ba ON ba.id = log.sales_attribution_id
                         LEFT JOIN b_project bp ON bp.id = log.project_id
                 WHERE log.report_create_time BETWEEN #{startTime} AND #{endTime}
                   and log.is_add = 1
                   and log.project_id in (
                     select ID from b_project where ComGUID = #{projectId}
                 )
        <if test="teamIds!=null">
            and log.sales_attribution_team_id in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and log.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
                 GROUP BY
                    log.sales_attribution_id
                 union all
        SELECT
        bp.ComGUID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        cl.sales_attribution_id SalesAttributionId,
        cl.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        sum(case when cl.customer_level = 'A' then 1 else 0 end) aCount,
        sum(case when cl.customer_level = 'B' then 1 else 0 end) bCount,
        sum(case when cl.customer_level = 'C' then 1 else 0 end) cCount,
        sum(case when cl.customer_level = 'D' then 1 else 0 end) dCount
        FROM
        (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_team_name,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl
        left join  b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = cl.sales_attribution_id
        LEFT JOIN b_project bp ON bp.id = cl.project_id
        WHERE cl.project_id in (
        select ID from b_project where ComGUID = #{projectId}
        )
        <if test="teamIds!=null">
            and cl.sales_attribution_team_id in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and cl.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        cl.sales_attribution_id
                 union all
        SELECT
        bp.ComGUID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        fo.UserId SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
            and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
            COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
                and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
            , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        left join b_followup_record fo on opp.OpportunityClueId = fo.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = fo.UserId
        LEFT JOIN b_project bp ON bp.id = fo.ProjectId
        WHERE fo.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.ProjectId in (
        select ID from b_project where ComGUID = #{projectId}
        )
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and fo.UserId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus > 0
        and fo.Status = 2
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        fo.UserId
                 union all
                 SELECT
                     bp.ComGUID projectId,
                     bp.ProjectName projectName,
                     bp.AreaName areaName,
                     opp.SalesAttributionId,
                     opp.SalesAttributionTeamName orgName,
                     ba.EmployeeName name,
                     ba.UserName,
                     0 oppSum,
                     0 addSum,
                     count(distinct tr.IntentionID ) orderSum,
                     0 callCount,
                     0 firstComeVisitCount,
                     0 threeOnesBeforeReComeVisitCount,
                     0 threeOnesAfterReComeVisitCount,
                     0 sjThreeOnesCount,
                     0 jsThreeOnesCount,
                     0 firstVisitCount,
                     0 reVisitCount,
                     0 followVisitCount,
                     0 aCount,
                     0 bCount,
                     0 cCount,
                     0 dCount
                 FROM
                     b_project_opportunity opp
                         left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                         left join b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
                         LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
                         LEFT JOIN b_project bp ON bp.id = tr.ProjectID
                 WHERE opp.projectId in (
                     select ID from b_project where ComGUID = #{projectId}
                 )
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
                   and opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
                 GROUP BY
                     opp.SalesAttributionId
                ) tt
        GROUP BY
            tt.SalesAttributionId
    </select>
    <select id="getUserQyDataStatisticsGather"
            resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE bp.id in (
        select ID from b_project where ComGUID = #{projectId}
        ) and opp.ClueStatus > 0
        and fol.Status = 2 and fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fol.UserId = #{userId} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getUserQyDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
        opp.ProjectClueId                                                                                     projectClueId,
        opp.projectId                                                                                         projectId,
        opp.ProjectName                                                                                       projectName,
        if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
        concat(left(opp.CustomerName, 1), '**'),
        opp.diy_hide_customer_name)                                                                        customerName,
        (case
        when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
        length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
        concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
        else opp.CustomerName end)                                                                       oldCustomerName,
        opp.SourceMode                                                                                        sourceMode,
        inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
        opp.Contacts                                                                                          contacts,
        CONCAT(
        LEFT(opp.CustomerMobile, 3),
        '****',
        RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
        (case
        when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
        RIGHT(opp.CustomerMobile, 4))
        else opp.CustomerMobile end)                                                                     oldCustomerMobile,
        opp.ReportCreateTime                                                                                  reportCreateTime,
        opp.ReportUserName                                                                                    reportUserName,
        opp.ReportTeamName                                                                                    reportTeamName,
        (
        CASE
        WHEN opp.ReportUserRole = '1' THEN
        '项目招商专员'
        WHEN opp.ReportUserRole = '2' THEN
        '区域招商专员'
        WHEN opp.ReportUserRole = '3' THEN
        '全民经纪人'
        ELSE
        ''
        END
        )                                                                                                 reportUserRole,
        opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
        opp.SalesAttributionName                                                                              salesAttributionName,
        opp.SalesAttributionTime                                                                              salesAttributionTime,
        opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
        opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
        opp.VisitDate                                                                                         visitDate,
        cl.customer_level                                                                                     customerLevel,
        opp.TradeLevel                                                                                        tradeLevel,
        opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
        opp.DeliveryDate                                                                                      deliveryDate,
        (
        CASE
        WHEN opp.IsTaoGuest = 1 THEN
        '是'
        ELSE
        '否'
        END
        )                                                                                                 isTaoGuest,
        (
        CASE
        WHEN opp.ClueStatus = 1 THEN
        '报备'
        WHEN opp.ClueStatus = 2 THEN
        '到访'
        WHEN opp.ClueStatus = 3 THEN
        '交房'
        WHEN opp.ClueStatus = 4 THEN
        '相似客户审批中'
        WHEN opp.ClueStatus = 12 THEN
        '相似客户审批驳回'
        WHEN opp.ClueStatus = 8 THEN
        '签约'
        ELSE
        '作废'
        END
        )                                                                                                 clueStatus,
        (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
        opp.ParkName                                                                                          parkName,
        opp.ParkAddress                                                                                       parkAddress,
        opp.ParkFloor                                                                                         parkFloor,
        opp.CustomerAddress                                                                                   customerAddress,
        inf.DetailedAddress                                                                                   detailedAddress,
        inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
        opp.MainProducts                                                                                      businessProducts,
        inf.MainRawMaterials                                                                                  mainRawMaterials,
        inf.PeopleNum                                                                                         peopleNum,
        inf.ExistingPlantArea                                                                                 existingPlantArea,
        inf.AnnualOutputValue                                                                                 annualOutputValue,
        inf.TaxAmountYear                                                                                     taxAmountYear,
        inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
        opp.PlantTypeDesc                                                                                     plantTypeDesc,
        inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
        inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
        inf.IntentionalPrice                                                                                  acceptPriceDesc,
        inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
        opp.Label                                                                                             label,
        bp.AreaName                                                                                           areaName,
        (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
        (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
        from b_followup_record
        where IsDel = 0
        and Status in (1, 3, 4, 5)
        and FollowUpType = 1
        and FollowUpWay in (1, 2, 3, 4, 5)
        and UserId = opp.SalesAttributionId
        and FollowUpDate > opp.CatchTime
        and FollowUpDate > '2024-03-15 22:00:00'
        and OpportunityClueId = opp.OpportunityClueId
        order by EditTime desc, CreateTime desc
        limit 1)                                                                                             isFollUpOk,
        opp.visit_count                                                                                       visitCount,
        opp.three_ones_before_count                                                                           threeOnesBeforeCount,
        opp.three_ones_after_count                                                                            threeOnesAfterCount,
        opp.come_visit_count                                                                                  comeVisitCount,
        opp.CreateTime                                                                                        createTime,
        bac.EmployeeName                                                                                      createUserName,
        opp.CustomerType                                                                                      customerType,
        inf.BelongIndustrise                                                                                  belongIndustrise,
        inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
        inf.BelongIndustriseThree                                                                             belongIndustriseThree,
        inf.BelongIndustriseFour                                                                              belongIndustriseFour,
        opp.MainProducts                                                                                      mainProducts,
        opp.Position                                                                                          position,
        opp.LegalPerson                                                                                       legalPerson,
        opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
        opp.LegalPersonCardNum                                                                                legalPersonCardNum,
        opp.EnterpriseType                                                                                    enterpriseType,
        opp.PostCode                                                                                          postCode,
        opp.Floor                                                                                             floor,
        opp.RentAndSaleType                                                                                   rentAndSaleType,
        opp.RentalPrice                                                                                       rentalPrice,
        inf.YxArea                                                                                            yxArea,
        inf.IntentionClass                                                                                    intentionClass,
        inf.IntentionType                                                                                     intentionType,
        inf.IntentionalPrice                                                                                  intentionalPrice,
        inf.NowRent                                                                                           nowRent,
        inf.NowOfficeSpace                                                                                    nowOfficeSpace,
        inf.PollutantDischarge                                                                                pollutantDischarge,
        inf.Zyreason                                                                                          zyreason,
        inf.ResistanceDesc                                                                                    resistanceDesc,
        inf.TechnologicalProcess                                                                              technologicalProcess,
        inf.MajorEquipment                                                                                    majorEquipment,
        inf.ImportantDescription                                                                              importantDescription,
        inf.ElectricityYear                                                                                   electricityYear,
        inf.WaterYear                                                                                         waterYear,
        (select distinct '是'
        from b_followup_record bfr
        where status = 2
        and IsThreeOnesStatus = 1
        and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where OpportunityClueId = opp.OpportunityClueId
        and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
        SELECT opportunity_cue_id,
        MAX(create_time) AS max_create_time
        FROM b_customer_level_record
        WHERE create_time  &lt; #{endTime}
        GROUP BY opportunity_cue_id
        )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
        LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
        left join b_project bp on bp.ID = cl.project_id
        left join b_account bac on bac.ID = opp.CreateUserId
        WHERE bp.id in (select ID from b_project where ComGUID = #{projectId})
        and opp.ClueStatus > 0 and cl.sales_attribution_id = #{userId}
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!--
    SELECT
            ba.EmployeeName name,
            count( 1 ) oppSum,
            count( tr.IntentionID ) orderSum,
            count(fo.OpportunityClueId) visitCount,
            sum(opp.IsThreeOnes) threeOnesCount,
            sum(case when opp.TheFirstVisitDate is not null and opp.VisitDate is null then 1 else 0 end) firstVisitCount,
            sum(case when opp.VisitDate is not null then 1 else 0 end) reVisitCount,
            sum(case when opp.CustomerLevel = 'A' then 1 else 0 end) aCount,
            sum(case when opp.CustomerLevel = 'B' then 1 else 0 end) bCount,
            sum(case when opp.CustomerLevel = 'C' then 1 else 0 end) cCount,
            sum(case when opp.CustomerLevel = 'D' then 1 else 0 end) dCount
        FROM
            b_project_opportunity opp
                LEFT JOIN ( SELECT IntentionID FROM b_opportunity_trade WHERE TradeStatus = '激活' AND tradeTime BETWEEN #{startTime}
                AND #{endTime} GROUP BY IntentionID ) tr ON tr.IntentionID = opp.IntentionID
                LEFT JOIN ( SELECT OpportunityClueId FROM b_followup_record WHERE FollowUpType = '1' and FollowUpWay = 2 and Status = 2 and FollowUpDate BETWEEN #{startTime}
                AND #{endTime} GROUP BY OpportunityClueId ) fo ON fo.OpportunityClueId = opp.OpportunityClueId
                LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        WHERE opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
          and opp.projectId in (
            select ID from b_project where ComGUID = #{projectId}
            ) and opp.ClueStatus &gt; 0 and opp.ClueStatus &lt; 9
        GROUP BY
            opp.SalesAttributionId
    -->

    <!--
        SELECT
            t.name,
            sum( t.oppSum ) oppSum,
            sum( t.orderSum ) orderSum,
            sum( t.reportSum ) reportSum,
            sum( t.newOppCount ) newOppCount
        FROM
            (
                SELECT
                    ( CASE WHEN opp.SalesAttributionId IS NULL THEN '公池客户' ELSE ba.EmployeeName END ) name,
                    count( 1 ) oppSum,
                    0 orderSum,
                    0 reportSum,
                    0 newOppCount
                FROM
                    b_project_opportunity opp
                        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
                WHERE
                    opp.IsEffective = 1
                  AND opp.projectId = #{projectId}
                GROUP BY
                    opp.SalesAttributionId UNION ALL
                SELECT
                    ( CASE WHEN opp.SalesAttributionId IS NULL THEN '公池客户' ELSE ba.EmployeeName END ) name,
                    0 oppSum,
                    sum( CASE WHEN opp.ClueStatus IN ( 7, 8 ) THEN 1 ELSE 0 END ) orderSum,
                    sum( CASE WHEN opp.ClueStatus NOT IN ( 7, 8 ) THEN 1 ELSE 0 END ) reportSum,
                    count( 1 ) newOppCount
                FROM
                    b_project_opportunity opp
                        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
                WHERE
                    opp.CatchTime BETWEEN #{startTime}
                        AND #{endTime}
                  AND opp.IsEffective = 1
                  AND opp.projectId = #{projectId}
                GROUP BY
                    opp.SalesAttributionId
            ) t
        GROUP BY
            t.name

    -->

    <select id="getAllRegionNew" parameterType="java.util.Map" resultType="java.util.Map">
        select DISTINCT ComGUID id,org.OrgName name
        from b_project bp
                 INNER JOIN s_organization org on org.id = bp.ComGUID
        where bp.IsDel = 0 and bp.isSyn = 1 ${where}
    </select>

    <select id="getAllRegion" resultType="java.util.Map">
        select ID id,ProjectName name from b_project where isRegion = 1 and isSyn = 1
    </select>

    <select id="getProList" parameterType="java.util.List" resultType="java.lang.String">
        select DISTINCT ID from b_project
        where ComGUID in (
          <foreach collection="list" separator="," item="item">
              #{item}
          </foreach>
            ) and isSyn = 1
    </select>

    <select id="getRegionDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        SELECT
            t.name,
            sum( t.oppSum ) oppSum,
            sum( t.orderSum ) orderSum,
            sum( t.reportSum ) reportSum,
            sum( t.newOppCount ) newOppCount
        FROM
            (
                SELECT
                    bp.AreaName name,
                    count( 1 ) oppSum,
                    0 orderSum,
                    0 reportSum,
                    0 newOppCount
                FROM
                    b_project_opportunity opp
                        LEFT JOIN b_project bp ON bp.id = opp.projectId
                WHERE
                    opp.IsEffective = 1
                    <if test="regionList!=null and regionList.size()>0">
                        and bp.comguid in (
                        <foreach collection="regionList" item="item" separator=",">
                            #{item}
                        </foreach>
                        )
                    </if>
                GROUP BY
                    bp.comguid,bp.AreaName
                UNION ALL
                SELECT
                    bp.AreaName name,
                    0 oppSum,
                    sum( CASE WHEN opp.ClueStatus IN ( 7, 8 ) THEN 1 ELSE 0 END ) orderSum,
                    sum( CASE WHEN opp.ClueStatus NOT IN ( 7, 8 ) THEN 1 ELSE 0 END ) reportSum,
                    count( 1 ) newOppCount
                FROM
                    b_project_opportunity opp
                        LEFT JOIN b_project bp ON bp.id = opp.projectId
                WHERE
                    opp.CatchTime BETWEEN #{startTime}
                        AND #{endTime}
                  AND opp.IsEffective = 1
                <if test="regionList!=null and regionList.size()>0">
                  and bp.comguid in (
                    <foreach collection="regionList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                GROUP BY
                    bp.comguid,bp.AreaName
            ) t
        GROUP BY
            t.name
    </select>


    <select id="getProDealStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
            bp.ProjectName name,
            opp.projectId,
            count( tr.TradeGUID ) dealCount,
            ifnull( sum( tr.HtTotal ), 0 ) dealAmount
        FROM
            b_project_opportunity opp
                LEFT JOIN b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
                AND tr.IsClosed = 0
                LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE opp.projectId in (
                <foreach collection="proIds" separator="," item="item">
                    #{item}
                </foreach>
                )
            and tr.tradeTime BETWEEN #{startTime}
            AND #{endTime}
        GROUP BY
            opp.projectId
    </select>

    <select id="getProDealStatisticsNew" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
        bp.ProjectName name,
        bp.id projectId,
        ifnull(sum(opp.DealCnt),0) dealCount,
        format(ifnull(sum(opp.DealAmount),0)/10000,2) dealAmount
        FROM
        b_project bp
        LEFT JOIN t_data_statistics opp ON bp.id = opp.ProjectId and opp.DealTime BETWEEN #{startTime}
        AND #{endTime}
        WHERE bp.id in (
        <foreach collection="proIds" separator="," item="item">
            #{item}
        </foreach>
        )
        GROUP BY
        bp.id
    </select>

    <select id="getUserDealStatisticsNew" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
            ba.EmployeeName name,
        format(ifnull(sum(DealAmount),0)/10000,2) dealAmount,
        ifnull(sum(DealCnt),0) dealCount
        FROM
            t_data_statistics opp
                LEFT JOIN b_account ba ON ba.UserName = opp.UserCode
        WHERE opp.ProjectId in (
        <foreach collection="proIds" separator="," item="item">
            #{item}
        </foreach>
        )  and opp.UserCode in (
        <foreach collection="userCode" separator="," item="item">
            #{item}
        </foreach>
        )
          and opp.DealTime BETWEEN #{startTime}
            AND #{endTime}
        GROUP BY
            opp.UserCode
    </select>

    <select id="getUserDealStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
            ( CASE WHEN opp.SalesAttributionId IS NULL THEN '公池客户' ELSE ba.EmployeeName END ) name,
        count( tr.TradeGUID ) dealCount,
        ifnull( sum( tr.HtTotal ), 0 ) dealAmount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
        AND tr.IsClosed = 0
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        WHERE opp.projectId = #{projectId}
        and tr.tradeTime BETWEEN #{startTime}
        AND #{endTime}
        GROUP BY
            opp.SalesAttributionId
    </select>

    <select id="getRegionDealStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
        bp.AreaName name,
        count( tr.TradeGUID ) dealCount,
        ifnull( sum( tr.HtTotal ), 0 ) dealAmount
        FROM
        b_project_opportunity opp
        LEFT JOIN b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
        AND tr.IsClosed = 0
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE tr.tradeTime BETWEEN #{startTime}
        AND #{endTime}
        <if test="regionList!=null and regionList.size()>0">
            and bp.comguid in (
            <foreach collection="regionList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.comguid,bp.AreaName
    </select>

    <select id="getRegionDealStatisticsNew" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.DealStatistics">
        SELECT
        org.OrgName name,
        format(ifnull(sum(opp.DealAmount),0)/10000,2) dealAmount,
        ifnull(sum(opp.DealCnt),0) dealCount
        FROM
        b_project bp
        LEFT JOIN s_organization org on org.id = bp.ComGUID
        LEFT JOIN t_data_statistics opp ON bp.id = opp.ProjectId AND opp.DealTime BETWEEN #{startTime} and #{endTime}
        WHERE 1 = 1
        <if test="regionList!=null and regionList.size()>0">
            and bp.comguid in (
            <foreach collection="regionList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        bp.comguid
    </select>

    <select id="getFollowUpStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.FollowUpStatistics">
        SELECT
            bp.ProjectName name,
            count(opp.OpportunityClueId) oppCount,
            count(re.OpportunityClueId) visitCount,
            count(re1.OpportunityClueId) firstVisitCount
        FROM
            b_project_opportunity opp
                LEFT JOIN (select DISTINCT OpportunityClueId from b_followup_record where FollowUpWayDesc = '来访' and FollowUpDate BETWEEN #{startTime} AND #{endTime}) re ON re.OpportunityClueId = opp.OpportunityClueId
                LEFT JOIN (select DISTINCT OpportunityClueId from b_followup_record where FollowUpWayDesc = '来访' and IsFirstFollowUp = 1 and FollowUpDate BETWEEN #{startTime} AND #{endTime}) re1 ON re1.OpportunityClueId = opp.OpportunityClueId
                LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE
            opp.CatchTime BETWEEN #{startTime} AND #{endTime}
            <if test="proIds!=null and proIds.size()>0">
                and bp.id in (
                <foreach collection="proIds" separator="," item="item">
                    #{item}
                </foreach>
                )
            </if>
        GROUP BY
            opp.projectId
    </select>

    <select id="getProUsers" parameterType="java.lang.String" resultType="java.lang.String">
        select ba.UserName from b_account ba
                              INNER JOIN s_jobsuserrel rel on ba.id = rel.AccountID and IsDel = 0
                              INNER JOIN s_jobs jobs on rel.JobID = jobs.ID and jobs.isIdm = 0
                              INNER JOIN s_commonjobs com on jobs.CommonJobID = com.ID and com.isIdm = 0
                              INNER JOIN s_organization org on org.id = jobs.JobOrgID and org.IsDel = 0
                              INNER JOIN b_project bp on bp.ID = org.ProjectID and bp.IsDel = 0
        where com.JobCode = #{jobCode} and bp.ID = #{projectId}
    </select>

    <select id="getPros" parameterType="java.lang.String" resultType="java.lang.String">
        select ID from b_project where ComGUID = (select ComGUID from b_project where ID = #{projectId}) and isSyn = 1
    </select>

    <select id="getUserAscInsPro" resultType="java.lang.String">
        select rel.AccountID
        from s_jobsuserrel rel
            left join s_jobs job on rel.JobID = job.ID
            left join s_commonjobs com on job.CommonJobID = com.ID
            left join s_organization org on job.JobOrgID = org.ID
            left join b_account ba on rel.AccountID = ba.ID
        where job.Status = 1
            and job.IsDel = 0
            and org.ProjectID in (
            <foreach collection="proIds" item="item" separator=",">
                #{item}
            </foreach>
            )
            and com.JobCode in ('zygw', 'qyzygw')
            and ba.Status = 1
            and ba.IsDel = 0
    </select>
    <select id="getUserAscInsProHasLz" resultType="java.lang.String">
        select rel.AccountID
        from s_jobsuserrel rel
            left join s_jobs job on rel.JobID = job.ID
            left join s_commonjobs com on job.CommonJobID = com.ID
            left join s_organization org on job.JobOrgID = org.ID
            left join b_account ba on rel.AccountID = ba.ID
        where job.Status = 1
            and job.IsDel = 0
            and org.ProjectID in (
            <foreach collection="proIds" item="item" separator=",">
                #{item}
            </foreach>
            )
            and com.JobCode in ('zygw', 'qyzygw')
            and ba.IsDel = 0
    </select>
    <select id="getUserAscInsGroup" resultType="java.lang.String">
        select rel.AccountID
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on rel.AccountID = ba.ID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zygw', 'qyzygw')
        and ba.Status = 1
        and ba.IsDel = 0
    </select>

    <select id="getSourceModeDataStatistics" resultType="cn.visolink.system.channel.model.SourceModeDataStatistics">
        select tt.projectId,
        tt.name,
        @current_name := name,
        tt.areaName,
        tt.comguid,
        tt.orgLevel,
        tt.cusTypeLevel,
        tt.customerType,
        sum(tt.allSum) allSum,
        sum(tt.ibbSum) ibbSum,
        sum(tt.nvSum)  nvSum,
        sum(tt.fecSum) fecSum,
        sum(tt.omaSum) omaSum,
        sum(tt.barSum) barSum,
        sum(tt.grSum)  grSum,
        sum(tt.cdSum)  cdSum,
        sum(tt.ckSum)  ckSum,
        sum(tt.bpSum)  bpSum,
        sum(tt.sdSum)  sdSum,
        sum(tt.pwfSum) pwfSum,
        sum(tt.sepSum) sepSum,
        sum(tt.wqtSum) wqtSum,
        sum(tt.otcSum) otcSum,
        sum(tt.mmdSum) mmdSum,
        sum(tt.thaSum) thaSum,
        sum(tt.gacSum) gacSum,
        sum(tt.gwvSum) gwvSum,
        sum(tt.pwvSum) pwvSum,
        sum(tt.pttSum) pttSum,
        sum(tt.gttSum) gttSum,
        sum(tt.etSum)  etSum,
        UUID()         ionRowKeyId
        from (
            select '670869647114347'         projectId,
                '万洋集团'                     name,
                '万洋集团'                     areaName,
                '-1'                         comguid,
                1                            orgLevel,
                1                            cusTypeLevel,
                '报备客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project_opportunity opp
                left join b_project bp on opp.projectId = bp.ID
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                5                            orgLevel,
                1                            cusTypeLevel,
                '报备客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                6                            orgLevel,
                2                            cusTypeLevel,
                '新增客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and opp.IsTaoGuest is null
                and opp.IsReferralOk = 0
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                7                            orgLevel,
                3                            cusTypeLevel,
                '来访客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 2 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                8                            orgLevel,
                4                            cusTypeLevel,
                '成交客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 8 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                9                            orgLevel,
                1                            cusTypeLevel,
                '报备客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                10                            orgLevel,
                2                            cusTypeLevel,
                '新增客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and opp.IsTaoGuest is null
                and opp.IsReferralOk = 0
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                11                            orgLevel,
                3                            cusTypeLevel,
                '来访客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 2 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                12                            orgLevel,
                4                            cusTypeLevel,
                '成交客户数'                   customerType,
                count(opp.OpportunityClueId)                                               allSum,
               ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
               ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
               ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
               ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
               ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
               ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
               ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
               ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
               ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
               ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
               ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
               ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
               ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
               ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
               ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
               ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
               ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
               ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
               ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
               ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
               ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
               ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 8 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID, bp.ID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                5                            orgLevel,
                1                            cusTypeLevel,
                '报备客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                6                            orgLevel,
                2                            cusTypeLevel,
                '新增客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                7                            orgLevel,
                3                            cusTypeLevel,
                '来访客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID
            union all
            select bp.ComGUID                projectId,
                bp.AreaName                  name,
                bp.AreaName                  areaName,
                '670869647114347'            comguid,
                8                            orgLevel,
                4                            cusTypeLevel,
                '成交客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ComGUID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                9                            orgLevel,
                1                            cusTypeLevel,
                '报备客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                10                            orgLevel,
                2                            cusTypeLevel,
                '新增客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                11                            orgLevel,
                3                            cusTypeLevel,
                '来访客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ID
            union all
            select bp.id                        projectId,
                bp.ProjectName               name,
                bp.AreaName                  areaName,
                bp.ComGUID                   comguid,
                12                            orgLevel,
                4                            cusTypeLevel,
                '成交客户数'                   customerType,
                0                            allSum,
                0        ibbSum,
                0        nvSum,
                0        fecSum,
                0        omaSum,
                0       barSum,
                0        grSum,
                0    cdSum,
                0       ckSum,
                0        bpSum,
                0        sdSum,
                0  pwfSum,
                0      sepSum,
                0         wqtSum,
                0     otcSum,
                0        mmdSum,
                0 thaSum,
                0    gacSum,
                0     gwvSum,
                0     pwvSum,
                0       pttSum,
                0       gttSum,
                0        etSum
            from b_project bp
            where bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
            GROUP BY bp.ID
        ) tt
        GROUP BY tt.comguid,tt.projectId,tt.customerType order by name,tt.cusTypeLevel
    </select>
    <select id="getSourceModeDataStatisticsXt"
            resultType="cn.visolink.system.channel.model.SourceModeDataStatistics">
        select tt.projectId,
               tt.name,
               @current_name := name,
                tt.areaName,
                tt.comguid,
                tt.orgLevel,
                tt.cusTypeLevel,
                tt.customerType,
                sum(tt.allSum) allSum,
                sum(tt.ibbSum) ibbSum,
                sum(tt.nvSum)  nvSum,
                sum(tt.fecSum) fecSum,
                sum(tt.omaSum) omaSum,
                sum(tt.barSum) barSum,
                sum(tt.grSum)  grSum,
                sum(tt.cdSum)  cdSum,
                sum(tt.ckSum)  ckSum,
                sum(tt.bpSum)  bpSum,
                sum(tt.sdSum)  sdSum,
                sum(tt.pwfSum) pwfSum,
                sum(tt.sepSum) sepSum,
                sum(tt.wqtSum) wqtSum,
                sum(tt.otcSum) otcSum,
                sum(tt.mmdSum) mmdSum,
                sum(tt.thaSum) thaSum,
                sum(tt.gacSum) gacSum,
                sum(tt.gwvSum) gwvSum,
                sum(tt.pwvSum) pwvSum,
                sum(tt.pttSum) pttSum,
                sum(tt.gttSum) gttSum,
                sum(tt.etSum)  etSum,
                UUID()         ionRowKeyId
        from (
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            1                            orgLevel,
            1                            cusTypeLevel,
            '报备客户数'                   customerType,
            count(opp.OpportunityClueId)                                               allSum,
            ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
            ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
            ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
            ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
            ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
            ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
            ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
            ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
            ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
            ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
            ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
            ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
            ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
            ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
            ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
            ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
            ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
            ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
            ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
            ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
            ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
            ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
            GROUP BY bp.ComGUID, bp.ID
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            2                            orgLevel,
            2                            cusTypeLevel,
            '新增客户数'                   customerType,
            count(opp.OpportunityClueId)                                               allSum,
            ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
            ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
            ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
            ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
            ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
            ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
            ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
            ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
            ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
            ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
            ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
            ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
            ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
            ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
            ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
            ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
            ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
            ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
            ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
            ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
            ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
            ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus &lt; 9 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
            and opp.IsTaoGuest is null
            and opp.IsReferralOk = 0
            GROUP BY bp.ComGUID, bp.ID
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            3                            orgLevel,
            3                            cusTypeLevel,
            '来访客户数'                   customerType,
            count(opp.OpportunityClueId)                                               allSum,
            ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
            ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
            ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
            ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
            ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
            ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
            ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
            ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
            ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
            ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
            ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
            ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
            ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
            ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
            ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
            ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
            ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
            ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
            ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
            ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
            ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
            ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 2 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
            GROUP BY bp.ComGUID, bp.ID
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            4                            orgLevel,
            4                            cusTypeLevel,
            '成交客户数'                   customerType,
            count(opp.OpportunityClueId)                                               allSum,
            ifnull(sum(case when opp.SourceMode = '以商招商' then 1 else 0 end), 0)        ibbSum,
            ifnull(sum(case when opp.SourceMode = '自然来访' then 1 else 0 end), 0)        nvSum,
            ifnull(sum(case when opp.SourceMode = '58同城' then 1 else 0 end), 0)        fecSum,
            ifnull(sum(case when opp.SourceMode = '户外广告' then 1 else 0 end), 0)        omaSum,
            ifnull(sum(case when opp.SourceMode = '商协会引荐' then 1 else 0 end), 0)       barSum,
            ifnull(sum(case when opp.SourceMode = '政府推荐' then 1 else 0 end), 0)        grSum,
            ifnull(sum(case when opp.SourceMode = '企业陌拜（派单）' then 1 else 0 end), 0)    cdSum,
            ifnull(sum(case when opp.SourceMode = 'Call客' then 1 else 0 end), 0)       ckSum,
            ifnull(sum(case when opp.SourceMode = '横幅海报' then 1 else 0 end), 0)        bpSum,
            ifnull(sum(case when opp.SourceMode = '短信投放' then 1 else 0 end), 0)        sdSum,
            ifnull(sum(case when opp.SourceMode = '付费微信朋友圈广告' then 1 else 0 end), 0)   pwfSum,
            ifnull(sum(case when opp.SourceMode = '搜索引擎推广' then 1 else 0 end), 0)      sepSum,
            ifnull(sum(case when opp.SourceMode = '万企通' then 1 else 0 end), 0)         wqtSum,
            ifnull(sum(case when opp.SourceMode = '其他新媒体渠道' then 1 else 0 end), 0)     otcSum,
            ifnull(sum(case when opp.SourceMode = '彩信投放' then 1 else 0 end), 0)        mmdSum,
            ifnull(sum(case when opp.SourceMode = '付费抖音/今日头条广告' then 1 else 0 end), 0) thaSum,
            ifnull(sum(case when opp.SourceMode = '集团分配客户线索' then 1 else 0 end), 0)    gacSum,
            ifnull(sum(case when opp.SourceMode = '个人微信视频号' then 1 else 0 end), 0)     gwvSum,
            ifnull(sum(case when opp.SourceMode = '项目微信视频号' then 1 else 0 end), 0)     pwvSum,
            ifnull(sum(case when opp.SourceMode = '项目抖音号' then 1 else 0 end), 0)       pttSum,
            ifnull(sum(case when opp.SourceMode = '个人抖音号' then 1 else 0 end), 0)       gttSum,
            ifnull(sum(case when opp.SourceMode = '展会拓客' then 1 else 0 end), 0)        etSum
            from b_project_opportunity opp
            left join b_project bp on opp.projectId = bp.ID
            where ClueStatus = 8 and opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
            GROUP BY bp.ComGUID, bp.ID
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            1                            orgLevel,
            1                            cusTypeLevel,
            '报备客户数'                   customerType,
            0                            allSum,
            0        ibbSum,
            0        nvSum,
            0        fecSum,
            0        omaSum,
            0       barSum,
            0        grSum,
            0    cdSum,
            0       ckSum,
            0        bpSum,
            0        sdSum,
            0  pwfSum,
            0      sepSum,
            0         wqtSum,
            0     otcSum,
            0        mmdSum,
            0 thaSum,
            0    gacSum,
            0     gwvSum,
            0     pwvSum,
            0       pttSum,
            0       gttSum,
            0        etSum
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            2                            orgLevel,
            2                            cusTypeLevel,
            '新增客户数'                   customerType,
            0                            allSum,
            0        ibbSum,
            0        nvSum,
            0        fecSum,
            0        omaSum,
            0       barSum,
            0        grSum,
            0    cdSum,
            0       ckSum,
            0        bpSum,
            0        sdSum,
            0  pwfSum,
            0      sepSum,
            0         wqtSum,
            0     otcSum,
            0        mmdSum,
            0 thaSum,
            0    gacSum,
            0     gwvSum,
            0     pwvSum,
            0       pttSum,
            0       gttSum,
            0        etSum
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            3                            orgLevel,
            3                            cusTypeLevel,
            '来访客户数'                   customerType,
            0                            allSum,
            0        ibbSum,
            0        nvSum,
            0        fecSum,
            0        omaSum,
            0       barSum,
            0        grSum,
            0    cdSum,
            0       ckSum,
            0        bpSum,
            0        sdSum,
            0  pwfSum,
            0      sepSum,
            0         wqtSum,
            0     otcSum,
            0        mmdSum,
            0 thaSum,
            0    gacSum,
            0     gwvSum,
            0     pwvSum,
            0       pttSum,
            0       gttSum,
            0        etSum
            union all
            select '670869647114347'         projectId,
            '万洋集团'                     name,
            '万洋集团'                     areaName,
            '-1'                         comguid,
            4                            orgLevel,
            4                            cusTypeLevel,
            '成交客户数'                   customerType,
            0                            allSum,
            0        ibbSum,
            0        nvSum,
            0        fecSum,
            0        omaSum,
            0       barSum,
            0        grSum,
            0    cdSum,
            0       ckSum,
            0        bpSum,
            0        sdSum,
            0  pwfSum,
            0      sepSum,
            0         wqtSum,
            0     otcSum,
            0        mmdSum,
            0 thaSum,
            0    gacSum,
            0     gwvSum,
            0     pwvSum,
            0       pttSum,
            0       gttSum,
            0        etSum
            ) tt
        GROUP BY tt.comguid,tt.projectId,tt.customerType order by name,tt.cusTypeLevel
    </select>

    <!--获取集团统计-->
    <select id="getGroupDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select '' projectId,
        '万洋集团' name,
        '万洋集团' areaName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        count( opp.OpportunityClueId ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_project_opportunity opp on bp.id = opp.projectId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_customer_add_log log on bp.id = log.project_id
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE log.report_create_time BETWEEN #{startTime} AND #{endTime}
        and log.is_add = 1
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        ifnull(sum(case when cl.customer_level = 'A' then 1 else 0 end),0) aCount,
        ifnull(sum(case when cl.customer_level = 'B' then 1 else 0 end),0) bCount,
        ifnull(sum(case when cl.customer_level = 'C' then 1 else 0 end),0) cCount,
        ifnull(sum(case when cl.customer_level = 'D' then 1 else 0 end),0) dCount
        FROM b_project bp
        left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl on bp.id = cl.project_id
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
        , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_followup_record fo on bp.id = fo.MainFollowProjectId
        left join b_project_opportunity opp on fo.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE opp.ClueStatus > 0
        and fo.Status = 2 and FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        union all
        SELECT
        bp.id projectId,
        bp.ProjectName name,
        bp.AreaName areaName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM b_project bp
        left join b_opportunity_trade tr on bp.id = tr.ProjectID
        left join b_project_opportunity opp ON tr.IntentionID = opp.IntentionID
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        WHERE opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        ) tt
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>
    <select id="getGroupDataStatisticsGather" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        where opp.ClueStatus > 0
        and fol.Status = 2 and fol.FollowUpDate BETWEEN #{startTime} AND #{endTime} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>
    <select id="getGroupDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE opp.ClueStatus > 0
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>
    <!--获取人员统计-->
    <select id="getGroupUserDataStatistics" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProDataStatistics">
        select
        tt.name,
        tt.areaName,
        tt.projectId,
        tt.projectName,
        tt.orgName,
        tt.SalesAttributionId userId,
        tt.UserName userName,
        sum(tt.oppSum) oppSum,
        sum(tt.addSum) addSum,
        sum(tt.orderSum) orderSum,
        sum(tt.callCount) callCount,
        sum(tt.firstComeVisitCount) firstComeVisitCount,
        sum(tt.threeOnesBeforeReComeVisitCount) threeOnesBeforeReComeVisitCount,
        sum(tt.threeOnesAfterReComeVisitCount) threeOnesAfterReComeVisitCount,
        sum(tt.sjThreeOnesCount) sjThreeOnesCount,
        sum(tt.jsThreeOnesCount) jsThreeOnesCount,
        sum(tt.firstVisitCount) firstVisitCount,
        sum(tt.reVisitCount) reVisitCount,
        round(sum(tt.firstVisitCount+tt.reVisitCount/1.5), 1) as followVisitWorkload,
        sum(tt.followVisitCount) followVisitCount,
        sum(tt.aCount) aCount,
        sum(tt.bCount) bCount,
        sum(tt.cCount) cCount,
        sum(tt.dCount) dCount
        from (
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        count( 1 ) oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = opp.projectId
        WHERE 1 = 1
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &lt; 9
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.SalesAttributionId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        log.sales_attribution_id SalesAttributionId,
        log.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        count(DISTINCT log.opportunity_clue_id ) addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_customer_add_log log
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = log.sales_attribution_id
        LEFT JOIN b_project bp ON bp.id = log.project_id
        WHERE log.report_create_time BETWEEN #{startTime} AND #{endTime}
        and log.is_add = 1
        <if test="teamIds!=null">
            and log.sales_attribution_team_id in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and log.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        log.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        cl.sales_attribution_id SalesAttributionId,
        cl.sales_attribution_team_name orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        sum(case when cl.customer_level = 'A' then 1 else 0 end) aCount,
        sum(case when cl.customer_level = 'B' then 1 else 0 end) bCount,
        sum(case when cl.customer_level = 'C' then 1 else 0 end) cCount,
        sum(case when cl.customer_level = 'D' then 1 else 0 end) dCount
        FROM
        (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
            SELECT opportunity_cue_id,
            MAX(create_time) AS max_create_time
            FROM b_customer_level_record
            WHERE create_time  &lt; #{endTime}
            GROUP BY opportunity_cue_id
        )) cl
        left join b_project_opportunity opp on cl.opportunity_cue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = cl.project_id
        WHERE 1 = 1
        <if test="teamIds!=null">
            and cl.sales_attribution_team_id in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and cl.sales_attribution_id in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and opp.ClueStatus &gt; 0 and cl.customer_level in ('A','B','C','D')
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        cl.sales_attribution_id
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        fo.UserId SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        0 orderSum,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 1 and FollowUpType = 1 THEN fo.OpportunityClueId END) callCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 1 THEN fo.OpportunityClueId END) firstComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &lt;= opp.IsThreeOnesDate THEN fo.OpportunityClueId END) threeOnesBeforeReComeVisitCount,
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)  threeOnesAfterReComeVisitCount,
        COUNT(DISTINCT CASE WHEN fo.IsThreeOnesStatus = 1 THEN fo.OpportunityClueId END) sjThreeOnesCount,
        ROUND(
        COUNT(DISTINCT CASE WHEN FollowUpWay = 2 and FollowUpType = 1 and IsFirstComeVisitStatus = 0
        and fo.FollowUpDate &gt; opp.IsThreeOnesDate THEN fo.OpportunityClueId END)/${countThreeOnes}
        , 1)                                                              jsThreeOnesCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 1 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        firstVisitCount,
        COUNT(DISTINCT CASE
        WHEN IsFirstVisitStatus = 0 and fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        reVisitCount,
        COUNT(DISTINCT CASE
        WHEN fo.FollowUpWay in ('3', '4') and FollowUpType = 1 and fo.IsSignAfterVisitStatus = 1
        THEN fo.OpportunityClueId END)                                        followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_followup_record fo
        left join b_project_opportunity opp on opp.OpportunityClueId = fo.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        LEFT JOIN b_account ba ON ba.id = fo.UserId
        LEFT JOIN b_project bp ON bp.id = fo.ProjectId
        WHERE fo.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.ClueStatus > 0
        and fo.Status = 2
        and fo.UserId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        and fo.IsReferralHistory = 0 and fo.rectification_status in (0,3)
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        fo.UserId
        union all
        SELECT
        bp.ID projectId,
        bp.ProjectName projectName,
        bp.AreaName areaName,
        opp.SalesAttributionId,
        opp.SalesAttributionTeamName orgName,
        ba.EmployeeName name,
        ba.UserName,
        0 oppSum,
        0 addSum,
        count(distinct tr.IntentionID ) orderSum,
        0 callCount,
        0 firstComeVisitCount,
        0 threeOnesBeforeReComeVisitCount,
        0 threeOnesAfterReComeVisitCount,
        0 sjThreeOnesCount,
        0 jsThreeOnesCount,
        0 firstVisitCount,
        0 reVisitCount,
        0 followVisitCount,
        0 aCount,
        0 bCount,
        0 cCount,
        0 dCount
        FROM
        b_project_opportunity opp
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        left join b_opportunity_trade tr ON tr.IntentionID = opp.IntentionID
        LEFT JOIN b_account ba ON ba.id = opp.SalesAttributionId
        LEFT JOIN b_project bp ON bp.id = tr.ProjectID
        WHERE opp.ClueStatus &gt; 0
        and tr.TradeStatus = '激活' AND tr.tradeTime BETWEEN #{startTime} AND #{endTime}
        <if test="teamIds!=null">
            and opp.SalesAttributionTeamId in(
            <foreach collection="teamIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        and opp.SalesAttributionId in (
        <foreach collection="userIds" item="item" separator=",">
            #{item}
        </foreach>
        )
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        GROUP BY
        opp.SalesAttributionId) tt
        GROUP BY
        tt.SalesAttributionId
    </select>
    <select id="getGroupUserDataStatisticsGather" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowUpWay                                                                                       followUpWay,
        fol.FollowUpWayDesc                                                                                   followUpWayDesc,
        bp.AreaName                                                                                           areaName,
        bp.ID                                                                                                 projectId,
        bp.ProjectName                                                                                        projectName,
        if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                                                      reCustomerName,
        concat(left(opp.CustomerName, 1), '**')                                                               customerName,
        opp.CustomerMobile                                                                                    reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****',
        right(opp.CustomerMobile, 4))                                                                  customerMobile,
        opp.CustomerAddress                                                                                   customerAddress,
        bin.DetailedAddress                                                                                   detailedAddress,
        opp.Contacts                                                                                          contacts,
        ba1.EmployeeName                                                                                      userName,
        fol.FollowUpDate                                                                                      followUpDate,
        fol.FollowUpDetail                                                                                    followUpDetail,
        fol.NextFollowUpDate                                                                                  nextFollowUpDate,
        fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                                               isThreeOnesStatusDesc,
        opp.SourceMode                                                                                        sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1, 2))                                                                          enclosures,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                                                drawingQuotationUrls,
        fol.Status                                                                                            status,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end), ''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),
        ''))                                                approveUser,
        fol.ApprovalTime                                                                                      approvalTime,
        fol.RejectReason                                                                                      rejectReason,
        fol.projectClueId                                                                                     projectClueId,
        fol.opportunityClueId                                                                                 opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        WHERE fol.FollowUpDate BETWEEN #{startTime} AND #{endTime}
        and opp.ClueStatus > 0 and fol.Status = 2
        and fol.UserId = #{userId} and fol.IsReferralHistory = 0
        <if test="followUpType != '' and followUpType != null and 'callCount'.toString() == followUpType">
            and fol.FollowUpWay = 1 and fol.FollowUpType = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesBeforeReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &lt;= opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'threeOnesAfterReComeVisitCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'sjThreeOnesCount'.toString() == followUpType">
            and fol.IsThreeOnesStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'jsThreeOnesCount'.toString() == followUpType">
            and fol.FollowUpWay = 2 and fol.FollowUpType = 1 and fol.IsFirstComeVisitStatus = 0
            and fol.FollowUpDate &gt; opp.IsThreeOnesDate
        </if>
        <if test="followUpType != '' and followUpType != null and 'firstVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 1 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'reVisitCount'.toString() == followUpType">
            and fol.IsFirstVisitStatus = 0 and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1
            and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="followUpType != '' and followUpType != null and 'followVisitCount'.toString() == followUpType">
            and fol.FollowUpWay in ('3', '4') and fol.FollowUpType = 1 and fol.IsSignAfterVisitStatus = 1
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>
    <select id="getGroupUserDataStatisticsGatherCc"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT opp.OpportunityClueId                                                                                 opportunityClueId,
            opp.ProjectClueId                                                                                     projectClueId,
            opp.projectId                                                                                         projectId,
            opp.ProjectName                                                                                       projectName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'),
            opp.diy_hide_customer_name)                                                                        customerName,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(
            length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
            concat(left(opp.CustomerName, 1), '**'), opp.diy_hide_customer_name)
            else opp.CustomerName end)                                                                       oldCustomerName,
            opp.SourceMode                                                                                        sourceMode,
            inf.BelongIndustriseDesc                                                                              belongIndustriseDesc,
            opp.Contacts                                                                                          contacts,
            CONCAT(
            LEFT(opp.CustomerMobile, 3),
            '****',
            RIGHT(opp.CustomerMobile, 4))                                                                 customerMobile,
            (case
            when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT(opp.CustomerMobile, 3), '****',
            RIGHT(opp.CustomerMobile, 4))
            else opp.CustomerMobile end)                                                                     oldCustomerMobile,
            opp.ReportCreateTime                                                                                  reportCreateTime,
            opp.ReportUserName                                                                                    reportUserName,
            opp.ReportTeamName                                                                                    reportTeamName,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            )                                                                                                 reportUserRole,
            opp.TokerTheLatestFollowDate                                                                          tokerTheLatestFollowDate,
            opp.SalesAttributionName                                                                              salesAttributionName,
            opp.SalesAttributionTime                                                                              salesAttributionTime,
            opp.SalesFollowExpireDate                                                                             salesFollowExpireDate,
            opp.TheFirstVisitDate                                                                                 theFirstVisitDate,
            opp.VisitDate                                                                                         visitDate,
            cl.customer_level                                                                                     customerLevel,
            opp.TradeLevel                                                                                        tradeLevel,
            opp.SalesTheLatestFollowDate                                                                          salesTheLatestFollowDate,
            opp.DeliveryDate                                                                                      deliveryDate,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN
            '是'
            ELSE
            '否'
            END
            )                                                                                                 isTaoGuest,
            (
            CASE
            WHEN opp.ClueStatus = 1 THEN
            '报备'
            WHEN opp.ClueStatus = 2 THEN
            '到访'
            WHEN opp.ClueStatus = 3 THEN
            '交房'
            WHEN opp.ClueStatus = 4 THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = 12 THEN
            '相似客户审批驳回'
            WHEN opp.ClueStatus = 8 THEN
            '签约'
            ELSE
            '作废'
            END
            )                                                                                                 clueStatus,
            (case opp.IsPark when 1 then '是' when 0 then '否' else '' end)                                         isPark,
            opp.ParkName                                                                                          parkName,
            opp.ParkAddress                                                                                       parkAddress,
            opp.ParkFloor                                                                                         parkFloor,
            opp.CustomerAddress                                                                                   customerAddress,
            inf.DetailedAddress                                                                                   detailedAddress,
            inf.BelongIndustriseTwoDesc                                                                           belongIndustriseTwoDesc,
            opp.MainProducts                                                                                      businessProducts,
            inf.MainRawMaterials                                                                                  mainRawMaterials,
            inf.PeopleNum                                                                                         peopleNum,
            inf.ExistingPlantArea                                                                                 existingPlantArea,
            inf.AnnualOutputValue                                                                                 annualOutputValue,
            inf.TaxAmountYear                                                                                     taxAmountYear,
            inf.WorkShopTypeDesc                                                                                  workShopTypeDesc,
            opp.PlantTypeDesc                                                                                     plantTypeDesc,
            inf.IntentionTypeDesc                                                                                 intentionTypeDesc,
            inf.IntentionalAreaDesc                                                                               intentionalAreaDesc,
            inf.IntentionalPrice                                                                                  acceptPriceDesc,
            inf.IntentionalFloorDesc                                                                              intentionalFloorDesc,
            opp.Label                                                                                             label,
            bp.AreaName                                                                                           areaName,
            (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status = 1) isEditOk,
            (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end)
            from b_followup_record
            where IsDel = 0
            and Status in (1, 3, 4, 5)
            and FollowUpType = 1
            and FollowUpWay in (1, 2, 3, 4, 5)
            and UserId = opp.SalesAttributionId
            and FollowUpDate > opp.CatchTime
            and FollowUpDate > '2024-03-15 22:00:00'
            and OpportunityClueId = opp.OpportunityClueId
            order by EditTime desc, CreateTime desc
            limit 1)                                                                                             isFollUpOk,
            opp.visit_count                                                                                       visitCount,
            opp.three_ones_before_count                                                                           threeOnesBeforeCount,
            opp.three_ones_after_count                                                                            threeOnesAfterCount,
            opp.come_visit_count                                                                                  comeVisitCount,
            opp.CreateTime                                                                                        createTime,
            bac.EmployeeName                                                                                      createUserName,
            opp.CustomerType                                                                                      customerType,
            inf.BelongIndustrise                                                                                  belongIndustrise,
            inf.BelongIndustriseTwo                                                                               belongIndustriseTwo,
            inf.BelongIndustriseThree                                                                             belongIndustriseThree,
            inf.BelongIndustriseFour                                                                              belongIndustriseFour,
            opp.MainProducts                                                                                      mainProducts,
            opp.Position                                                                                          position,
            opp.LegalPerson                                                                                       legalPerson,
            opp.LegalPersonPhone                                                                                  orderLegalPersonPhone,
            opp.LegalPersonCardNum                                                                                legalPersonCardNum,
            opp.EnterpriseType                                                                                    enterpriseType,
            opp.PostCode                                                                                          postCode,
            opp.Floor                                                                                             floor,
            opp.RentAndSaleType                                                                                   rentAndSaleType,
            opp.RentalPrice                                                                                       rentalPrice,
            inf.YxArea                                                                                            yxArea,
            inf.IntentionClass                                                                                    intentionClass,
            inf.IntentionType                                                                                     intentionType,
            inf.IntentionalPrice                                                                                  intentionalPrice,
            inf.NowRent                                                                                           nowRent,
            inf.NowOfficeSpace                                                                                    nowOfficeSpace,
            inf.PollutantDischarge                                                                                pollutantDischarge,
            inf.Zyreason                                                                                          zyreason,
            inf.ResistanceDesc                                                                                    resistanceDesc,
            inf.TechnologicalProcess                                                                              technologicalProcess,
            inf.MajorEquipment                                                                                    majorEquipment,
            inf.ImportantDescription                                                                              importantDescription,
            inf.ElectricityYear                                                                                   electricityYear,
            inf.WaterYear                                                                                         waterYear,
            (select distinct '是'
            from b_followup_record bfr
            where status = 2
            and IsThreeOnesStatus = 1
            and bfr.ProjectClueId = opp.ProjectClueId)                                                         isThreeOnes,
            (select GROUP_CONCAT(enclosureUrl)
            from b_enclosure
            where OpportunityClueId = opp.OpportunityClueId
            and enclosureType = 2)                                                                             enclosures
        FROM b_project_opportunity opp
            left join (SELECT opportunity_cue_id,customer_level,project_id,sales_attribution_team_id,sales_attribution_id FROM b_customer_level_record WHERE create_time &lt; #{endTime} AND (opportunity_cue_id, create_time) IN (
                SELECT opportunity_cue_id,
                MAX(create_time) AS max_create_time
                FROM b_customer_level_record
                WHERE create_time  &lt; #{endTime}
                GROUP BY opportunity_cue_id
            )) cl on cl.opportunity_cue_id = opp.OpportunityClueId
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            left join b_project bp on bp.ID = cl.project_id
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE cl.sales_attribution_id = #{userId} and opp.ClueStatus > 0
        <if test="followUpType != '' and followUpType != null and 'acount'.toString() == followUpType">
            and cl.customer_level = 'A'
        </if>
        <if test="followUpType != '' and followUpType != null and 'bcount'.toString() == followUpType">
            and cl.customer_level = 'B'
        </if>
        <if test="followUpType != '' and followUpType != null and 'ccount'.toString() == followUpType">
            and cl.customer_level = 'C'
        </if>
        <if test="followUpType != '' and followUpType != null and 'dcount'.toString() == followUpType">
            and cl.customer_level = 'D'
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND inf.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND inf.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND inf.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND inf.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>

    <select id="customerTradeCycleDataStatisticsGather"
            resultType="cn.visolink.system.channel.model.ProDataStatistics">
        <if test="searchType != '' and searchType != null and '1'.toString() == searchType">
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                group_cycle      dealCycle,
                0                reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            union all
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                0                dealCycle,
                group_cycle      reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
        </if>
        <if test="searchType != '' and searchType != null and '2'.toString() == searchType">
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                area_cycle       dealCycle,
                0                reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.AreaID = #{id}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            union all
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                0                dealCycle,
                area_cycle       reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.AreaID = #{id}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
        </if>
        <if test="searchType != '' and searchType != null and '3'.toString() == searchType">
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                project_cycle    dealCycle,
                0                reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.ID = #{tradeProId} and opp.projectId = #{oppProId}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            union all
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                0                dealCycle,
                project_cycle    reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.ID = #{tradeProId} and opp.projectId = #{oppProId}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
        </if>
        <if test="searchType != '' and searchType != null and '4'.toString() == searchType">
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                team_cycle       dealCycle,
                0                reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and opp.SalesAttributionTeamId = #{id}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            union all
            select log.opportunity_clue_id opportunityClueId,
                bp.AreaID        areaId,
                bp.AreaName      areaName,
                bp.ID            projectId,
                bp.ProjectName   projectName,
                ifnull(opp.diy_hide_customer_name,concat(left(opp.CustomerName,1),'**')) customerName,
                0                dealCycle,
                team_cycle       reDealCycle
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and opp.SalesAttributionTeamId = #{id}
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="orgIds!=null and orgIds.size() > 0">
                    and opp.SalesAttributionTeamId not in
                    <foreach collection="orgIds" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
        </if>
    </select>

    <select id="customerTradeCycleDataStatistics"
            resultType="cn.visolink.system.channel.model.ProDataStatistics">
        <if test="searchType != '' and searchType != null and '1'.toString() == searchType">
            select '-1'             id,
                '万洋集团'           name,
                type             type,
                ROUND(avg(dealCycle), 0)   avgDealCycle,
                max(dealCycle)   maxDealCycle,
                min(dealCycle)   minDealCycle,
                ROUND(avg(reDealCycle), 0) avgReDealCycle,
                max(reDealCycle) maxReDealCycle,
                min(reDealCycle) minReDealCycle
            from (
            select log.opportunity_clue_id,
                group_cycle                  dealCycle,
                0                            reDealCycle,
                '1'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            union all
            select log.opportunity_clue_id,
                0                            dealCycle,
                group_cycle                  reDealCycle,
                '1'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            ) t
        </if>
        <if test="searchType != '' and searchType != null and '2'.toString() == searchType">
            select areaId           id,
                areaName         name,
                type             type,
                ROUND(avg(dealCycle), 0)   avgDealCycle,
                max(dealCycle)   maxDealCycle,
                min(dealCycle)   minDealCycle,
                ROUND(avg(reDealCycle), 0) avgReDealCycle,
                max(reDealCycle) maxReDealCycle,
                min(reDealCycle) minReDealCycle
            from (
            select log.opportunity_clue_id,
                bp.AreaID                    areaId,
                bp.AreaName                  areaName,
                area_cycle                  dealCycle,
                0                            reDealCycle,
                '2'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            union all
            select log.opportunity_clue_id,
                bp.AreaID                    areaId,
                bp.AreaName                  areaName,
                0                            dealCycle,
                area_cycle                  reDealCycle,
                '2'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.ComGUID in (
                <foreach collection="qyIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            ) t group by areaId
        </if>
        <if test="searchType != '' and searchType != null and '3'.toString() == searchType">
            select projectId           id,
                projectName         name,
                type             type,
                ROUND(avg(dealCycle), 0)   avgDealCycle,
                max(dealCycle)   maxDealCycle,
                min(dealCycle)   minDealCycle,
                ROUND(avg(reDealCycle), 0) avgReDealCycle,
                max(reDealCycle) maxReDealCycle,
                min(reDealCycle) minReDealCycle
            from (
            select log.opportunity_clue_id,
                concat(opp.projectId,'@@', bp.ID)                        projectId,
                if(opp.projectId != log.business_project_id,concat(bp2.ProjectName,'+',bp.ProjectName),bp.ProjectName) projectName,
                project_cycle                  dealCycle,
                0                            reDealCycle,
                '3'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
                left join b_project bp2 on opp.projectId = bp2.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="yProIds != null and yProIds.size() > 0">
                    and bp2.id in (
                    <foreach collection="yProIds" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            union all
            select log.opportunity_clue_id,
                concat(opp.projectId,'@@', bp.ID)                        projectId,
                if(opp.projectId != log.business_project_id,concat(bp2.ProjectName,'+',bp.ProjectName),bp.ProjectName) projectName,
                0                            dealCycle,
                project_cycle                  reDealCycle,
                '3'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
                left join b_project bp2 on opp.projectId = bp2.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and bp.id in (
                <foreach collection="proIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="yProIds != null and yProIds.size() > 0">
                    and bp2.id in (
                    <foreach collection="yProIds" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            ) t group by projectId
        </if>
        <if test="searchType != '' and searchType != null and '4'.toString() == searchType">
            select salesAttributionTeamId           id,
                salesAttributionTeamName         name,
                type             type,
                ROUND(avg(dealCycle), 0)   avgDealCycle,
                max(dealCycle)   maxDealCycle,
                min(dealCycle)   minDealCycle,
                ROUND(avg(reDealCycle), 0) avgReDealCycle,
                max(reDealCycle) maxReDealCycle,
                min(reDealCycle) minReDealCycle
            from (
            select log.opportunity_clue_id,
                opp.SalesAttributionTeamId   salesAttributionTeamId,
                opp.SalesAttributionTeamName salesAttributionTeamName,
                team_cycle                  dealCycle,
                0                            reDealCycle,
                '4'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and opp.SalesAttributionTeamId in (
                <foreach collection="teamIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            union all
            select log.opportunity_clue_id,
                opp.SalesAttributionTeamId   salesAttributionTeamId,
                opp.SalesAttributionTeamName salesAttributionTeamName,
                0                            dealCycle,
                team_cycle                  reDealCycle,
                '4'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and opp.SalesAttributionTeamId in (
                <foreach collection="teamIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            ) t group by salesAttributionTeamId
        </if>
        <if test="searchType != '' and searchType != null and '5'.toString() == searchType">
            select salesAttributionId           id,
                salesAttributionName         name,
                type             type,
                ROUND(avg(dealCycle), 0)   avgDealCycle,
                max(dealCycle)   maxDealCycle,
                min(dealCycle)   minDealCycle,
                ROUND(avg(reDealCycle), 0) avgReDealCycle,
                max(reDealCycle) maxReDealCycle,
                min(reDealCycle) minReDealCycle
            from (
                select log.opportunity_clue_id,
                opp.SalesAttributionId      salesAttributionId,
                opp.SalesAttributionName    salesAttributionName,
                user_cycle                  dealCycle,
                0                           reDealCycle,
                '5'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 1
                and opp.SalesAttributionId in (
                <foreach collection="userIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            union all
            select log.opportunity_clue_id,
                opp.SalesAttributionId      salesAttributionId,
                opp.SalesAttributionName    salesAttributionName,
                0                           dealCycle,
                user_cycle                  reDealCycle,
                '5'                          type
            from b_customer_fod_log log
                left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
                left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
                left join b_project bp on log.business_project_id = bp.ID
            where opp.ClueStatus > 0
                and cycle_type = 2
                and opp.SalesAttributionId in (
                <foreach collection="userIds" item="item" separator=",">
                    #{item}
                </foreach>
                )
                <if test="customerAddress!=null and customerAddress!=''">
                    and opp.CustomerAddress like '%${customerAddress}%'
                </if>
                <if test="source != null and source.size() > 0">
                    AND opp.SourceMode IN (
                    <foreach collection="source" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
                    AND bin.BelongIndustrise IN (
                    <foreach collection="belongIndustriseList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
                    AND bin.BelongIndustriseTwo IN (
                    <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
                    AND bin.BelongIndustriseThree IN (
                    <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
                <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
                    AND bin.BelongIndustriseFour IN (
                    <foreach collection="belongIndustriseFourList" item="item" separator=",">
                        #{item}
                    </foreach>
                    )
                </if>
            ) t group by salesAttributionId
        </if>
    </select>

    <select id="getAllCustomerAddLogList" resultType="cn.visolink.system.channel.model.vo.CustomerAddLogVo">
        select log.opportunity_clue_id opportunityClueId,
            is_add                  isAdd,
            is_three_ones           isThreeOnes,
            is_three_ones_date      isThreeOnesDate,
            report_create_time      reportCreateTime,
            project_id              projectId,
            area_id                 areaId
        from b_customer_add_log log
            left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
            left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where 1 = 1
        <if test="proIds != null and proIds.size() > 0">
            and log.project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and log.area_id in (
            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
    </select>

    <select id="getAllCustomerFodLogList" resultType="cn.visolink.system.channel.model.vo.CustomerFodLogVo">
        select opportunity_clue_id        opportunityClueId,
               business_id                businessId,
               business_type              businessType,
               business_time              businessTime,
               business_project_id        businessProjectId,
               main_visit_project_id      mainVisitProjectId,
               cycle_type                 cycleType,
               is_three_ones_status       isThreeOnesStatus,
               Is_three_ones_after_status isThreeOnesAfterStatus,
               is_first_come_visit_status isFirstComeVisitStatus,
               is_first_visit_status      isFirstVisitStatus,
               is_sign_after_visit_status isSignAfterVisitStatus,
               is_statistics              isStatistics
        from b_customer_fod_log log
        where log.opportunity_clue_id IN (
        <foreach collection="ids" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <select id="getProjectIds" resultType="java.util.Map">
        select distinct  id          projectId,
            ProjectName projectName
        from b_project
        where id IN (
        <foreach collection="projectIds" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>
    <select id="getProjectAreaIds" resultType="java.util.Map">
        select distinct  id          projectId,
        ProjectName projectName
        from b_project
        where ComGUID IN (
        <foreach collection="areaIds" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>
    <select id="getProjectIdsCs" resultType="java.util.Map">
        select distinct  id          projectId,
        ProjectName projectName
        from b_project
        where isSyn = 1
          and pid is null
          and IsDel = 0
          and `Status` = 1
          and id not in ('1704d1f46e824c6fa25bf49ecea8f0ef',
                         '1704d1f46e824c6fa25bf49ecea8f111',
                         '1704d1f46e824c6fa25bf49ecea8f222',
                         '1704d1f46e824c6fa25bf49ecea8f333',
                         '1704d1f46e824c6fa25bf49ecea8f444'
            )
    </select>
    <select id="getRegionIds" resultType="java.util.Map">
        select distinct
                AreaID      areaId,
               AreaName    areaName
        from b_project
        where ComGUID IN (
        <foreach collection="regionList" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

    <select id="getCustomerFollowVisitCount" resultType="java.lang.String">
        select ifnull(count(FollowRecordId),0) from b_followup_record
        where FollowUpWay in ('3','4') and Status = 2 and OpportunityClueId = #{opportunityClueId}
          and FollowUpDate between #{reportCreateTime} and #{contractDate}
        <if test="type != '' and type != null and '2'.toString() == type ">
            and MainFollowProjectId in (select bp.ID from b_project bp where bp.ComGUID = (select bp2.ComGUID from b_project bp2 where bp2.ID = #{typeId}))
        </if>
        <if test="type != '' and type != null and '3'.toString() == type ">
            and MainFollowProjectId = #{typeId}
        </if>
        <if test="type != '' and type != null and '4'.toString() == type ">
            and UserId in (
            select ba.ID
            from b_account ba
            INNER JOIN s_jobsuserrel rel on ba.id = rel.AccountID and ba.IsDel = 0
            INNER JOIN s_jobs jobs on rel.JobID = jobs.ID and jobs.isIdm = 0
            INNER JOIN s_commonjobs com on jobs.CommonJobID = com.ID and com.isIdm = 0
            INNER JOIN s_organization org on org.id = jobs.JobOrgID and org.IsDel = 0
            where com.JobCode in ('qyzygw','zygw')
            and org.id = #{typeId}
            )
        </if>
        <if test="type != '' and type != null and '5'.toString() == type ">
            and UserId = #{typeId}
        </if>
    </select>
    <select id="getAllCustomerAddLogListPL" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(report_create_time)      businessTime,
        project_id              projectId,
        area_id                 areaId
        from b_customer_add_log log
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where log.is_add = 1
        <if test="proIds != null and proIds.size() > 0">
            and log.project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and log.area_id in (
            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.report_create_time between #{startTime} and #{endTime}
        </if>
        group by opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,area_id
        </if>
    </select>
    <select id="getAllCustomervisit" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.business_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where log.is_statistics = 1 and log.business_type = 2
        <if test="proIds != null and proIds.size() > 0">
            and log.business_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.business_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerThreeOne" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.business_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where log.is_statistics = 1 and log.is_three_ones_status = 1
        <if test="proIds != null and proIds.size() > 0">
            and log.business_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.business_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerDaoFang" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.main_visit_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where is_statistics = 1 and (business_type = 3 or business_type = 4)
        <if test="proIds != null and proIds.size() > 0">
            and log.main_visit_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.main_visit_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomershouFang" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.main_visit_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where is_statistics = 1 and is_first_visit_status = 1
        <if test="proIds != null and proIds.size() > 0">
            and log.main_visit_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.main_visit_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerfuFang" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.main_visit_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where is_statistics = 1 and (business_type = 3 or business_type = 4) and IFNULL(is_first_visit_status,0) != 1
        <if test="proIds != null and proIds.size() > 0">
            and log.main_visit_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.main_visit_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerchengjiao" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        min(business_time)      businessTime,
        log.business_project_id              projectId,
        bp.AreaID                 areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        left join b_project_opportunity opp on log.opportunity_clue_id = opp.OpportunityClueId
        left join b_information bin on opp.OpportunityClueId = bin.OpportunityClueId
        where business_type = 6
        <if test="proIds != null and proIds.size() > 0">
            and log.business_project_id in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="regionIds != null and regionIds.size() > 0">
            and bp.AreaID  in (

            <foreach collection="regionIds" item="item" separator=",">
                #{item.areaId}
            </foreach>
            )
        </if>
        <if test="customerAddress!=null and customerAddress!=''">
            and opp.CustomerAddress like '%${customerAddress}%'
        </if>
        <if test="source != null and source.size() > 0">
            AND opp.SourceMode IN (
            <foreach collection="source" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseList != null and belongIndustriseList.size() > 0">
            AND bin.BelongIndustrise IN (
            <foreach collection="belongIndustriseList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseTwoList != null and belongIndustriseTwoList.size() > 0">
            AND bin.BelongIndustriseTwo IN (
            <foreach collection="belongIndustriseTwoList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseThreeList != null and belongIndustriseThreeList.size() > 0">
            AND bin.BelongIndustriseThree IN (
            <foreach collection="belongIndustriseThreeList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="belongIndustriseFourList != null and belongIndustriseFourList.size() > 0">
            AND bin.BelongIndustriseFour IN (
            <foreach collection="belongIndustriseFourList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != '' ">
            AND log.business_time between #{startTime} and #{endTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,log.business_project_id
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomervisitMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        where log.is_statistics = 1 and log.business_type = 2
        <if test="oppoIds != null and oppoIds.size() > 0">
            and log.opportunity_clue_id in (
            <foreach collection="oppoIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerThreeOneMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        where log.is_statistics = 1 and log.is_three_ones_status = 1
        <if test="oppoIds != null and oppoIds.size() > 0">
            and log.opportunity_clue_id in (
            <foreach collection="oppoIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>

        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerDaoFangMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId,
        log.business_project_id bproId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        where is_statistics = 1 and (business_type = 3 or business_type = 4)
        <if test="proIds != null and proIds.size() > 0">
            and bp.ID in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomershouFangMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId,
        log.business_project_id bproId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        where is_statistics = 1 and is_first_visit_status = 1
        <if test="proIds != null and proIds.size() > 0">
            and bp.ID in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>

        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerfuFangMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId,
        log.business_project_id bproId
        from b_customer_fod_log log
        inner join b_project bp on log.main_visit_project_id = bp.ID
        where is_statistics = 1 and (business_type = 3 or business_type = 4) and IFNULL(is_first_visit_status,0) != 1
        <if test="proIds != null and proIds.size() > 0">
            and bp.ID in (
            <foreach collection="proIds" item="item" separator=",">
                #{item.projectId}
            </foreach>
            )
        </if>

        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerchengjiaoMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        where business_type = 6
        <if test="oppoIds != null and oppoIds.size() > 0">
            and log.opportunity_clue_id in (
            <foreach collection="oppoIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>

        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
    </select>
    <select id="getAllCustomerFugouMolecule" resultType="java.util.Map">
        select log.opportunity_clue_id opportunityClueId,
        max(business_time)      businessTime,
        bp.ID  projectId,
        bp.AreaID areaId
        from b_customer_fod_log log
        inner join b_project bp on log.business_project_id = bp.ID
        where business_type = 6
        <if test="oppoIds != null and oppoIds.size() > 0">
            and log.opportunity_clue_id in (
            <foreach collection="oppoIds" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>

        <if test="startTime != null and startTime != '' and deadTime != null and deadTime != '' ">
            AND log.business_time between #{startTime} and #{deadTime}
        </if>
        GROUP BY opportunity_clue_id
        <if test="searchType!=null and searchType!='' and '1'.toString() == searchType">
            ,bp.ID
        </if>
        <if test="searchType!=null and searchType!='' and '2'.toString() == searchType">
            ,bp.AreaID
        </if>
        HAVING COUNT(*) >= 2
    </select>

    <!-- 打卡统计明细查询 -->
    <select id="getPunchInStatisticsDetail" parameterType="java.util.Map" resultType="java.util.Map">
        select 
            org.ID as OrgId,
            org.OrgName,
            bp.ID as ProjectId,
            bp.ProjectName,
            clue.ProjectClueId,
            clue.CustomerName,
            clue.SalesAttributionId,
            clue.SalesAttributionName,
            clue.SalesAttributionTeamId,
            clue.SalesAttributionTeamName,
            bf.FollowRecordId as FollowUpId,
            bf.CreateTime as PunchInTime,
            bf.Creator as PunchInUser,
            bf.Creator as PunchInUserId
        from   b_project bp inner join s_organization org on org.id = bp.ComGUID
        left join b_project_clues clue on bp.ID=clue.projectId
        left join b_followup_record bf on bf.ProjectClueId=clue.ProjectClueId and bf.ProjectId=clue.projectId
        where bp.IsDel = 0 and bp.isSyn = 1 and bp.IsStages = 0
        and bf.Status = 2 and bf.FollowUpWay = '6' and bf.IsDel = 0 
        <if test="startTime != null and startTime != ''">
            and bf.createTime >= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and bf.createTime &lt;= #{endTime}
        </if>
        <if test="projectIds != null and projectIds != ''">
            and bp.ID in 
            <foreach collection="projectIds.split(',')" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="projectId != null and projectId != ''">
            and bp.ID = #{projectId}
        </if>
        <if test="orgIds != null and orgIds.size() > 0">
            and org.ID in
            <foreach collection="orgIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by bf.CreateTime desc
        <if test="pageIndex != null and pageSize != null">
            limit #{pageIndex}, #{pageSize}
        </if>
    </select>

    <!-- 打卡统计数据汇总 -->
    <select id="getPunchInStatisticsSummary" parameterType="java.util.Map" resultType="java.util.Map">
        select 
            org.ID as OrgId,
            org.OrgName,
            bp.ID as ProjectId,
            bp.ProjectName,
            count(distinct bf.UserId) as PunchInUserCount,
            count(distinct clue.ProjectClueId) as PunchInCustomerCount,
            count(bf.FollowRecordId) as PunchInCount
        from   b_project bp inner join s_organization org on org.id = bp.ComGUID
        left join b_project_clues clue on bp.ID=clue.projectId
        left join b_followup_record bf on bf.ProjectClueId=clue.ProjectClueId and bf.ProjectId=clue.projectId
        where bp.IsDel = 0 and bp.isSyn = 1 and bp.IsStages = 0
        and bf.Status = 2 and bf.FollowUpWay = '6' and bf.IsDel = 0 
        <if test="startTime != null and startTime != ''">
            and bf.createTime >= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and bf.createTime &lt;= #{endTime}
        </if>
        <if test="projectIds != null and projectIds != ''">
            and bp.ID in 
            <foreach collection="projectIds.split(',')" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="projectId != null and projectId != ''">
            and bp.ID = #{projectId}
        </if>
        <if test="orgIds != null and orgIds.size() > 0">
            and org.ID in
            <foreach collection="orgIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by org.ID, bp.ID
        order by org.OrgName, bp.ProjectName
    </select>

    <!-- 打卡统计项目明细（按团队） -->
    <select id="getPunchInProjectDetail" parameterType="java.util.Map" resultType="java.util.Map">
        select 
            org.ID as OrgId,
            org.OrgName,
            bp.ID as ProjectId,
            bp.ProjectName,
            clue.SalesAttributionTeamId,
            clue.SalesAttributionTeamName,
            clue.SalesAttributionId,
            clue.SalesAttributionName,
            count(distinct clue.ProjectClueId) as PunchInCustomerCount,
            count(bf.FollowRecordId) as PunchInCount
        from   b_project bp inner join s_organization org on org.id = bp.ComGUID
        left join b_project_clues clue on bp.ID=clue.projectId
        left join b_followup_record bf on bf.ProjectClueId=clue.ProjectClueId and bf.ProjectId=clue.projectId
        where bp.IsDel = 0 and bp.isSyn = 1 and bp.IsStages = 0
        and bf.Status = 2 and bf.FollowUpWay = '6' and bf.IsDel = 0 
        <if test="startTime != null and startTime != ''">
            and bf.createTime >= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and bf.createTime &lt;= #{endTime}
        </if>
        <if test="projectIds != null and projectIds != ''">
            and bp.ID in
            <foreach collection="projectIds.split(',')" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="projectId != null and projectId != ''">
            and bp.ID = #{projectId}
        </if>
        <if test="salesAttributionTeamId != null and salesAttributionTeamId != ''">
            and clue.SalesAttributionTeamId = #{salesAttributionTeamId}
        </if>
        <if test="salesAttributionId != null and salesAttributionId != ''">
            and clue.SalesAttributionId = #{salesAttributionId}
        </if>
        <if test="orgId != null and orgId != ''">
            and org.ID = #{orgId}
        </if>
        group by org.ID, bp.ID, clue.SalesAttributionTeamId,clue.SalesAttributionId
        order by org.OrgName, bp.ProjectName, clue.SalesAttributionTeamName
    </select>

    <!-- 打卡统计客户明细 -->
    <select id="getPunchInCustomerDetail" parameterType="java.util.Map" resultType="java.util.Map">
        select 
            org.ID as OrgId,
            org.OrgName,
            bp.ID as ProjectId,
            bp.ProjectName,
            clue.ProjectClueId,
            clue.CustomerName as oldCustomerName,
            if(length(trim(clue.diy_hide_customer_name)) = 0 or clue.diy_hide_customer_name is null,concat(left(clue.CustomerName,1),'**'),clue.diy_hide_customer_name) CustomerName,
            clue.SalesAttributionId,
            clue.SalesAttributionName,
            clue.SalesAttributionTeamId,
            clue.SalesAttributionTeamName,
            bf.FollowRecordId as FollowUpId,
            bf.CreateTime as PunchInTime,
            bf.EmployeeName as PunchInUser,
            bf.UserId as PunchInUserId,
            count(bf.FollowRecordId) as PunchInCount,
            max(bf.CreateTime) as LatestPunchInTime,
            max(bf.UserId) as LatestPunchInUserId,
            max(bf.EmployeeName) as LatestPunchInUser
        from   b_project bp inner join s_organization org on org.id = bp.ComGUID
        left join b_project_clues clue on bp.ID=clue.projectId
        left join b_followup_record bf on bf.ProjectClueId=clue.ProjectClueId and bf.ProjectId=clue.projectId
        where bp.IsDel = 0 and bp.isSyn = 1 and bp.IsStages = 0
        and bf.Status = 2 and bf.FollowUpWay = '6' and bf.IsDel = 0 
        <if test="startTime != null and startTime != ''">
            and bf.createTime >= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and bf.createTime &lt;= #{endTime}
        </if>
        <if test="projectId != null and projectId != ''">
            and bp.ID = #{projectId}
        </if>
        <if test="orgId != null and orgId != ''">
            and org.ID = #{orgId}
        </if>
        <if test="salesAttributionTeamId != null and salesAttributionTeamId != ''">
            and clue.SalesAttributionTeamId = #{salesAttributionTeamId}
        </if>
        <if test="salesAttributionId != null and salesAttributionId != ''">
            and clue.SalesAttributionId = #{salesAttributionId}
        </if>
        group by clue.ProjectClueId
        order by bf.CreateTime desc
    </select>
</mapper>
