<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.visolink.system.channel.dao.ProjectCluesDao">

    <select id="queryAllCustmerByOther" parameterType="cn.visolink.system.channel.model.form.ProjectCluesForm" resultType="cn.visolink.system.channel.model.vo.ProjectCluesVO">
        select
        TT.*
        from (
        SELECT
        bpc.ProjectClueId, -- 线索id
        bpc.CustomerName, -- 客户姓名
        bpc.BasicCustomerId,-- 客户id
        concat(left(bpc.CustomerMobile,3),'****',right(bpc.CustomerMobile,4)) CustomerMobile,-- 客户手机
        bpc.Label,
        (case
        bpc.CustomerGender
        when 1 then '男'
        when 2 then '女'
        else '' end ) as CustomerGender, -- 客户性别
        bpc.CustomerCardTypeDesc as CustomerCardType, -- 证件类型
        bpc.CustomerCardNum, -- 证件号码
        bpc.Level,
        dict.DictName as TradeLevel,
        (case bpc.SourceTypeOld
        when 1 then
        bpc.ReportTeamName
        else bpc.ReportUserName end ) as ReportUserName, -- 报备人
        (
        case
        bpc.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus, -- 状态
        (case bpc.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 3 then '案场成交'
        when 4 then '全民经纪人成交'
        else '' end ) as SourceType,-- 来源类型（渠道类别）（改后弃用---不要删除，其他地方有用此字段）
        bpc.TokerAttributionTeamName,-- 拓客团队
        bpc.TokerAttributionName,-- 拓客归属人
        bpc.TokerAttributionTime,-- 拓客归属时间
        bpc.SalesAttributionTeamName,-- 销售团队
        bpc.SalesAttributionName,-- 案场归属人
        bpc.SalesAttributionTime,-- 案场归属时间
        bpc.ReportCreateTime,-- 报备时间
        bpc.LastRefreshReportExpireDate,
        bpc.TheFirstVisitDate,-- 到访时间（首访）
        bpc.BookingDate,-- 认筹时间
        bpc.SubscribingDate,-- 认购时间
        bpc.ContractDate,-- 签约时间
        bpc.ExpectedVisitDate, -- 预计到访时间
        bpc.TokerVisitExpireDate, -- 渠道失效时间
        bpc.ReportExpireDate, -- 报备失效时间
        bpc.ProjectName,
        (case bpc.IsRepurchase
        when 1 then "是"
        when 0 then "否"
        else "" end ) as IsRepurchase,
        bpc.ReportUserRole,
        bpc.InvalidReason invalidReason,
        (case when coe.clue_validity = 1 then '有效'
        when coe.clue_validity = 2 then '主动放弃'
        when coe.clue_validity = 3 then '报备逾期'
        when coe.clue_validity = 4 then '作废'
        when coe.clue_validity = 5 then '渠道逾期'
        else '有效' end) clueValidity,
        (case when coe.ChildReportSourceDesc is not null
        and coe.ChildReportSourceDesc !='' and coe.ChildReportSourceDesc !='null'
        then concat(coe.ReportSourceDesc,'-',coe.ChildReportSourceDesc)
        else coe.ReportSourceDesc end) ReportSourceDesc,
        (case when ap.brokerId is null then 0
        when ap.brokerId is not null then 1
        else 0 end )as isSeniorBroker,
        aa.activename as activeName
        FROM
        b_project_clues bpc
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bpc.ProjectClueId
        LEFT JOIN s_dictionary dict on dict.DictCode = bpc.TradeLevel and dict.PID=(select ID from s_dictionary where DictCode='s_gfyx')
        left join a_account_performance ap on bpc.ProjectClueId = ap.ProjectClueId and ap.isdel = 0
        left join a_accountactive aa on ap.activeid = aa.id and aa.isdel = 0
        <where>
            <if test="projectList!=null and projectList.size()>0">
                bpc.projectId in
                <foreach collection="projectList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="projectList==null or projectList.size()==0">
                bpc.projectId = #{projectId}
            </if>
            <if test="clueStatusList != null and clueStatusList.size() > 0">
                and ClueStatus in
                <foreach collection="clueStatusList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="levelList != null and levelList.size() > 0">
                and `Level` in
                <foreach collection="levelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tradeLevelList != null and tradeLevelList.size() > 0">
                and bpc.TradeLevel in
                <foreach collection="tradeLevelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="sourceTypeList != null and sourceTypeList.size() > 0">
                and SourceTypeOld in
                <foreach collection="sourceTypeList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="redistributionIdList != null and redistributionIdList.size() > 0">
                and bpc.ProjectClueId in
                <foreach collection="redistributionIdList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="brokerList != null and brokerList.size() > 0">
                and ReportUserRole in
                <foreach collection="brokerList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="relatedList != null and relatedList.size() > 0">
                and IsRepurchase in
                <foreach collection="relatedList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isReportList != null and isReportList.size() > 0">
                and coe.ReportSource in
                <foreach collection="isReportList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="clueValidityList != null and clueValidityList.size() > 0">
                and coe.clue_validity in
                <foreach collection="clueValidityList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="customerName!=null and customerName!='' ">
                AND CustomerName LIKE '%${customerName}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length!=11 ">
                AND CustomerMobile LIKE '%${customerMobile}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length==11 ">
                AND CustomerMobile = #{customerMobile}
            </if>
            <if test="reportUserName!=null and reportUserName!=''">
                AND (ReportUserName LIKE '%${reportUserName}%'
                or PerformanceAttributor like concat('%',#{reportUserName},'%'))
            </if>
            <if test="reportTime==1 and date1!=null and date1!='' and date2!=null and date2!='' ">
                and ReportCreateTime BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==2  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and ReportExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==3  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and ExpectedVisitDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==4  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and TokerVisitExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==5  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and TheFirstVisitDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==6  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and LastRefreshReportExpireDate BETWEEN #{date1}  AND #{date2}
            </if>

            <if test="isSecondBroker !=null and isSecondBroker != '' and isSecondBroker == 0">
                and ap.brokerId is null
            </if>
            <if test="isSecondBroker !=null and isSecondBroker != '' and isSecondBroker == 1">
                and ap.brokerId is not null
            </if>
        </where>) TT
        order by UNIX_TIMESTAMP(ReportCreateTime) desc
    </select>

    <select id="queryAllCustmerByOther_COUNT" resultType="Long"  parameterType="cn.visolink.system.channel.model.form.ProjectCluesForm">
        SELECT
        count(1)
        FROM
        b_project_clues bpc
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bpc.ProjectClueId
        left join a_account_performance ap on bpc.ProjectClueId = ap.ProjectClueId and ap.isdel = 0
        <where>
            <if test="projectList!=null and projectList.size()>0">
                bpc.projectId in
                <foreach collection="projectList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="projectList==null or projectList.size()==0">
                bpc.projectId = #{projectId}
            </if>
            <if test="clueStatusList != null and clueStatusList.size() > 0">
                and bpc.ClueStatus in
                <foreach collection="clueStatusList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="levelList != null and levelList.size() > 0">
                and bpc.`Level` in
                <foreach collection="levelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tradeLevelList != null and tradeLevelList.size() > 0">
                and bpc.TradeLevel in
                <foreach collection="tradeLevelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="sourceTypeList != null and sourceTypeList.size() > 0">
                and bpc.SourceTypeOld in
                <foreach collection="sourceTypeList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="redistributionIdList != null and redistributionIdList.size() > 0">
                and bpc.ProjectClueId in
                <foreach collection="redistributionIdList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="brokerList != null and brokerList.size() > 0">
                and bpc.ReportUserRole in
                <foreach collection="brokerList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="relatedList != null and relatedList.size() > 0">
                and bpc.IsRepurchase in
                <foreach collection="relatedList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isReportList != null and isReportList.size() > 0">
                and coe.ReportSource in
                <foreach collection="isReportList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="clueValidityList != null and clueValidityList.size() > 0">
                and coe.clue_validity in
                <foreach collection="clueValidityList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="customerName!=null and customerName!='' ">
                AND bpc.CustomerName LIKE '%${customerName}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length!=11 ">
                AND CustomerMobile LIKE '%${customerMobile}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length==11 ">
                AND CustomerMobile = #{customerMobile}
            </if>
            <if test="reportUserName!=null and reportUserName!=''">
                AND (bpc.ReportUserName LIKE '%${reportUserName}%'
                or bpc.PerformanceAttributor like concat('%',#{reportUserName},'%'))
            </if>
            <if test="reportTime==1 and date1!=null and date1!='' and date2!=null and date2!='' ">
                and bpc.ReportCreateTime BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==2  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bpc.ReportExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==3  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bpc.ExpectedVisitDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==4  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bpc.TokerVisitExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==5  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bpc.TheFirstVisitDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==6  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bpc.LastRefreshReportExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="isSecondBroker != null and isSecondBroker != '' and isSecondBroker == 0">
                and ap.brokerId is null
            </if>
            <if test="isSecondBroker != null and isSecondBroker != '' and isSecondBroker == 1">
                and ap.brokerId is not null
            </if>
        </where>

    </select>

    <select id="queryAllAnChangByOther"  parameterType="cn.visolink.system.channel.model.form.ProjectCluesForm"  resultType="cn.visolink.system.channel.model.vo.ProjectCluesVO">
        SELECT TT.* FROM (
        SELECT
        bc.OpportunityClueId, -- 机会ID
        bc.ProjectClueId, -- 线索ID
        bc.CustomerID, -- 客户ID
        bc.BasicCustomerId,-- 客户ID
        bc.CustomerName, -- 客户姓名
        concat(left(bc.CustomerMobile,3),'****',right(bc.CustomerMobile,4)) CustomerMobile,-- 客户手机
        Label,
        (case
        bc.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus, -- 状态
        (case bc.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 3 then '案场成交'
        when 4 then '全民经纪人成交'
        else '' end ) as SourceType, -- 成交渠道
        dict.DictName as Level,
        bc.SourceTypeOldDesc as SourceTypeDesc,
        bc.TokerAttributionName,-- 拓客归属人
        bc.TokerAttributionTime,-- 拓客归属时间
        bc.SalesAttributionName,-- 案场归属人
        bc.SalesAttributionTime,-- 案场归属时间
        bc.SalesAttributionTeamName,-- 案场团队
        bc.ReportCreateTime,-- 报备时间
        bc.TheFirstVisitDate,-- 到访时间（首访）
        bc.SalesTheLatestFollowDate, -- 案场最近跟进时间
        bc.SalesVisitExpireDate, -- 案场失效时间
        bc.BookingDate,-- 认筹时间
        bc.AuditUserName, -- 分接审核人
        bc.DisAuditDate, -- 分接审核时间
        bc.ReportUserName, -- 报备人
        bc.ExpectedVisitDate, -- 预计到访时间
        bc.ProjectName,
        bc.MainMediaName,
        ot.SubscribingDate as SubscribingDate,
        ot.ContractDate as ContractDate,
        (case bc.IsRepurchase
        when 1 then "是"
        when 0 then "否"
        else "" end ) as IsRepurchase,
        bc.ReportUserRole,
        (case when coe.ChildReportSourceDesc is not null
        and coe.ChildReportSourceDesc !='' and coe.ChildReportSourceDesc !='null'
        then concat(coe.ReportSourceDesc,'-',coe.ChildReportSourceDesc)
        else coe.ReportSourceDesc end) ReportSourceDesc,
        (case when ap.brokerId is null then 0
        when ap.brokerId is not null then 1
        else 0 end )as isSeniorBroker,
        aa.activename as activeName,
        (case when coe.ext1 = 1 then '有效'
        when coe.ext1 = 2 then '主动放弃'
        when coe.ext1 = 3 then '跟进逾期未进入公共池'
        when coe.ext1 = 4 then '跟进逾期进入公共池'
        when coe.ext1 = 5 then '认购逾期'
        else '有效' end) clueValidity
        FROM
            b_project_opportunity bc
        LEFT JOIN s_dictionary dict on dict.DictCode = bc.TradeLevel and dict.PID=(select ID from s_dictionary where DictCode='s_gfyx')
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bc.ProjectClueId
        left join a_account_performance ap on bc.ProjectClueId = ap.ProjectClueId and ap.isdel = 0
        left join a_accountactive aa on ap.activeid = aa.id and aa.isdel = 0
        LEFT JOIN (
        SELECT OpportunityClueId,
        MAX(case when ClueStatus = '认购' then bot.OrderYwgsDate ELSE NULL END) SubscribingDate,
        MAX(case when ClueStatus = '签约' then bot.ContractYwGsDate ELSE NULL END) ContractDate
        FROM b_opportunity_trade bot
        WHERE bot.ClueStatus IN('签约','认购')
        AND bot.ProjectID = #{projectId}
        AND TradeStatus = '激活'
        GROUP BY OpportunityClueId
        ) ot ON ot.OpportunityClueId = bc.OpportunityClueId
        WHERE
        bc.projectId = #{projectId}
        <if test="clueStatusList != null and clueStatusList.size() > 0">and bc.ClueStatus in
            <foreach
                    collection="clueStatusList" index="index" item="item" open="("
                    separator="," close=")">    #{item}</foreach>
            </if>
            <if test="
        levelList != null and levelList.size() > 0">
                and bc.TradeLevel in
                <foreach collection="levelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="sourceTypeList != null and sourceTypeList.size() > 0">
                and bc.SourceTypeOld in
                <foreach collection="sourceTypeList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isRepurchaseList != null and isRepurchaseList.size() > 0">
                and bc.IsRepurchase in
                <foreach collection="isRepurchaseList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isReportList != null and isReportList.size() > 0">
                and coe.ReportSource in
                <foreach collection="isReportList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="redistributionIdList != null and redistributionIdList.size() > 0">
                and bc.OpportunityClueId in
                <foreach collection="redistributionIdList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="mainMediaList != null and mainMediaList.size() > 0">
                and bc.MainMediaGUID in
                <foreach collection="mainMediaList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="customerName!=null and customerName!='' ">
            AND bc.CustomerName LIKE '%${customerName}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length!=11 ">
                AND bc.CustomerMobile LIKE '%${customerMobile}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.toString().length==11 ">
                AND bc.CustomerMobile = #{customerMobile}
            </if>
            <if test="reportUserName!=null and reportUserName!=''">
            AND bc.ReportUserName LIKE '%${reportUserName}%'
            </if>
            <if test="salesAttributionName!=null and salesAttributionName!=''">
            AND bc.SalesAttributionName LIKE '%${salesAttributionName}%'
            </if>
            <if test="reportTime==1 and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bc.TheFirstVisitDate BETWEEN #{date1} AND #{date2}
            </if>
            <if test="reportTime==2 and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bc.SalesTheLatestFollowDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==3 and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bc.SalesVisitExpireDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==4 and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and bc.ReportCreateTime BETWEEN #{date1}  AND #{date2}
            </if>) TT
            <where>
                <if test="reportTime==5 and date1!=null and date1!='' and date2!=null and date2!=''">
                    and tt.SubscribingDate BETWEEN #{date1}  AND #{date2}
                </if>
                <if test="reportTime==6 and date1!=null and date1!='' and date2!=null and date2!=''">
                    and tt.ContractDate BETWEEN #{date1}  AND #{date2}
                </if>
            </where>
        order by UNIX_TIMESTAMP(TT.TheFirstVisitDate) desc
    </select>

    <select id="queryAllAnChangByOther_COUNT" resultType="Long"  parameterType="cn.visolink.system.channel.model.form.ProjectCluesForm">
        SELECT count(1) FROM (
        SELECT
        bc.OpportunityClueId, -- 机会ID
        bc.ProjectClueId, -- 线索ID
        ot.SubscribingDate as SubscribingDate,
        ot.ContractDate as ContractDate,
        bc.ReportUserRole,
        coe.ReportSourceDesc
        FROM
        b_project_opportunity bc
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bc.ProjectClueId
        LEFT JOIN (
        SELECT OpportunityClueId,
        MAX(case when ClueStatus = '认购' then bot.OrderYwgsDate ELSE NULL END) SubscribingDate,
        MAX(case when ClueStatus = '签约' then bot.ContractYwGsDate ELSE NULL END) ContractDate
        FROM b_opportunity_trade bot
        WHERE bot.ClueStatus IN('签约','认购')
        AND bot.ProjectID = #{projectId}
        AND TradeStatus = '激活'
        GROUP BY OpportunityClueId
        ) ot ON ot.OpportunityClueId = bc.OpportunityClueId
        WHERE
        bc.projectId = #{projectId}
        <if test="clueStatusList != null and clueStatusList.size() > 0">and bc.ClueStatus in
            <foreach
                    collection="clueStatusList" index="index" item="item" open="("
                    separator="," close=")">    #{item}</foreach>
        </if>
        <if test="
        levelList != null and levelList.size() > 0">
            and bc.TradeLevel in
            <foreach collection="levelList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="sourceTypeList != null and sourceTypeList.size() > 0">
            and bc.SourceTypeOld in
            <foreach collection="sourceTypeList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isRepurchaseList != null and isRepurchaseList.size() > 0">
            and bc.IsRepurchase in
            <foreach collection="isRepurchaseList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isReportList != null and isReportList.size() > 0">
            and coe.ReportSource in
            <foreach collection="isReportList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="redistributionIdList != null and redistributionIdList.size() > 0">
            and bc.OpportunityClueId in
            <foreach collection="redistributionIdList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="mainMediaList != null and mainMediaList.size() > 0">
            and bc.MainMediaGUID in
            <foreach collection="mainMediaList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerName!=null and customerName!='' ">
            AND bc.CustomerName LIKE '%${customerName}%'
        </if>
        <if test="customerMobile!=null and customerMobile!='' ">
            AND bc.CustomerMobile LIKE '%${customerMobile}%'
        </if>
        <if test="reportUserName!=null and reportUserName!=''">
            AND bc.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="salesAttributionName!=null and salesAttributionName!=''">
            AND bc.SalesAttributionName LIKE '%${salesAttributionName}%'
        </if>
        <if test="reportTime==1 and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bc.TheFirstVisitDate BETWEEN #{date1} AND #{date2}
        </if>
        <if test="reportTime==2 and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bc.SalesTheLatestFollowDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==3 and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bc.SalesVisitExpireDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==4 and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bc.ReportCreateTime BETWEEN #{date1}  AND #{date2}
        </if>) TT
        <where>
            <if test="reportTime==5 and date1!=null and date1!='' and date2!=null and date2!=''">
                and tt.SubscribingDate BETWEEN #{date1}  AND #{date2}
            </if>
            <if test="reportTime==6 and date1!=null and date1!='' and date2!=null and date2!=''">
                and tt.ContractDate BETWEEN #{date1}  AND #{date2}
            </if>
        </where>

    </select>

    <!--查询规则-->
    <select id="ProjectProtectRuleInfo_Select" resultType="cn.visolink.system.channel.model.vo.ProjectProtectRuleVO" parameterType="cn.visolink.system.channel.model.form.ProjectProtectRuleForm">
           select  *
           from  b_project_protect_rule
            where
            ProjectID=#{projectId}
        <if test="sourceType!=null and sourceType!=''">
            and SourceType=#{sourceType}
        </if>
        <if test="projectOrgCategory!=null and projectOrgCategory!=''">
            and ProjectOrgCategory=#{projectOrgCategory}
        </if>
        <if test="projectOrgId!=null and projectOrgId!=''">
            and ProjectOrgID=#{projectOrgId}
        </if>
    </select>

    <!--查询项目是否开启打印-->
    <select id="getIsPrintStatus" resultType="java.lang.String" parameterType="java.lang.String">
        select IsPrintStatus from  b_project
        where
        id=#{projectId}
    </select>

    <!--更新项目是否开启打印-->
    <update id="updateIsPrintStatus" parameterType="java.util.Map">
        update b_project set IsPrintStatus = #{isPrintStatus}
        where
            id =#{projectId}
    </update>

    <!--查询分配人员的初始组织-->
    <select id="orgRootIDByProjectId" parameterType="java.util.Map" resultType="java.util.Map">
            select * from (
            SELECT act.ID, org.ID as PID,act.EmployeeName,99 as Levels
            FROM s_organization org
            inner join s_jobs job on job.JobOrgID = org.id and job.IsDel = 0 and job.Status = 1 and job.isIdm = 0
            inner join s_jobsuserrel jsr on jsr.JobID = job.ID and jsr.status = 1
            inner join b_account act on act.id = jsr.AccountID  and act.IsDel = 0 and act.Status = 1
            WHERE org.ProjectID=#{projectId} AND org.OrgCategory = #{orgCategory} AND org.IsDel = 0 AND org.Status = 1
            union all
            SELECT org.id,org.PID,org.OrgName,org.Levels
            FROM s_organization org
            WHERE ProjectID=#{projectId} AND OrgCategory = #{orgCategory} AND IsDel = 0 AND Status = 1
            ) t order by Levels asc
    </select>

    <select id="orgInfoByIdSelect" parameterType="cn.visolink.system.channel.model.form.OrgRootForm" resultType="java.util.Map">
            SELECT
            ID AS id,
            OrgName AS text,
            '#' as parent
            FROM
            s_organization
            WHERE
            ID=#{orgId}
            AND IsDel = 0
            AND Status = 1;

    </select>

    <!--获取登录信息-->
    <select id="childOrgListByPid" resultType="java.util.Map" parameterType="java.util.Map">
        select ID as id,OrgName as text, PID as parent from s_organization WHERE PID=#{id}
    </select>

    <select id="orgUserListByOrgIDOrEmplayName" parameterType="cn.visolink.system.channel.model.form.OrgRootForm" resultType="java.util.Map">
        SELECT
    sa.ID AS id,
    sa.EmployeeName AS text,
    job.JobOrgID AS parent
    FROM
    s_jobs job
    LEFT JOIN s_jobsuserrel sj ON sj.JobID = job.ID
    LEFT JOIN b_account sa ON sa.ID = sj.AccountID
    LEFT JOIN s_organization org ON org.ID = job.JobOrgID
    WHERE
    job.JobOrgID = #{id}
    and job.isIdm = 0
    AND sa.Status = 1
    AND sa.IsDel = 0
    AND org.Status = 1
    AND org.IsDel = 0
    AND job.Status = 1
    AND sa.IsDel = 0
    AND (sa.EmployeeName = #{employeeName} or #{employeeName} ='');
    </select>

    <!--用户详情中的用户基本信息-->
    <select id="essentialInformation" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT
            c.CustomerName customerName,
            ( CASE c.CustomerGender
                  when 1 then "男"
                  when 2 then "女"
                  ELSE "" end ) as customerGender,
            concat(left(c.CustomerMobile,3),'****',right(c.CustomerMobile,4))  customerMobile,
            c.ReportUserName reportUserName,
            (CASE when c.ReportUserRole in ('3','4') then
                          (select Mobile from a_broker_user ab where ab.id = c.ReportUserID)
                  ELSE
                          (select Mobile from b_account b where b.id = c.ReportUserID)
                end) as reportUserMobile,
            c.ReportCreateTime reportCreateTime,
            c.Remarks remarks,
            c.CustomerMobile AS oldCustomerMobile,
            c.BelongIndustriseDesc belongIndustriseDesc,
            c.AlternativeTelephone alternativeTelephone,
            c.HomePhone homePhone,
            c.CompanyPhone companyPhone,
            c.ProjectName projectName,
            c.CustomerAddress customerAddress,
            (case when c.ReportUserRole = '1' then '项目业务员'
                  when c.ReportUserRole = '2' then '招商业务员'
                  when c.ReportUserRole = '3' then '个人渠道商'
                  when c.ReportUserRole = '4' then '公司渠道商' else '' end) reportUserRole
        FROM
            b_project_opportunity opp
        WHERE
            c.ProjectClueId = #{projectClueId}
    </select>

    <!--客户详情中的关联客户信息-->
    <select id="associatedCustomers" parameterType="java.util.Map" resultType="java.util.Map">
        select cb.name,(case when cb.Gender = 2 then '女' when cb.Gender = 1 then '男' else '' end) Gender,INSERT (cb.Mobile, 4, 4, '****') AS Mobile,cb.Address,cb.CardType,
        (select sd.DictName from s_dictionary sd where sd.PID=(select ID from s_dictionary where DictCode='CardType')
        and sd.DictCode = cb.CardType) cardTypeName,cb.CardNum
        from b_Intention_Relationship bi join b_project_opportunity b on bi.RelationshipOpportunityClueId=b.OpportunityClueId
        left join b_customer_basic cb ON b.BasicCustomerId = cb.ID
        where bi.OpportunityClueId=#{opportunityClueId}
    </select>

    <!--客户详情里面的节点记录-->
    <select id="nodeRecord" parameterType="java.util.Map" resultType="java.util.Map">
        select * from (
                          SELECT
                              fol.FollowRecordId id,
                              fol.ProjectClueId projectClueId,
                              (case fol.FollowUpWay when 1 then '电话/微信' when 2 then '上门拜访' when 3 then '邀约到访' when 4 then '自然来访' when 5 then '其他' else fol.FollowUpWay end) followUpWay,
                              if(fol.FollowUpWay = '转成交',concat(fol.EmployeeName,'-推送客户至',if((select orderProName from b_followup_record_deal a where a.followRecordId=fol.FollowRecordId) is not null, (select orderProName from b_followup_record_deal a where a.followRecordId=fol.FollowRecordId),bp3.ProjectName),'转成交'),fol.FollowUpDetail) followUpDetail,
                              ( SELECT EmployeeName FROM b_account b WHERE b.id = fol.UserId ) AS userName,
                              DATE_FORMAT( fol.FollowUpDate, '%Y-%m-%d %H:%i:%s' ) AS followUpDate,
                              (
                                  CASE

                                      WHEN fol.FollowUpUserRole = '1' THEN
                                          '项目招商专员'
                                      WHEN fol.FollowUpUserRole = '2' THEN
                                          '区域招商专员'
                                      ELSE ''
                                      END
                                  ) followUpUserRole,
                              fol.FollowUpDate jiedianDate,
                              '1' type,
                              (select group_concat(enclosureUrl) from b_enclosure enc where enc.FollowRecordId = fol.FollowRecordId and fol.IsDel = 0 and followType in (1,2)) enclosures,
--                               (select group_concat(enclosureUrl) from b_enclosure enc where enc.FollowRecordId = fol.FollowRecordId and fol.IsDel = 0 and followType = 2) threeOnesUrls,
                              (select group_concat(enclosureUrl) from b_enclosure enc where enc.FollowRecordId = fol.FollowRecordId and fol.IsDel = 0 and followType = 3) drawingQuotationUrls,
                              (case fol.Status when 1 then '待审核' when 2 then '审批通过' when 3 then '审批驳回' when 4 then '审核中' when 5 then '审核中' else '' end) approveState,
                              (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) customerAddress,
                              if(fol.IsThreeOnesStatus = 1,'是','否') isThreeOnesStatus,
                              fol.RejectReason rejectReason,bp2.ProjectName childProjectName,
                                concat(ifnull((case
                                when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
                                when 1
                                then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and rel.status = 1
                                and job.IsDel = 0
                                and com.JobCode in ('xsjl')
                                and ba.Status = 1
                                and org.ProjectID = fol.ProjectId
                                and org.id =
                                (select SalesAttributionTeamId
                                from b_project_opportunity opp
                                where opp.OpportunityClueId = fol.OpportunityClueId))
                                when 2
                                then concat(ba2.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba2.EmployeeName, '(审核驳回)')
                                else '' end)
                                when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
                                when 1
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and rel.status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('qyxsjl')
                                and org.ProjectID = fol.ProjectId
                                and org.id =
                                (select SalesAttributionTeamId
                                from b_project_opportunity opp
                                where opp.OpportunityClueId = fol.OpportunityClueId))
                                when 2
                                then concat(ba2.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba2.EmployeeName, '(审核驳回)')
                                else '' end)
                                when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
                                then (case fol.Status
                                when 1
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and rel.status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('zszj')
                                and org.ProjectID = fol.ProjectId)
                                when 2 then concat(ba3.EmployeeName, '(审核通过)')
                                when 3 then concat(ba3.EmployeeName, '(审核驳回)')
                                else '' end)
                                when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
                                when 1
                                then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and com.JobCode in ('xsjl')
                                and ba.Status = 1
                                and org.ProjectID = fol.ProjectId
                                and org.id =
                                (select SalesAttributionTeamId
                                from b_project_opportunity opp
                                where opp.OpportunityClueId = fol.OpportunityClueId))
                                when 2
                                then concat(ba2.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba2.EmployeeName, '(审核驳回)')
                                when 5
                                then concat(ba2.EmployeeName, '(审核通过)')
                                else '' end)
                                when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
                                when 1
                                then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and com.JobCode in ('qyxsjl')
                                and ba.Status = 1
                                and org.ProjectID = fol.ProjectId
                                and org.id =
                                (select SalesAttributionTeamId
                                from b_project_opportunity opp
                                where opp.OpportunityClueId = fol.OpportunityClueId))
                                when 2
                                then concat(ba2.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba2.EmployeeName, '(审核驳回)')
                                when 5
                                then concat(ba2.EmployeeName, '(审核通过)')
                                else '' end)
                                when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
                                when 1
                                then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and com.JobCode in ('zszj')
                                and ba.Status = 1
                                and org.ProjectID = fol.ProjectId)
                                when 2
                                then concat(ba2.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba2.EmployeeName, '(审核驳回)')
                                when 5
                                then concat(ba2.EmployeeName, '(审核通过)')
                                else '' end)
                                else '' end),''), ' ', ifnull((case
                                when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
                                when 1
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.MainFollowProjectId)
                                when 2
                                then concat(ba3.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba3.EmployeeName, '(审核驳回)')
                                when 5
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.MainFollowProjectId)
                                else '' end)
                                when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
                                when 1
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.childProjectId)
                                when 2
                                then concat(ba3.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba3.EmployeeName, '(审核驳回)')
                                when 5
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.childProjectId)
                                else '' end)
                                when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
                                then (case fol.Status
                                when 1
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.childProjectId)
                                when 2
                                then concat(ba3.EmployeeName, '(审核通过)')
                                when 3
                                then concat(ba3.EmployeeName, '(审核驳回)')
                                when 5
                                then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
                                from s_jobsuserrel rel
                                left join s_jobs job on rel.JobID = job.ID
                                left join s_commonjobs com on job.CommonJobID = com.ID
                                left join s_organization org on job.JobOrgID = org.ID
                                left join b_account ba on ba.ID = rel.AccountID
                                where job.Status = 1
                                and job.IsDel = 0
                                and ba.Status = 1
                                and com.JobCode in ('yxjl', 'zszj')
                                and org.ProjectID = fol.childProjectId)
                                else '' end)
                                else '' end),''))                                                     approveUser,
                                fol.Status                                                            status,
                                fol.main_approval_user                                                mainApprovalUser,
                                fol.ApprovalTime                                                      approvalTime,
                                (case fol.verification_status when 0 then '未核验' when 1 then '已核验 合格' when 2 then '已核验 不合格' else '' end) verificationStatus,
                                (case fol.rectification_status when 0 then '无需整改' when 1 then '待整改' when 2 then '待复核' when 2 then '已整改' else '' end) rectificationStatus,
                                (select fv.id from b_followup_verification_record fv where rectification_status = 1 and fv.follow_record_id = fol.FollowRecordId) followVerificationRecordId
                          FROM
                              b_followup_record fol left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
                              left join b_project bp2 on fol.childProjectId = bp2.ID
                              LEFT JOIN b_project bp3 ON fol.ProjectId = bp3.ID
                              left join b_account ba2 on fol.ApprovalUser = ba2.ID
                              left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
                          WHERE fol.IsDel = 0
                            and fol.OpportunityClueId = #{opportunityClueId}
                            <if test="type == 0">
                                and fol.UserId = opp.SalesAttributionId
                            </if>
                          union all
                          select record.ID id,
                                 record.ProjectClueId projectClueId,
                                 case Type when 1 then '总监分配' when 2 then '放弃客户' when 3 then '客户池获取客户' when 4 then '客户转介' when 15 then '修改客户状态' else '' end followUpWay,
                                 case Type
                                     when 1 then concat((SELECT EmployeeName FROM b_account b WHERE b.id = ConfirmID), '将客户归属人由', OldSalesName, '分配给', SalesName)
                                     when 2 then concat(OldSalesName, '放弃客户')
                                     when 3 then concat(SalesName, note)
                                     when 4 then concat(OldSalesName,'将客户转介给', SalesName)
                                     when 15 then concat(SalesName,record.note)
                                     else '' end                                                                   followUpDetail,
                                 case Type
                                     when 1 then (SELECT EmployeeName FROM b_account b WHERE b.id = ConfirmID)
                                     when 2 then OldSalesName
                                     when 3 then SalesName
                                     when 4 then OldSalesName
                                     when 15 then SalesName
                                     else '' end                                                                   userName,
                                 DATE_FORMAT(ApplyDatetime, '%Y-%m-%d %H:%i:%s') AS                                followUpDate,
                                 ''                                                                                followUpUserRole,
                                 ApplyDatetime                                                                     jiedianDate,
                                 '2'                                                                               type,
                                 ''                                                                                enclosures,
--                                  ''                                                                                threeOnesUrls,
                                 ''                                                                                drawingQuotationUrls,
                                 '审核通过'                                                                          approveState,
                                 ''                                                                                 customerAddress,
                                 ''                                                                                 isThreeOnesStatus,
                                 ''                                                                                 rejectReason,
                                 ''                                                                                 childProjectName,
                                 ''                                                                                approveUser,
                                 ''                                                                                status,
                                 ''                                                                                mainApprovalUser,
                                 ''                                                                                approvalTime,
                                 ''                                                                                verificationStatus,
                                 ''                                                                                rectificationStatus,
                                 ''                                                                                followVerificationRecordId
                          from b_customerdistributionrecords record left join b_project_opportunity opp on (case when record.OldOpportunityClueId is null then opp.OpportunityClueId = record.OpportunityClueId else opp.OpportunityClueId = record.OldOpportunityClueId end)
                            where (record.OpportunityClueId = #{opportunityClueId} or record.OldOpportunityClueId = #{opportunityClueId})
                            and Type in (1, 2, 15)
                            <if test="type == 0">
                                and (case Type
                                    when 1 then ConfirmID = opp.SalesAttributionId
                                    when 2 then OldSalesName= opp.SalesAttributionId
                                    when 3 then SalesName= opp.SalesAttributionId
                                    when 4 then OldSalesName = opp.SalesAttributionId
                                    when 12 then OldSalesName = opp.SalesAttributionId end)
                            </if>
                          union all
                            select record.ID                                              id,
                                record.ProjectClueId                                   projectClueId,
                                '客户转介'                                                 followUpWay,
                                concat(old.EmployeeName, '将客户转介给', new.EmployeeName,
                                '%,发起方佣金占比', concat(replace(record.commissionRate * 100, '.00', ''), '%'),
                                '%,接收方佣金占比', concat(replace((1 - record.commissionRate) * 100, '.00', ''), '%'),
                                '%,发起方业绩占比', concat(replace(record.achievementRate * 100, '.00', ''), '%'),
                                '%,接收方业绩占比', concat(replace((1 - record.achievementRate) * 100, '.00', ''), '%')
                                )                                                  followUpDetail,
                                old.EmployeeName                                       userName,
                                DATE_FORMAT(record.createTime, '%Y-%m-%d %H:%i:%s') AS followUpDate,
                                ''                                                     followUpUserRole,
                                record.createTime                                      jiedianDate,
                                '2'                                                    type,
                                ''                                                     enclosures,
--                                 ''                                                     threeOnesUrls,
                                ''                                                     drawingQuotationUrls,
                                '审核通过'                                                 approveState,
                                ''                                                     customerAddress,
                                ''                                                     isThreeOnesStatus,
                                ''                                                     rejectReason,
                                ''                                                     childProjectName,
                                ''                                                     approveUser,
                                ''                                                     status,
                                ''                                                     mainApprovalUser,
                                ''                                                     approvalTime,
                                ''                                                     verificationStatus,
                                ''                                                     rectificationStatus,
                                ''                                                     followVerificationRecordId
                            from b_cust_referral record
                                left join b_project_opportunity opp on (case when record.OldOpportunityClueId is null then opp.OpportunityClueId = record.OpportunityClueId else opp.OpportunityClueId = record.OldOpportunityClueId end)
                                left join b_account old on record.ReferralUserID = old.ID
                                left join b_account new on record.ReceiverUserID = new.ID
                                where (record.OpportunityClueId = #{opportunityClueId} or record.OldOpportunityClueId = #{opportunityClueId})
                                and record.status = 2
                          union all
                            SELECT eb.id id,
                                 eb.project_clue_id projectClueId,
                                '编辑'                                                                                      followUpWay,
                                concat(ac.EmployeeName, '-编辑了该客户%,',
                                group_concat(ed.param, ': ', '由 [', ifnull(before_edit,''), '] 改为 [', ifnull(after_edit,''), ']%'), ',') followUpDetail,
                                ac.EmployeeName                                                                           userName,
                                DATE_FORMAT(eb.create_time, '%Y-%m-%d %H:%i:%s')                                          followUpDate,
                                ''                                                                                        followUpUserRole,
                                eb.create_time                                                                            jiedianDate,
                                '2'                                                                                       type,
                                ''                                                                                        enclosures,
--                                 ''                                                                                        threeOnesUrls,
                                ''                                                                                        drawingQuotationUrls,
                                (case
                                    eb.approval_status
                                    when 0 then '审核中'
                                    when 1 then '审核通过'
                                    when 2 then '审核驳回'
                                    else '审核通过'
                                end)                                                                                      approveState,
                                ''                                                                                        customerAddress,
                                ''                                                                                        isThreeOnesStatus,
                                app.reject_reason                                                                         rejectReason,
                                ''                                                                                        childProjectName,
                                ba.EmployeeName                                                                           approveUser,
                                ''                                                                                        status,
                                ''                                                                                        mainApprovalUser,
                                app.approval_time                                                                         approvalTime,
                                ''                                                                                        verificationStatus,
                                ''                                                                                        rectificationStatus,
                                ''                                                                                        followVerificationRecordId
                            FROM s_cust_edit_log_batch eb
                                left join s_cust_edit_log_detail ed on eb.id = ed.batch_id
                                LEFT JOIN b_account ac ON eb.creator = ac.ID
                                left join b_approval_process_record app on app.approval_process_fk_id = eb.id
                                left join b_account ba on app.approval_user = ba.ID
                            WHERE eb.opportunity_clue_id = #{opportunityClueId}
                                AND eb.edit_type = 2
                                group by eb.id
                            union all
                            select record.id                                                            id,
                                record.project_clue_id                                               projectClueId,
                                case Type when 1 then '修改客户状态' when 2 then '修改客户过保及预警时间' else '' end followUpWay,
                                concat(confirm_person_name, record.note)                             followUpDetail,
                                confirm_person_name                                                  userName,
                                DATE_FORMAT(apply_date_time, '%Y-%m-%d %H:%i:%s') AS                 followUpDate,
                                ''                                                                   followUpUserRole,
                                apply_date_time                                                      jiedianDate,
                                '2'                                                                  type,
                                enclosurse_url                                                       enclosures,
--                                 ''                                                                   threeOnesUrls,
                                ''                                                                   drawingQuotationUrls,
                                '审核通过'                                                            approveState,
                                ''                                                                   customerAddress,
                                ''                                                                   isThreeOnesStatus,
                                reason                                                               rejectReason,
                                ''                                                                   childProjectName,
                                ''                                                                   approveUser,
                                ''                                                                   status,
                                ''                                                                   mainApprovalUser,
                                ''                                                                   approvalTime,
                                ''                                                                   verificationStatus,
                                ''                                                                   rectificationStatus,
                                ''                                                                   followVerificationRecordId
                            from b_customer_change_node_record record
                                left join b_project_opportunity opp on opp.OpportunityClueId = record.opportunity_clue_id
                            where record.opportunity_clue_id = #{opportunityClueId}
                                and Type in (1, 2)
                          ) t
        order by t.jiedianDate desc
    </select>

    <!--客户详情里面的节点记录-->
    <select id="clueNodeRecord" parameterType="java.util.Map" resultType="java.util.Map">
        select * from (
            SELECT
                fr.FollowUpWay followUpWay,
                fr.CommunicationContent communicationContent,
                fr.FollowUpDetail followUpDetail,
                ac.EmployeeName employeeName,
                DATE_FORMAT(fr.FollowUpDate, '%Y-%m-%d %H:%i:%s') followUpDate,
                fr.OrgName orgName,
                ac.EmployeeName as userName
            FROM
                b_followup_record fr
                    LEFT JOIN b_account ac ON fr.UserId = ac.ID
            WHERE
                ProjectClueId = #{projectClueId}
              AND fr.FollowUpType = 2
            union all
            select case Type when 1 then '总监分配' when 2 then '放弃客户' when 3 then '客户池获取客户' when 4 then '客户转介' when 15 then '修改客户状态' else '' end followUpWay,
                   '' communicationContent,
                   case Type
                       when 1 then concat((SELECT EmployeeName FROM b_account b WHERE b.id = ConfirmID), '将客户归属人由', OldSalesName, '分配给', SalesName)
                       when 2 then concat(OldSalesName, '放弃客户')
                       when 3 then concat(SalesName, note)
                       when 4 then concat(OldSalesName,'将客户转介给', SalesName)
                       when 15 then concat(SalesName,record.note)
                       else '' end                                                                  followUpDetail,
                   case Type
                       when 1 then (SELECT EmployeeName FROM b_account b WHERE b.id = ConfirmID)
                       when 2 then OldSalesName
                       when 3 then SalesName
                       when 4 then OldSalesName
                       when 15 then SalesName
                       else '' end                                                                   employeeName,
                   DATE_FORMAT(ApplyDatetime, '%Y-%m-%d %H:%i:%s') AS                                followUpDate,
                   ''                                                                                orgName,
                   case Type
                       when 1 then (SELECT EmployeeName FROM b_account b WHERE b.id = ConfirmID)
                       when 2 then OldSalesName
                       when 3 then SalesName
                       when 4 then OldSalesName
                       when 15 then SalesName
                       else '' end                                                                    userName
            from b_customerdistributionrecords record left join b_project_opportunity opp on (case when record.OldOpportunityClueId is null then opp.OpportunityClueId = record.OpportunityClueId else opp.OpportunityClueId = record.OldOpportunityClueId end)
            where (record.ProjectClueId = #{projectClueId} or record.OldProjectClueId = #{projectClueId})
              and Type in (1, 2, 4, 15)
                      ) t
        order by t.followUpDate desc
    </select>

    <select id="dealRecord" resultType="java.util.Map">
        select brm.RoomID,
               brm.RoomName,
               brm.CstName,
               brm.HtTotal,
               DATE_FORMAT(brm.OrderDate,'%Y.%m.%d %H:%i:%s') OrderDate,
               DATE_FORMAT(brm.ContractDate,'%Y.%m.%d %H:%i:%s') ContractDate,
               brm.ClueStatus,
               brm.CjBldArea,
               brm.YsAmount,
               bp.ProjectName
        from b_opportunity_trade brm
                 left join b_project bp on brm.ProjectID = bp.ID
        where brm.TradeStatus = '激活' and brm.OpportunityClueId in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getReferralOrderCustomerByOppId" resultType="java.lang.String">
        select ref.OpportunityClueId
        from b_cust_referral ref
        where ref.OldOpportunityClueId = #{oppId}
    </select>

    <!--客户详情里面的转介记录-->
    <select id="toMoveRecord" parameterType="java.util.Map" resultType="java.util.Map">
        select * from (
            SELECT
                bc.ConfirmID confirmId,
                ac.EmployeeName confirmPersonName,
                DATE_FORMAT( bc.ConfirmTime, '%Y-%m-%d %H:%i:%s' ) AS confirmTime,
                bc.Reason reason,
                bc.SalesId salesId,
                bc.SalesName salesName,
                bc.OldSalesName oldSalesName,
                (
            CASE

                WHEN bc.`Type` = 1 THEN
                '报备'
                WHEN bc.`Type` = 2 THEN
                '接待大使分配'
                WHEN bc.`Type` = 3 THEN
                '销售经理APP分配'
                WHEN bc.`Type` = 4 THEN
                '进入公共池'
                WHEN bc.`Type` = 5 THEN
                '客户明细重分配'
                WHEN bc.`Type` = 6 THEN
                '后台重分配'
                WHEN bc.`Type` = 7 THEN
                '进入等待池'
                WHEN bc.`Type` = 8 THEN
                '销售组长APP分配'
                WHEN bc.`Type` = 9 THEN
                '渠道经理APP分配'
                WHEN bc.`Type` = 10 THEN
                '渠道组长APP分配'
                WHEN bc.`Type` = 11 THEN
                '线上认购分配'
            END
                ) type,
                ( CASE WHEN bc.`childType` = 1 THEN '报备人' ELSE '置业顾问' END ) modifyingRoles,
                bc.note
            FROM
                b_customerdistributionrecords bc
                LEFT JOIN b_account ac ON bc.ConfirmID = ac.ID
            WHERE
                bc.ProjectClueId = #{projectClueId}
            union
            SELECT
                md.CreateUserId AS confirmId,
                md.CreateUserName AS confirmPersonName,
                DATE_FORMAT( md.CreateTime, '%Y-%m-%d %H:%i:%s' ) AS confirmTime,
                md.Reason AS reason,
                md.PerformanceAttributorID AS salesId,
	            md.PerformanceAttributor AS salesName,
                md.OldPerformanceAttributor AS oldSalesName,
                '明源修改' AS type,
                '业绩归属人' AS modifyingRoles,
                md.Reason AS note
            FROM
                s_modification_details md where
                md.ProjectClueId = #{projectClueId}
                and md.Reason = '明源修改-旭客同步') t order by t.confirmTime desc
    </select>

    <!--客户详情中的跟进记录-->
    <select id="followUpRecord" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            (
                SELECT
                    sd.DictName
                FROM
                    s_dictionary sd
                WHERE
                    sd.pid = ( SELECT s.id FROM s_dictionary s WHERE s.DictCode = '2001' )
                  AND sd.DictCode = fr.FollowUpWay
            ) AS followUpWay,
            DATE_FORMAT( fr.FollowUpDate, '%Y-%m-%d %H:%i:%s' ) AS followUpDate,
            fr.FollowUpDetail followUpDetail,
            fr.NextFollowUpDate nextFollowUpDate,
            (
                CASE
                    WHEN fr.FollowUpUserRole IN ( '3', '4' ) THEN
                            ( SELECT `Name` FROM a_broker_user ab WHERE ab.id = fr.UserId ) ELSE ( SELECT EmployeeName FROM b_account b WHERE b.id = fr.UserId )
                    END
                ) AS userName
        FROM
            b_followup_record fr
        WHERE
            fr.ProjectClueId = #{projectClueId}
          AND fr.FollowUpType = 1
        ORDER BY
            fr.createTime DESC
    </select>

    <!--机会跟进记录-->
    <select id="followUpOppRecord" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            (
                SELECT
                    sd.DictName
                FROM
                    s_dictionary sd
                WHERE
                    sd.pid = ( SELECT s.id FROM s_dictionary s WHERE s.DictCode = '2001' )
                  AND sd.DictCode = fr.FollowUpWay
            ) AS followUpWay,
            DATE_FORMAT( fr.FollowUpDate, '%Y-%m-%d %H:%i:%s' ) AS followUpDate,
            fr.FollowUpDetail followUpDetail,
            fr.NextFollowUpDate nextFollowUpDate,
            (
                CASE
                    WHEN fr.FollowUpUserRole IN ( '3', '4' ) THEN
                            ( SELECT `Name` FROM a_broker_user ab WHERE ab.id = fr.UserId ) ELSE ( SELECT EmployeeName FROM b_account b WHERE b.id = fr.UserId )
                    END
                ) AS userName
        FROM
            b_followup_record fr
        WHERE
            fr.OpportunityClueId = #{opportunityClueId}
          AND fr.FollowUpType = 1
        ORDER BY
            fr.createTime DESC
    </select>

    <!--首访问卷-->
    <select id="firstInterviewQuestionnaire" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            CustomerName,OpportunityClueId,ProjectClueId,AgeGroupDesc,projectId,CustomerMobile,WorkAreaDesc,
            BelongIndustriseDesc,LifeAreaDesc,FamilyStructureDesc,FamilyIncomeDesc,
            PurchasePurposeDesc,HomeNum,CurrentHouseTypeDesc,IntentionalAreaDesc,IntentionalFloorDesc,AcceptPriceDesc,
            (case Qualifications when '0' then '否'
                                 when '1' then '是'
                                 when '2' then '审核中'
                                 else '' end) Qualifications,BuyPointDesc,ResistanceDesc,Description,NoEligibilityReasonDesc,PropertyTypeDesc,
            EligibilitySolveDesc,PurchaseFundsSourceDesc,HousingNumberDesc,IsTemplateRoomDesc,IsAddWeChatDesc,
            ReceptionDurationDesc,DecisionMakerDesc,HobbyDesc,VehicleInformationDesc,MajorCompetitorsDesc,
            MinorCompetitionDesc,ResidentialAreaDesc,EmployerDesc,WorkJobsDesc,IsBuyFitUpPackageDesc
        FROM
            b_information
        WHERE
            OpportunityClueId = #{opportunityClueId}
    </select>

    <!--查询重分配的项目可以分配的状态-->
    <select id="currProjectInfoSelect" parameterType="java.lang.String" resultType="java.util.Map">
            SELECT
            ID,
            ProjectName,
            TokerResetType,
            AnChangResetType
            FROM
            b_project
            WHERE
            ID = #{projectId}
    </select>

    <!--查询项目符合不符合重分配线索-->
    <select id="SelectClueConditionClue" parameterType="java.util.Map" resultType="java.lang.String">
        select ProjectClueId as num from b_project_clues
        where
        ProjectClueId in
            <foreach collection="projectClueIdList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        AND  FIND_IN_SET(ClueStatus,#{isResetType})
    </select>
    <!--查询项目符合不符合重分配的案场信息-->
    <select id="SelectClueConditionAC" parameterType="java.util.Map" resultType="java.lang.String">
        select OpportunityClueId as num from b_project_opportunity
        where
        OpportunityClueId in
            <foreach collection="opportunityClueIdList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        AND  FIND_IN_SET(ClueStatus,#{isResetType})
    </select>

    <!--交易信息-->
    <select id="transactionInformation" parameterType="java.util.Map" resultType="java.util.Map">
         select brm.RoomName,brm.SsAmount,brm.YsAmount,bot.CjBldArea from
		b_returned_money brm
		left join b_opportunity_trade  bot
		on brm.TradeGUID = bot.TradeGUID
		where brm.OpportunityClueId=(select OpportunityClueId from b_project_opportunity where ProjectClueId=#{projectClueId})
    </select>

    <select id="getDealRecordGroup" parameterType="String" resultType="java.util.Map">
        select brm.RoomID,brm.RoomName from
            b_returned_money brm
                left join b_opportunity_trade  bot
                          on brm.TradeGUID = bot.TradeGUID
        where brm.OpportunityClueId=(select OpportunityClueId from b_project_opportunity where ProjectClueId=#{projectClueId})
          and bot.TradeStatus = '激活'
        group by brm.RoomID,brm.RoomName
    </select>

    <!--置业顾问获取交易记录-->
    <select id="getDealRecord" parameterType="String" resultType="java.util.Map">
        select brm.RoomID,brm.RoomName,brm.SsAmount,brm.YsAmount,bot.CjBldArea,
               DATE_FORMAT(brm.YsDate,'%Y-%m-%d %H:%i:%s') YsDate,brm.ItemName from
            b_returned_money brm
                left join b_opportunity_trade  bot
                          on brm.TradeGUID = bot.TradeGUID
        where brm.OpportunityClueId=(select OpportunityClueId from b_project_opportunity where ProjectClueId=#{projectClueId})
          and bot.TradeStatus = '激活'
          and brm.RoomID = #{roomID}
    </select>

    <!--获取明源机会ID-->
    <select id="getIntensionId" parameterType="java.lang.String" resultType="java.lang.String">
        select IntentionID from b_project_opportunity where ProjectClueId = #{projectClueId};
    </select>


    <!--案场导出需要用的sql-->
    <select id="excelAc" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ExcelModel">
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
        SELECT
        bp.OpportunityClueId, -- 机会ID
        bp.ProjectClueId, -- 线索ID
        bp.CustomerID, -- 客户ID
        bp.BasicCustomerId,-- 客户ID
        bp.CustomerName, -- 客户姓名
        bp.CustomerMobile as CustomerMobileAll, -- 全号
        concat(left(bp.CustomerMobile,3),'****',right(bp.CustomerMobile,4)) CustomerMobile,-- 客户手机
        bp.Label caseLabel,
        coe.channel_label channelLabel,
        bp.CustomerCardTypeDesc, -- 证件类型
        bp.CustomerCardNum, -- 证件号码
        (case
        bp.CustomerGender
        when 1 then '男'
        when 2 then '女'
        else '' end ) as CustomerGender, -- 客户性别
        (case
        bp.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus, -- 状态
        (case bp.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 3 then '案场成交'
        when 4 then '全民经纪人成交'
        else '' end ) as SourceType, -- 成交渠道
        bp.SourceTypeOldDesc as SourceTypeDesc,
        dict.DictName as Level,-- 等级
        bp.CustomerLevel, -- 客储等级
        bp.MainMediaName, -- 媒体大类
        bp.SubMediaName, -- 媒体子类
        bp.ProjectName, -- 项目名称
        p.AreaName as AreaName, -- 区域
        bp.TokerAttributionName,-- 拓客归属人
        bp.TokerAttributionTime,-- 拓客归属时间
        bp.SalesAttributionName,-- 案场归属人
        bp.SalesAttributionTime,-- 案场归属时间
        bp.SalesAttributionTeamName,-- 案场团队
        DATE_FORMAT(bp.ReportCreateTime,'%Y-%m-%d %H:%i:%s') as ReportCreateTime,-- 报备时间
        DATE_FORMAT(bp.TheFirstVisitDate,'%Y-%m-%d %H:%i:%s') as TheFirstVisitDate,-- 到访时间（首访）
        DATE_FORMAT(bp.SalesTheLatestFollowDate,'%Y-%m-%d %H:%i:%s') as SalesTheLatestFollowDate,-- 案场最近跟进时间
        DATE_FORMAT(bp.BookingDate,'%Y-%m-%d %H:%i:%s') as BookingDate,-- 认筹时间
        DATE_FORMAT(
        ot.SubscribingDate
        ,'%Y-%m-%d %H:%i:%s') as SubscribingDate,
        DATE_FORMAT(
        ot.ContractDate
        ,'%Y-%m-%d %H:%i:%s') as ContractDate,
        (case bp.SourceTypeOld
        when 1 then bp.ReportTeamName
        else ReportUserName end ) as ReportUserName, -- 报备人
        DATE_FORMAT(bp.ExpectedVisitDate,'%Y-%m-%d %H:%i:%s')as ExpectedVisitDate, -- 预计到访时间
        DATE_FORMAT((case when bp.SalesTheLatestFollowDate is not null then bp.SalesTheLatestFollowDate else bp.TokerTheLatestFollowDate end),'%Y-%m-%d %H:%i:%s') as FollowUpDate,-- 最近跟进时间
        bp.CustomerAddress, -- 客户地址
        bi.AgeGroupDesc, -- 年龄段
        bi.WorkAreaDesc, -- 工作区域
        bi.BelongIndustriseDesc, -- 所属行业
        bi.LifeAreaDesc, -- 生活区域
        bi.FamilyStructureDesc, -- 家庭结构
        bi.FamilyIncomeDesc, -- 家庭收入
        bi.PurchasePurposeDesc, -- 置业目的
        bi.HomeNumDesc, -- 置业次数
        bi.CurrentHouseTypeDesc, -- 现居住房型
        bi.IntentionalAreaDesc, -- 意向面积
        bi.IntentionalFloorDesc, -- 意向楼层
        bi.AcceptPriceDesc, -- 接受单价
        bi.AcceptTotalPriceDesc, -- 接受总价
        bi.BuyPointDesc, -- 买点
        bi.ResistanceDesc, -- 抗性
        bi.Description, -- 备注
        (case bi.Qualifications
        when '0' then '否'
        when '1' then '是'
        when '2' then '审核中'
        else '' end ) as Qualifications, -- 是否具备购房资格
        bi.NoEligibilityReasonDesc, -- 无购房资格原因
        bi.PropertyTypeDesc, -- 物业类型
        bi.EligibilitySolveDesc, -- 购房资格能否解决
        bi.PurchaseFundsSourceDesc, -- 购房资金来源
        bi.HousingNumberDesc, -- 持房套数
        bi.IsTemplateRoomDesc, -- 是否样板房
        bi.IsAddWeChatDesc, -- 是否加微信
        bi.ReceptionDurationDesc, -- 接待时长
        bi.DecisionMakerDesc, -- 决策人
        bi.HobbyDesc, -- 兴趣爱好
        bi.VehicleInformationDesc, -- 车辆信息
        bi.MajorCompetitorsDesc, -- 主要竞品
        bi.MinorCompetitionDesc, -- 次要竞品
        bi.ResidentialAreaDesc, -- 居住小区
        bi.EmployerDesc, -- 工作单位
        bi.WorkJobsDesc, -- 工作岗位
        bi.IsBuyFitUpPackageDesc, -- 是否购买装修包
        bp.DataCompleteRate, -- 关键信息完成度
        bp.DataCompleteAttachRate, -- 附加信息完成度
        (case bp.IsRepurchase
        when 1 then "是"
        when 0 then "否"
        else "" end ) as IsRepurchase, -- 是否是联名客户
        (case when coe.ChildReportSourceDesc is not null
        and coe.ChildReportSourceDesc !='' and coe.ChildReportSourceDesc !='null'
        then concat(coe.ReportSourceDesc,'-',coe.ChildReportSourceDesc)
        else coe.ReportSourceDesc end) ReportSourceDesc,
        (case when coe.ext1 = 1 then '有效'
        when coe.ext1 = 2 then '主动放弃'
        when coe.ext1 = 3 then '跟进逾期未进入公共池'
        when coe.ext1 = 4 then '跟进逾期进入公共池'
        when coe.ext1 = 5 then '认购逾期'
        else '有效' end) clueValidity
        FROM
        b_project_opportunity bp
        left join b_information bi on bp.OpportunityClueId = bi.OpportunityClueId
        LEFT JOIN b_project p on p.id = bp.projectId
        LEFT JOIN s_dictionary dict on dict.DictCode = bp.TradeLevel and dict.PID=(select ID from s_dictionary where DictCode='s_gfyx')
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bp.ProjectClueId
        LEFT JOIN (
        SELECT OpportunityClueId,
        MAX(case when ClueStatus = '认购' then bot.OrderYwgsDate ELSE NULL END) SubscribingDate,
        MAX(case when ClueStatus = '签约' then bot.ContractYwGsDate ELSE NULL END) ContractDate
        FROM b_opportunity_trade bot
        WHERE bot.ClueStatus IN('签约','认购')
        AND bot.ProjectID = #{projectId}
        AND TradeStatus = '激活'
        GROUP BY OpportunityClueId
        ) ot ON ot.OpportunityClueId = bp.OpportunityClueId
        WHERE
        bp.projectId=#{projectId}
        <if test="clueStatusList != null and clueStatusList.size() > 0">
            and bp.ClueStatus in
            <foreach collection="clueStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="levelList != null and levelList.size() > 0">
            and bp.TradeLevel in
            <foreach collection="levelList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="sourceTypeList != null and sourceTypeList.size() > 0">
            and bp.SourceTypeOld in
            <foreach collection="sourceTypeList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isRepurchaseList != null and isRepurchaseList.size() > 0">
            and bp.IsRepurchase in
            <foreach collection="isRepurchaseList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isReportList != null and isReportList.size() > 0">
            and coe.ReportSource in
            <foreach collection="isReportList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="mainMediaList != null and mainMediaList.size() > 0">
            and bp.MainMediaGUID in
            <foreach collection="mainMediaList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerName!=null and customerName!='' ">
            AND bp.CustomerName LIKE '%${customerName}%'
        </if>
        <if test="customerMobile!=null and customerMobile!='' ">
            AND bp.CustomerMobile LIKE '%${customerMobile}%'
        </if>
        <if test="reportUserName!=null and reportUserName!=''">
            AND bp.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="salesAttributionName!=null and salesAttributionName!=''">
            AND bp.SalesAttributionName LIKE '%${salesAttributionName}%'
        </if>
        <if test="redistributionId!=null and redistributionId!='' ">
            AND FIND_IN_SET(bp.OpportunityClueId,#{redistributionId})
        </if>
        <if test="reportTime==1 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and bp.TheFirstVisitDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==2 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and bp.SalesTheLatestFollowDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==3 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and bp.SalesVisitExpireDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==4 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and bp.ReportCreateTime BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==5 and date1!=null and date1!='' and date2!=null and date2!=''">
            and ot.SubscribingDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==6 and date1!=null and date1!='' and date2!=null and date2!=''">
            and ot.ContractDate BETWEEN #{date1}  AND #{date2}
        </if>
        order by bp.TheFirstVisitDate desc;
        COMMIT ;
    </select>

    <!--渠道导出数据需要用的sql-->
    <select id="excelChannel" resultType="cn.visolink.system.channel.model.ExcelModel" parameterType="java.util.Map">
        SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
        SELECT
        bpc.ProjectClueId, -- 线索id
        bpc.CustomerName, -- 客户姓名
        bpc.BasicCustomerId,-- 客户id
        bpc.CustomerMobile as CustomerMobileAll, -- 全号
        concat(left(bpc.CustomerMobile,3),'****',right(bpc.CustomerMobile,4))  CustomerMobile,-- 客户手机号（隐号）
        (case
        bpc.CustomerGender
        when 1 then '男'
        when 2 then '女'
        else '' end ) as CustomerGender, -- 客户性别
        bpc.Label caseLabel, -- 案场标签
        coe.channel_label channelLabel,
        bpc.CustomerCardTypeDesc as CustomerCardType, -- 证件类型
        bpc.CustomerCardNum, -- 证件号码
        bpc.Level,-- 等级
        dic.DictName TradeLevel,
        (case bpc.SourceTypeOld
        when 1 then bpc.ReportTeamName
        else bpc.ReportUserName end ) as ReportUserName, -- 报备人
        (case
        bpc.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus,  -- 状态
        (case bpc.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 3 then '案场成交'
        when 4 then '全民经纪人成交'
        else '' end ) as SourceType,-- 来源类型（渠道类别）（改后弃用---不要删除，其他地方有用此字段）
        bpc.SourceTypeOldDesc as SourceTypeDesc,
        bpc.CustomerLevel, -- 客储等级
        bpc.MainMediaName, -- 媒体大类
        bpc.SubMediaName, -- 媒体子类
        bpc.ProjectName, -- 项目名称
        p.AreaName as AreaName, -- 区域
        bpc.TokerAttributionTeamName,-- 拓客团队
        bpc.TokerAttributionName,-- 拓客归属人
        DATE_FORMAT(bpc.TokerAttributionTime,'%Y-%m-%d %H:%i:%s')as TokerAttributionTime,-- 拓客归属时间
        bpc.SalesAttributionTeamName,-- 销售团队
        bpc.SalesAttributionName,-- 案场归属人
        DATE_FORMAT(bpc.SalesAttributionTime,'%Y-%m-%d %H:%i:%s')as SalesAttributionTime,-- 案场归属时间
        DATE_FORMAT(bpc.ReportCreateTime,'%Y-%m-%d %H:%i:%s')as ReportCreateTime,-- 报备时间
        DATE_FORMAT(bpc.LastRefreshReportExpireDate,'%Y-%m-%d %H:%i:%s')as LastRefreshReportExpireDate,
        DATE_FORMAT(bpc.TheFirstVisitDate,'%Y-%m-%d %H:%i:%s')as TheFirstVisitDate,-- 到访时间（首访）
        DATE_FORMAT(bpc.BookingDate,'%Y-%m-%d %H:%i:%s')as BookingDate,-- 认筹时间
        DATE_FORMAT(bpc.SubscribingDate,'%Y-%m-%d %H:%i:%s')as SubscribingDate,-- 认购时间
        DATE_FORMAT(bpc.ContractDate,'%Y-%m-%d %H:%i:%s')as ContractDate,-- 签约时间
        DATE_FORMAT(bpc.ExpectedVisitDate,'%Y-%m-%d %H:%i:%s')as ExpectedVisitDate, -- 预计到访时间
        DATE_FORMAT(bpc.TokerVisitExpireDate,'%Y-%m-%d %H:%i:%s')as TokerVisitExpireDate, -- 渠道失效时间
        DATE_FORMAT(bpc.ReportExpireDate,'%Y-%m-%d %H:%i:%s')as ReportExpireDate, -- 报备失效时间
        DATE_FORMAT((case when bpc.SalesTheLatestFollowDate is not null then bpc.SalesTheLatestFollowDate else bpc.TokerTheLatestFollowDate end),'%Y-%m-%d %H:%i:%s') as FollowUpDate,
        (case bpc.IsRepurchase
        when 1 then "是"
        when 0 then "否"
        else "" end ) as IsRepurchase,
        bpc.ReportUserRole,
        bpc.InvalidReason invalidReason,
        (case when coe.clue_validity = 1 then '有效'
        when coe.clue_validity = 2 then '主动放弃'
        when coe.clue_validity = 3 then '报备逾期'
        when coe.clue_validity = 4 then '作废'
        when coe.clue_validity = 5 then '渠道逾期'
        else '有效' end) clueValidity,
        (case when coe.ChildReportSourceDesc is not null
        and coe.ChildReportSourceDesc !='' and coe.ChildReportSourceDesc !='null'
        then concat(coe.ReportSourceDesc,'-',coe.ChildReportSourceDesc)
        else coe.ReportSourceDesc end) ReportSourceDesc,
        bpc.Remarks,
        ifnull(ba.EmployeeName,'') AccountManager,
        (case when ap.brokerId is null then '否'
        when ap.brokerId is not null then '是'
        else '否' end )as IsSenior,
        aa.activename as ActiveName
        FROM
        b_project_clues bpc
        LEFT JOIN b_project p on p.id = bpc.projectId
        left join (select sd.DictName,sd.DictCode from s_dictionary sd where sd.PID=(select ID from s_dictionary where DictCode='s_gfyx') ) dic on dic.DictCode = bpc.TradeLevel
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bpc.ProjectClueId
        left join a_account_performance ap on bpc.ProjectClueId = ap.ProjectClueId and ap.isdel = 0
        left join a_accountactive aa on ap.activeid = aa.id and aa.isdel = 0
        left join b_account ba on ap.accountid = ba.ID
        <where>
            <if test="projectList!=null and projectList.size()>0">
                bpc.projectId in
                <foreach collection="projectList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="projectList==null or projectList.size()==0">
                bpc.projectId = #{projectId}
            </if>
        <if test="clueStatusList != null and clueStatusList.size() > 0">
            and bpc.ClueStatus in
            <foreach collection="clueStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="levelList != null and levelList.size() > 0">
            and bpc.`Level` in
            <foreach collection="levelList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="tradeLevelList != null and tradeLevelList.size() > 0">
            and bpc.`TradeLevel` in
            <foreach collection="tradeLevelList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="sourceTypeList != null and sourceTypeList.size() > 0">
            and bpc.SourceTypeOld in
            <foreach collection="sourceTypeList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="brokerList != null and brokerList.size() > 0">
            and bpc.ReportUserRole in
            <foreach collection="brokerList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="relatedList != null and relatedList.size() > 0">
            and bpc.IsRepurchase in
            <foreach collection="relatedList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isReportList != null and isReportList.size() > 0">
            and coe.ReportSource in
            <foreach collection="isReportList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="clueValidityList != null and clueValidityList.size() > 0">
            and coe.clue_validity in
            <foreach collection="clueValidityList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerName!=null and customerName!='' ">
            AND bpc.CustomerName LIKE '%${customerName}%'
        </if>
        <if test="customerMobile!=null and customerMobile!='' ">
            AND bpc.CustomerMobile LIKE '%${customerMobile}%'
        </if>
        <if test="reportUserName!=null and reportUserName!=''">
            AND (bpc.ReportUserName LIKE '%${reportUserName}%'
            or bpc.PerformanceAttributor like concat('%',#{reportUserName},'%'))
        </if>
        <if test="redistributionId!=null and redistributionId!='' ">
            AND  FIND_IN_SET(bpc.ProjectClueId,#{redistributionId})
        </if>
        <if test="reportTime==1 and date1!=null and date1!='' and date1!=undefined and date2!=null and date2!='' and date2!=undefined  ">
            and bpc.ReportCreateTime BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==2  and date1!=null and date1!='' and date1!=undefined and date2!=null and date2!='' and date2!=undefined ">
            and bpc.ReportExpireDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==3  and date1!=null and date1!='' and date1!=undefined and date2!=null and date2!='' and date2!=undefined  ">
            and bpc.ExpectedVisitDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==4  and date1!=null and date1!='' and date1!=undefined and date2!=null and date2!='' and date2!=undefined  ">
            and bpc.TokerVisitExpireDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==5  and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bpc.TheFirstVisitDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="reportTime==6  and date1!=null and date1!='' and date2!=null and date2!=''  ">
            and bpc.LastRefreshReportExpireDate BETWEEN #{date1}  AND #{date2}
        </if>
        <if test="isSecondBroker !=null and isSecondBroker != '' and isSecondBroker == 0">
            and ap.brokerId is null
        </if>
        <if test="isSecondBroker !=null and isSecondBroker != '' and isSecondBroker == 1">
            and ap.brokerId is not null
        </if>
        order by bpc.ReportCreateTime desc
        </where>;
        COMMIT ;
    </select>

    <!--排卡明细需要的接口-->
    <select id="excelCard" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ExcelModel">
        SELECT
        @rownum:=@rownum+1 as rownum,
        bp.OpportunityClueId, -- 机会ID
        bp.ProjectClueId, -- 线索ID
        bp.CustomerID, -- 客户ID
        bp.BasicCustomerId,-- 客户ID
        bp.CustomerName, -- 客户姓名
        bp.CustomerMobile as CustomerMobileAll, -- 全号
        concat(left(bp.CustomerMobile,3),'****',right(bp.CustomerMobile,4))  CustomerMobile,-- 客户手机
        bp.CustomerCardTypeDesc, -- 证件类型
        bp.CustomerCardNum, -- 证件号码
        (case
        bp.CustomerGender
        when 1 then '男'
        when 2 then '女'
        else '' end ) as CustomerGender, -- 客户性别
        (case
        bp.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus,  -- 状态
        (case bp.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 4 then '案场成交'
        when 5 then '全民经纪人成交'
        else '' end ) as SourceType, -- 成交渠道
        (select sd.DictName from s_dictionary sd where sd.PID=(select ID from s_dictionary where DictCode='s_gfyx') and
        sd.DictCode = bp.TradeLevel) as Level,-- 等级
        bp.SourceTypeOldDesc as SourceTypeDesc,
        bp.CustomerLevel, -- 客储等级
        bp.MainMediaName, -- 媒体大类
        bp.SubMediaName, -- 媒体子类
        bp.ProjectName, -- 项目名称
        ( select b.AreaName from b_project b where b.id = bp.projectId) as AreaName, -- 区域
        bp.TokerAttributionName,-- 拓客归属人
        bp.TokerAttributionTime,-- 拓客归属时间
        bp.SalesAttributionName,-- 案场归属人
        bp.SalesAttributionTime,-- 案场归属时间
        DATE_FORMAT(bp.ReportCreateTime,'%Y-%m-%d %H:%i:%s') as ReportCreateTime,-- 报备时间
        DATE_FORMAT(bp.TheFirstVisitDate,'%Y-%m-%d %H:%i:%s') as TheFirstVisitDate,-- 到访时间（首访）
        DATE_FORMAT(bp.SalesTheLatestFollowDate,'%Y-%m-%d %H:%i:%s') as SalesTheLatestFollowDate,-- 最近跟进时间
        DATE_FORMAT(bp.SalesVisitExpireDate,'%Y-%m-%d %H:%i:%s') as SalesVisitExpireDate,-- 案场失效时间
        DATE_FORMAT(bp.BookingDate,'%Y-%m-%d %H:%i:%s') as BookingDate,-- 认筹时间
        DATE_FORMAT(bp.SubscribingDate,'%Y-%m-%d %H:%i:%s')as SubscribingDate,-- 认购时间
        DATE_FORMAT(bp.ContractDate,'%Y-%m-%d %H:%i:%s')as ContractDate,-- 签约时间
        bp.ReportUserName, -- 报备人
        DATE_FORMAT(bp.ExpectedVisitDate,'%Y-%m-%d %H:%i:%s')as ExpectedVisitDate, -- 预计到访时间
        DATE_FORMAT((select FollowUpDate from b_followup_record where ProjectClueId = bp.ProjectClueId order by CreateTime limit 1),'%Y-%m-%d %H:%i:%s') as FollowUpDate, -- 最近跟进时间
        (select FollowUpWay from b_followup_record where ProjectClueId = bp.ProjectClueId order by CreateTime limit 1) as FollowUpWay, -- 最近跟进方式
        (case bc.TransactionType
        when 1 then '排小卡'
        when 2 then '排大卡'
        else '' end ) as TransactionType, -- 卡片类型
        bc.PropertyTypeDesc, -- 物业类型描述
        bc.FirstScale, -- 首付比例
        bc.CardLockTypeDesc, -- 卡锁定方式描述
        bc.CardLockMoney, -- 卡锁定金额
        (case  bc.CreditSubmission
        when 1 then '是'
        when 2 then '否'
        else '' end ) as CreditSubmission, -- 是否提交征信
        (case bc.HousingQualification
        when 1 then '是'
        when 2 then '否'
        else '' end ) as HousingQualification -- 是否具备购房资格
        FROM
        (SELECT @rownum:=0) r,b_project_opportunity bp
				left join b_customer_row_card bc on bp.OpportunityClueId = bc.OpportunityClueId
        WHERE
        bp.projectId=#{projectId}
        <if test="clueStatusList != null and clueStatusList.size() > 0">
            and ClueStatus in
            <foreach collection="clueStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="levelList != null and levelList.size() > 0">
            and TradeLevel in
            <foreach collection="levelList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="sourceTypeList != null and sourceTypeList.size() > 0">
            and SourceTypeOld in
            <foreach collection="sourceTypeList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerName!=null and customerName!='' ">
            AND bp.CustomerName LIKE '%${customerName}%'
        </if>
        <if test="customerMobile!=null and customerMobile!='' ">
            AND bp.CustomerMobile LIKE '%${customerMobile}%'
        </if>
        <if test="reportUserName!=null and reportUserName!=''">
            AND bp.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="salesAttributionName!=null and salesAttributionName!=''">
            AND bp.SalesAttributionName LIKE '%${salesAttributionName}%'
        </if>
        <if test="redistributionId!=null and redistributionId!='' ">
            AND  FIND_IN_SET(bp.OpportunityClueId,#{redistributionId})
        </if>
        <if test="reportTime==1 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and (bp.TheFirstVisitDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
        </if>
        <if test="reportTime==2 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and (bp.SalesTheLatestFollowDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
        </if>
        <if test="reportTime==3 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and (bp.SalesVisitExpireDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
        </if>
        <if test="reportTime==4 and date1!=null and date1!='' and date1!=undefined  and date2!=null and date2!='' and date2!=undefined  ">
            and (bp.ReportCreateTime BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
        </if>
        order by bp.TheFirstVisitDate desc
    </select>

    <!--查询项目名称-->
    <select id="selectProjectName" parameterType="java.util.Map" resultType="java.util.Map">
        select ProjectName from b_project where id = #{projectId}
    </select>

    <!--查询客户明细数据-->
    <select id="queryAllCustmerDetails" parameterType="cn.visolink.system.channel.model.form.ProjectCluesForm" resultType="cn.visolink.system.channel.model.vo.ProjectCluesVO">
        SELECT 1 AS rownum,
        bpc.ProjectClueId, -- 线索id
        bpc.CustomerName, -- 客户姓名
        bpc.BasicCustomerId,-- 客户id
        concat(left(bpc.CustomerMobile,3),'****',right(bpc.CustomerMobile,4))  CustomerMobile,-- 客户手机
        (case
        bpc.CustomerGender
        when 1 then '男'
        when 2 then '女'
        else '' end ) as CustomerGender, -- 客户性别
        bpc.CustomerCardTypeDesc as CustomerCardType, -- 证件类型
        bpc.CustomerCardNum, -- 证件号码
        bpc.Level, -- 渠道意向等级
        dic.DictName as TradeLevel,-- 案场等级
        (case bpc.SourceTypeOld
        when 1 then bpc.PerformanceAttributorOld
        else bpc.ReportUserName end ) as ReportUserName, -- 报备人
        (case
        bpc.ClueStatus
        when 1 then '报备'
        when 2 then '到访'
        when 3 then '排小卡'
        when 4 then '排大卡'
        when 5 then '订房'
        when 6 then '认筹'
        when 7 then '认购'
        when 8 then '签约'
        when 9 then '放弃'
        else '' end) as ClueStatus,  -- 状态
        (case bpc.SourceTypeOld
        when 1 then '中介成交'
        when 2 then '自渠成交'
        when 3 then '案场成交'
        when 4 then '全民经纪人成交'
        else '' end ) as SourceType,-- 来源类型（渠道类别）（改后弃用---不要删除，其他地方有用此字段）
        bpc.TokerAttributionTeamName,-- 拓客团队
        bpc.TokerAttributionName,-- 拓客归属人
        bpc.TokerAttributionTime,-- 拓客归属时间
        bpc.SalesAttributionTeamName,-- 销售团队
        bpc.SalesAttributionName,-- 案场归属人
        bpc.SalesAttributionTime,-- 案场归属时间
        bpc.ReportCreateTime,-- 报备时间
        bpc.LastRefreshReportExpireDate,
        bpc.TheFirstVisitDate,-- 到访时间（首访）
        bpc.BookingDate,-- 认筹时间
        bpc.SubscribingDate,-- 认购时间
        bpc.ContractDate,-- 签约时间
        bpc.ExpectedVisitDate, -- 预计到访时间
        bpc.TokerVisitExpireDate, -- 渠道失效时间
        bpc.ReportExpireDate, -- 报备失效时间
        bpc.salesTheLatestFollowDate,  -- 案场最近跟进时间
        bpc.ProjectName,
        bpc.SalesVisitExpireDate,
        (case bpc.IsRepurchase
        when 1 then "是"
        when 0 then "否"
        else "" end ) as IsRepurchase,
        bpc.ReportUserRole,
        coe.ReportSource,
        coe.ChildReportSource,
        coe.ReportRefcommend,
        bpc.InvalidReason invalidReason,
        (case when coe.clue_validity = 1 then '有效'
        when coe.clue_validity = 2 then '主动放弃'
        when coe.clue_validity = 3 then '报备逾期'
        when coe.clue_validity = 4 then '作废'
        when coe.clue_validity = 5 then '渠道逾期'
        else '有效' end) clueValidity,
        (case when coe.ext1 = 1 then '有效'
        when coe.ext1 = 2 then '主动放弃'
        when coe.ext1 = 3 then '跟进逾期未进入公共池'
        when coe.ext1 = 4 then '跟进逾期进入公共池'
        when coe.ext1 = 5 then '认购逾期'
        else '有效' end) acClueValidity,
        (case when coe.ChildReportSourceDesc is not null
        and coe.ChildReportSourceDesc !='' and coe.ChildReportSourceDesc !='null'
        then concat(coe.ReportSourceDesc,'-',coe.ChildReportSourceDesc)
        else coe.ReportSourceDesc end) ReportSourceDesc,
        bpc.PerformanceAttributorOldID as performanceAttributorOldID,
        (case when ap.brokerId is null then 0
        when ap.brokerId is not null then 1
        else 0 end )as isSeniorBroker,
        aa.activename as activeName
        FROM
        b_project_clues bpc
        left join b_clue_opportunity_extend coe on coe.ProjectClueId = bpc.ProjectClueId
        left join (select sd.DictName,sd.DictCode from s_dictionary sd where sd.PID=(select ID from s_dictionary where DictCode='s_gfyx') ) dic on dic.DictCode = bpc.TradeLevel
        left join a_account_performance ap on bpc.ProjectClueId = ap.ProjectClueId and ap.isdel = 0
        left join a_accountactive aa on ap.activeid = aa.id and aa.isdel = 0
        <where>
            1=1 and coe.clue_validity != 4
            <if test="projectList != null ">
                and bpc.projectId in
                <foreach collection="projectList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <choose>
                <when test="clueStatusList != null and clueStatusList.size() > 0 ">
                    and ClueStatus in
                    <foreach collection="clueStatusList" index="index" item="item" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    <![CDATA[  AND ClueStatus < 9 ]]>
                </otherwise>
            </choose>
            <if test="levelList != null and levelList.size() > 0 ">
                and `Level` in
                <foreach collection="levelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tradeLevelList != null and tradeLevelList.size() > 0 ">
                and TradeLevel in
                <foreach collection="tradeLevelList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="sourceTypeList != null and sourceTypeList.size() > 0 ">
                and SourceTypeOld in
                <foreach collection="sourceTypeList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="brokerList != null and brokerList.size() > 0">
                and ReportUserRole in
                <foreach collection="brokerList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="relatedList != null and relatedList.size() > 0">
                and IsRepurchase in
                <foreach collection="relatedList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isReportList != null and isReportList.size() > 0">
                and coe.ReportSource in
                <foreach collection="isReportList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="clueValidityList != null and clueValidityList.size() > 0">
                and coe.clue_validity in
                <foreach collection="clueValidityList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="customerName!=null and customerName!='' ">
                AND CustomerName LIKE '%${customerName}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.length != 11">
                AND CustomerMobile LIKE '%${customerMobile}%'
            </if>
            <if test="customerMobile!=null and customerMobile!='' and customerMobile.length == 11">
                AND CustomerMobile = #{customerMobile}
            </if>
            <if test="reportUserName!=null and reportUserName!=''">
                AND (ReportUserName LIKE '%${reportUserName}%'
                or PerformanceAttributor like concat('%',#{reportUserName},'%'))
            </if>
            <if test="salesAttributionName !=null and salesAttributionName !=''">
                AND SalesAttributionName LIKE '%${salesAttributionName}%'
            </if>
            <if test="redistributionId!=null and redistributionId!='' ">
                AND  FIND_IN_SET(bpc.ProjectClueId,#{redistributionId})
            </if>
            <if test="reportTime==1 and date1!=null and date1!='' and date2!=null and date2!='' ">
                and (ReportCreateTime BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==2  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (ReportExpireDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==3  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (ExpectedVisitDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==4  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (TokerVisitExpireDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==5  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (TheFirstVisitDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==6  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (SalesTheLatestFollowDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="reportTime==7  and date1!=null and date1!='' and date2!=null and date2!=''  ">
                and (SalesVisitExpireDate BETWEEN DATE_FORMAT(#{date1},'%Y-%m-%d %H:%i:%s')  AND DATE_ADD(DATE_ADD(DATE_FORMAT(#{date2},'%Y-%m-%d %H:%i:%s'),INTERVAL 1 DAY),INTERVAL -1 second))
            </if>
            <if test="isSecondBroker != null and isSecondBroker != '' and isSecondBroker == 0">
                and ap.brokerId is null
            </if>
            <if test="isSecondBroker != null and isSecondBroker != '' and isSecondBroker == 1">
                and ap.brokerId is not null
            </if>
            order by ReportCreateTime desc
        </where>

    </select>

    <!--查询认知渠道/途径-->
    <select id="getMainMediaList" parameterType="java.util.Map" resultType="java.util.Map">
        select
        sd.DictCode,
        sd.DictName
        from s_dictionary sd
        where
        sd.pid = (select s.id from s_dictionary s where s.DictCode = #{parentCode})
        and sd.IsDel = 0
        and (sd.DictionaryLevel = 1 or (sd.DictionaryLevel = 2 and sd.projectId = #{projectId}))
        <if test="childCode != '0'.toString()">
            and  FIND_IN_SET(sd.DictCode,#{childCode})
        </if>
        <if test="parentCode == 'D0B0421F-C75B-E711-80BB-005056A27FB0'.toString()">
            and sd.DictName = '中介分销'
        </if>
        order by sd.ListIndex asc
    </select>

    <!--查询客户是否报备-->
    <select id="getCustomerMobile" parameterType="String" resultType="java.util.Map">
        <![CDATA[
            SELECT
                 ReportUserID,IsReportExpire,ReportUserName,SalesAttributionId,ClueStatus,ProjectClueId
            FROM
                b_project_clues
            where
                projectId=#{projectId}
            AND (SourceType > 1 AND SourceType < 5)
            and IsDel = 0
            AND  CustomerMobile = #{customerMobile}
            and ClueStatus < 9
        ]]>
    </select>
    <!--根据线索ID查询机会ID-->
    <select id="getOppIdBYCluesId" parameterType="java.lang.String" resultType="java.lang.String">
        select OpportunityClueId from b_project_opportunity where ProjectClueId = #{ProjectClueId} limit 1;
    </select>
    <!--查询所有待分配线索-->
    <select id="getCluesByIds" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            ProjectClueId,
            CustomerMobile customerMobile,
            projectId,
            ClueStatus,
            ReportUserID reportUserId,
            IsReportExpire
        FROM
            b_project_clues
        WHERE
            ProjectClueId IN ( ${ids} )
    </select>

    <!--置业顾问名片台账-->
    <select id="getCardStandingBookList" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.CardStandingBook">
        SELECT
        uc.name,
        ifnull(uc.mobile,'暂未维护手机号') as mobile,
        IFNULL(t.tag,'暂未维护标签') as tag,
        IFNULL(uc.signature,'暂未维护签名') as signature,
        ifnull(t1.buildName,'暂未维护楼盘') as buildName,
        s.areaName areaName,
        s.projectNum,
        ifnull(t2.viewNumber,0) as viewNumber,
        ifnull(t2.viewNumbers,0) as viewNumbers,
        ifnull(t4.attentionNumber,0) as attentionNumber,
        ifnull(t5.customerNumber,0) as customerNumber,
        ifnull(t6.imNumber,0) as imNumber,
        ifnull(t7.callNumber,0) as callNumber,
        ifnull(t8.shareNumber,0) as shareNumber,
        ifnull(t8.hshareNumber,0) as hshareNumber,
        ifnull(t8.thshareNumber,0) as thshareNumber,
        ifnull(t11.likeNumber,0) as likeNumber,
        ifnull(t12.replyDuration,0) as replyDuration,
        ifnull(t12.replyRate,0) as replyRate
        FROM
            c_user_card uc
        left join (SELECT AccountID,Tag FROM s_jobsuserrel WHERE IsShow = 1 AND (Tag IS NOT NULL AND Tag != '') group BY AccountID ) t on t.AccountID = uc.account_id
        inner join (select sjur.AccountID,GROUP_CONCAT(DISTINCT bp.AreaName) areaName,GROUP_CONCAT(DISTINCT bp.ProjectNum) projectNum from `s_jobsuserrel` `sjur`
        JOIN `s_jobs` `sj` ON  `sj`.`ID` = `sjur`.`JobID`
        AND ( `sj`.`IsDel` = 0 )
        AND ( `sj`.`Status` = 1 )
        AND ( `sj`.`CommonJobID` = ( SELECT `s_commonjobs`.`ID` FROM `s_commonjobs` WHERE  `s_commonjobs`.`JobCode` = 'zygw') )
        JOIN `s_organization` `org` ON
        ( `org`.`ID` = `sj`.`JobOrgID` ) AND ( `org`.`IsDel` = 0 ) AND ( `org`.`Status` = 1 )
        INNER JOIN b_project bp on org.ProjectID = bp.ID and bp.IsDel = 0
        where org.ProjectID  in
              <foreach collection="projectList" index="index" item="item" open="("
                                         separator="," close=")">
                    #{item}
              </foreach>
        GROUP BY sjur.AccountID) s on s.AccountID = uc.account_id
        left join
        (select accountId,GROUP_CONCAT(bookName) as buildName from v_user_builds where isHide = 0 GROUP BY accountId) t1 on t1.accountId = uc.account_id
        -- 浏览次数  人数
        left join
        (select card_id,count(1) as viewNumber,count(DISTINCT open_id ) AS viewNumbers from c_card_view_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY card_id) t2 on t2.card_id = uc.id
        -- 关注人数
        left join
        (select card_id,count(DISTINCT open_id ) AS attentionNumber from c_card_attention_records where operation_status = 1 and is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY card_id) t4 on t4.card_id = uc.id
        -- 帮助客户人数
        left join
        (select c.account_id,count(DISTINCT open_id ) AS customerNumber from (
        select account_id,open_id from c_user_call_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        union all
        select account_id,open_id from c_user_im_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        ) c GROUP BY c.account_id) t5 on t5.account_id = uc.account_id
        -- 在线咨询人数
        left join
        (select account_id,count(DISTINCT open_id ) AS imNumber from c_user_im_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY account_id) t6 on t6.account_id = uc.account_id
        -- 电话咨询人数
        left join
        (select account_id,count(DISTINCT open_id ) AS callNumber from c_user_call_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY account_id) t7 on t7.account_id = uc.account_id
        -- 名片被分享数
        left join
        (select card_id,count(open_id) AS shareNumber,sum(case when share_type_code = '01' then 1 else 0 end)  hshareNumber,sum(case when share_type_code = '02' then 1 else 0 end)  thshareNumber  from c_card_share_records where is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_date BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY card_id) t8 on t8.card_id = uc.id
        -- 点赞人数
        left join
        (select card_id,count(DISTINCT open_id) AS likeNumber from c_card_like_records where operation_status = 1 and is_del = 0
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and create_time BETWEEN #{beginTime} AND #{endTime}
        </if>
        GROUP BY card_id) t11 on t11.card_id = uc.id
        left join (
        select
            account_id,
        <![CDATA[ round(ifnull(sum(reply_duration),0) / ifnull(sum(dialogue_number),1),2) as replyDuration, ]]>
        <![CDATA[ round((ifnull(sum(effective_conversation_number),0) / ifnull(sum(conversation_number),1)) * 100,2) as replyRate ]]>
        from c_user_im_statistics
        where project_id in
        <foreach collection="projectList" index="index" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        <if test="beginTime !=null and beginTime !='' and endTime !=null and endTime !='' ">
            and statistics_time BETWEEN #{beginTime} AND #{endTime}
        </if>
        group by account_id
        ) t12 on t12.account_id = uc.account_id
        INNER JOIN b_account aa  on uc.account_id = aa.id and aa.`Status` = 1 and aa.IsDel = 0
        where 1=1
        <if test="salesName!=null and salesName!='' ">
            AND uc.name LIKE '%${salesName}%'
        </if>
        <if test="salesMobile!=null and salesMobile!='' ">
            AND uc.mobile LIKE '%${salesMobile}%'
        </if>
    </select>

    <!--查询置业顾问-->
    <select id="getSalesAttributionList" parameterType="java.util.Map" resultType="java.util.Map">
        select ba.ID,ba.UserName,ba.EmployeeName,sjo.JobName,sorg.ID as orgId,sorg.OrgName,sorg.Levels,sorg.PID,sjo.CommonJobID
        from b_account ba
        left join s_jobsuserrel sju
        on sju.AccountID = ba.id
        left join s_jobs sjo
        on sjo.id = sju.JobID
        left join s_organization sorg
        on sorg.ID = sjo.JobOrgID
        left join s_commonjobs sc
        on sc.id = sjo.CommonJobID
        where  ba.IsDel = 0
        and sjo.IsDel = 0
        and sjo.isIdm = 0
        and sorg.IsDel = 0
        and sc.IsDel = 0
        and sc.isIdm = 0
        and sjo.Status = 1
        and ba.Status = 1
        and sorg.Status = 1
        and sc.Status = 1
        and sc.jobCode = 'zygw'
        <if test="projectList != null ">
            and sorg.projectId in
            <foreach collection="projectList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="searchName != null and searchName != ''">
            and (ba.EmployeeName like CONCAT('%',#{searchName},'%') or ba.UserName like CONCAT('%',#{searchName},'%'))
        </if>
    </select>

    <!--更新线索机会表扩展字段-->
    <update id="updateClueOpportunityExtend" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update b_clue_opportunity_extend
            set
            old_sales_id = #{item.oldSalesId},
            old_sales_name = #{item.oldSalesName},
            old_team_id = #{item.oldTeamId},
            old_team_name = #{item.oldTeamName}
            where ProjectClueId = #{item.projectClueId}
        </foreach>
    </update>

    <!--更新线索机会表扩展字段-->
    <update id="updateClueExtendValidity" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update b_clue_opportunity_extend
            set clue_validity = 1
            where ProjectClueId = #{item.projectClueId}
        </foreach>
    </update>

    <!--查询户型名称-->
    <select id="getHXnameById" parameterType="java.lang.String" resultType="java.lang.String">
        select HouseBigType from a_build_book_warehouse
        where ID = #{id}
    </select>


    <select id="getTaxiId" parameterType="java.lang.String"
            resultType="java.lang.String">
              SELECT ID
            FROM a_rid_details ar
                    LEFT JOIN b_project_clues bp on bp.SalesAttributionId = ar.sales_attribution_id and bp.CustomerMobile = ar.broker_mobile and bp.projectId = ar.project_id
            where bp.ProjectClueId =  #{projectClueId}
        </select>


    <!--根据id查询置业顾问信息-->
    <select id="getAccountUserById" parameterType="java.lang.String" resultType="cn.visolink.system.channel.model.DistributionInfo">
        SELECT
        ID as salesAttributionId,
        EmployeeName as salesAttributionName,
        Mobile as salesAttributionPhone
        FROM b_account
        WHERE id = #{id} limit 1
    </select>
    <update id="updateSalesAttribution" parameterType="cn.visolink.system.channel.model.DistributionInfo">
        UPDATE a_rid_details
        <set>
            <if test="salesAttributionId != null">
                sales_attribution_id = #{salesAttributionId},
            </if>
            <if test="salesAttributionName != null">
                sales_attribution_name = #{salesAttributionName},
            </if>
            <if test="salesAttributionPhone != null">
                sales_attribution_phone = #{salesAttributionPhone},
            </if>
            <if test="userId != null">
                update_by = #{userId},
            </if>
            update_time = now()
        </set>
        WHERE
        id in
        <foreach collection="list" index="index" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </update>

<!--    getDictLabels 条件查询字典列表-->
    <select id="getDictLabels"  resultType="java.lang.String">
        	SELECT
            sd.DictName
            FROM
                s_dictionary sd
            WHERE
                sd.pid = (
            SELECT
                s.id
            FROM
                s_dictionary s
            WHERE
                s.DictCode = "2004"

            AND sd.IsDel = 0)
    </select>
    <!--    条件查询自定义标签列表  geCustomLabels-->
    <select id="geCustomLabels" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
            PhraseName dictName
            FROM
                `b_followup_phrase`
        WHERE
            mark = #{mark}
            </select>

<!--    查询自渠标签 getChannelLabel-->
    <select id="getChannelLabel" parameterType="java.lang.String" resultType="java.lang.String">
        select
            channel_label channelLabel
        from
            b_clue_opportunity_extend
        where
            ProjectClueId = #{projectClueId}
    </select>
    <!--获取中介公司-->
    <select id="getSupplierList" resultType="cn.visolink.system.channel.model.form.Supplier">
        select DISTINCT ss.businessCode,ss.name
        from s_supplier ss
        INNER JOIN s_supplier_category sc on ss.businessCode = sc.businessCode
        where ss.isDelete = 0 and ss.status = 0 and ss.rkstatus = 2 and sc.`code` = 'YXL.03.01';
    </select>

    <!--获取项目中介-->
    <select id="getZJBM" parameterType="java.lang.String" resultType="cn.visolink.system.org.model.form.OrganizationForm">
        select id,pid,orgName,fullPath from s_organization
        where ProjectID = #{projectId}
          and OrgCategory = 5 and IsDel = 0 and OrgType = 2 and `Status` = 1 limit 1;
    </select>

    <!--获取中介ID-->
    <select id="getCompnayID" parameterType="java.lang.String" resultType="java.lang.String">
        select id from s_company_info where companyCode = #{companyCode} limit 1;
    </select>
    <!--获取中介组织ID-->
    <select id="getOrgId" parameterType="java.lang.String" resultType="java.lang.String">
        select id from s_organization
        where pid  = #{pid}
          and OrgCompanyID = #{OrgCompanyID} and IsDel = 0;
    </select>

    <!--获取中介门店-->
    <select id="getIntermediaryList" resultType="java.util.Map">
        select ID companyId,companyName,headquartersId,companyCode,Status
        from s_company_info
        where IsDel = 0 and companyAttr = 2;
    </select>

    <!--更新门店组织状态-->
    <update id="updateIntermediaryRule" parameterType="cn.visolink.system.channel.model.form.IntermediaryStores">
        update s_organization set Status = #{orgStatus}
        where ID = #{orgId};
    </update>
    <!--更新中介门店-->
    <update id="updateCompany" parameterType="cn.visolink.system.channel.model.form.IntermediaryStores">
        update s_company_info set headquartersId = #{headquartersId},headquartersName = #{headquartersName},edittime = now()
        where ID = #{companyId}
    </update>

    <!--更新中介门店信息-->
    <update id="updateCompDesc" parameterType="cn.visolink.system.channel.model.form.ProjectProtectRuleForm">
        update s_company_info set headquartersId = #{headquartersId},headquartersName = #{headquartersName},
                                  startTime = #{startTime},endTime = #{endTime},editor = #{editor},edittime = now()
        where ID = #{companyId}
    </update>

    <!--更新淘客池公共池，扩展表数据-->
    <update id="updateTaoPublic" parameterType="java.util.List">
        update b_public_pool set is_del = 1
        where project_clue_id in (
              <foreach collection="cluesList" separator="," item="item">
                  #{item}
              </foreach>
            ) and is_del = 0;
        update b_clue_opportunity_extend set clue_validity = 1
        where ProjectClueId in (
            <foreach collection="cluesList" separator="," item="item">
                #{item}
            </foreach>
            );
    </update>

    <!--    getSourceCustByClueId-->
    <select id="getSourceCustByClueId" parameterType="java.lang.String" resultType="java.util.Map">
       SELECT
        ProjectClueId,
        CustomerName,
        concat(left(CustomerMobile,3),'****',right(CustomerMobile,4))  CustomerMobile
        from b_project_opportunity
        WHERE BasicCustomerId = (
        SELECT SaleCustomerId FROM
        `b_followup_record`
        WHERE `FollowUpDetail` LIKE '%联名来源%'
        AND `ProjectClueId` = #{projectClueId}LIMIT 1)
    </select>

    <!--删除公共池-->
    <update id="updateCustomerPublicPool" parameterType="java.lang.String">
        update  b_customerpublicpool set is_del = 1 where
        ProjectClueId in
        <foreach item="projectClueIds" collection="projectClueList" open="(" separator="," close=")">
            #{projectClueIds}
        </foreach>
    </update>

    <!--删除公共池-->
    <update id="editCustomerPublicPoolByOppId" parameterType="java.lang.String">
        update  b_customerpublicpool set is_del = 1 where
        OpportunityClueId in
        <foreach item="oppId" collection="oppClueList" open="(" separator="," close=")">
            #{oppId}
        </foreach>
    </update>

    <!--更新线索机会表扩展字段-->
    <update id="updateAcClueExtendValidity" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update b_clue_opportunity_extend
            set ext1 = 1
            where ProjectClueId = #{item.projectClueId}
        </foreach>
    </update>

    <!--更新线索机会表扩展字段-->
    <update id="editClueExtendValidity" parameterType="java.lang.String">
        update b_clue_opportunity_extend
        <set>
            <if test="clueStatus == '1'.toString()">
                clue_validity = 1
            </if>
            <if test="clueStatus == '2'.toString()">
                ext1 = 1
            </if>
        </set>
        where ProjectClueId in
        <foreach item="clueId" collection="clueList" open="(" separator="," close=")">
            #{clueId}
        </foreach>
    </update>

    <select id="getTradeByOppId" parameterType="java.lang.String" resultType="java.util.Map">
        select brm.RoomID,brm.RoomName,brm.CstName,brm.HtTotal,brm.OrderDate,brm.ContractDate,brm.ClueStatus,
               brm.CjBldArea
        from b_opportunity_trade brm
        where brm.OpportunityClueId=(select OpportunityClueId from b_project_opportunity where ProjectClueId=#{projectClueId})
          and brm.TradeStatus = '激活'
          and brm.RoomID = #{roomId}
    </select>

    <select id="selectProjectRule" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ProjectRuleDetail">
        SELECT
            ProjectID projectID,
            ID id,
            TheNextVisitFollowupExpireDays theNextVisitFollowupExpireDays,
            SourceType sourceType,
            EditTime editTime,
            Editor editor,
            FollowupExpireDaysWarning followupExpireDaysWarning,
            ChannelReportMax channelReportMax,
            caseTaoGuestNumber,
            caseGuestNumberType,
            monthReportMax,
            projectPoolRetentionTime,
            regionPoolRetentionTime,
            referralConfirmationTime,
            createTime,
            creator,
            publicPoolType,
            clueIndDimension,
            ReportExpireDays reportExpireDays,
            VisitExpireDays visitExpireDays,
            maxFollowUp,
            VisitingWarning visitingWarning,
            ReportDaysWarning reportDaysWarning,
            maxVisit,
            ComeVisitExpireDays comeVisitExpireDays,
            ComeVisitingWarning comeVisitingWarning,
            maxComeVisit,
            referralExpireDays,
            referralWarning,
            ReferralFollowupExpireDaysWarning referralFollowupExpireDaysWarning,
            ReferralTheNextVisitFollowupExpireDays referralTheNextVisitFollowupExpireDays,
            referralMaxFollowUp,
            ReferralComeVisitExpireDays referralComeVisitExpireDays,
            ReferralComeVisitingWarning referralComeVisitingWarning,
            referralMaxComeVisit,
            ReferralVisitExpireDays referralVisitExpireDays,
            ReferralVisitingWarning referralVisitingWarning,
            referralMaxVisit,
            DirectReferralExpireDays directReferralExpireDays,
            DirectReferralVisitExpireDays directReferralVisitExpireDays,
            DirectReferralVisitingWarning directReferralVisitingWarning,
            DirectReferralMaxVisit directReferralMaxVisit,
            WqtReportExpireDays wqtReportExpireDays,
            WqtReportDaysWarning wqtReportDaysWarning,
            WqtFollowupExpireDaysWarning wqtFollowupExpireDaysWarning,
            WqtTheNextVisitFollowupExpireDays wqtTheNextVisitFollowupExpireDays,
            wqtMaxFollowUp,
            WqtComeVisitExpireDays wqtComeVisitExpireDays,
            WqtComeVisitingWarning wqtComeVisitingWarning,
            wqtMaxComeVisit,
            WqtVisitExpireDays wqtVisitExpireDays,
            WqtVisitingWarning wqtVisitingWarning,
            wqtMaxVisit,
            judge_no_region judgeNoRegion,
            judge_no_pool judgeNoPool,
            judge_stage judgeStage,
            wqt_judge_no_region wqtJudgeNoRegion,
            wqt_judge_no_pool wqtJudgeNoPool,
            wqt_judge_stage wqtJudgeStage,
            followup_confirmation_time followUpConfirmationTime,
            referral_judge_no_region referralJudgeNoRegion,
            referral_judge_no_pool referralJudgeNoPool,
            referral_judge_stage referralJudgeStage,
            obtaincst_confirmation_time obtainCstConfirmationTime,
            count_three_ones countThreeOnes,
            maxFollowUpDays,
            wqtMaxFollowUpDays,
            referralMaxFollowUpDays,
            assignPoolsExpireDays,
            assignExpireDays,
            delivery_customer_protect_time deliveryCustomerProtectTime,
            allocation_customer_max allocationCustomerMax,
            enterprise_database_customer_protection_days enterpriseDatabaseCustomerProtectionDays,
            call_not_dial_customer_protect_days callNotDialCustomerProtectDays,
            call_not_conn_customer_protect_days callNotConnCustomerProtectDays,
            call_has_conn_customer_protect_days callHasConnCustomerProtectDays,
            checkInRange
        FROM
            b_project_rule
        WHERE
            ProjectID = #{projectId}
        order by SourceType
    </select>
    <select id="selectProjectRulexport"  resultType="cn.visolink.system.channel.model.ProjectRuleDetail">
        SELECT
            ProjectID projectID,
            ID id,
            TheNextVisitFollowupExpireDays theNextVisitFollowupExpireDays,
            SourceType sourceType,
            EditTime editTime,
            Editor editor,
            FollowupExpireDaysWarning followupExpireDaysWarning,
            ChannelReportMax channelReportMax,
            caseTaoGuestNumber,
            caseGuestNumberType,
            monthReportMax,
            projectPoolRetentionTime,
            regionPoolRetentionTime,
            referralConfirmationTime,
            createTime,
            creator,
            publicPoolType,
            clueIndDimension,
            ReportExpireDays reportExpireDays,
            VisitExpireDays visitExpireDays,
            maxFollowUp,
            VisitingWarning visitingWarning,
            ReportDaysWarning reportDaysWarning,
            maxVisit,
            ComeVisitExpireDays comeVisitExpireDays,
            ComeVisitingWarning comeVisitingWarning,
            maxComeVisit,
            referralExpireDays,
            referralWarning,
            ReferralFollowupExpireDaysWarning referralFollowupExpireDaysWarning,
            ReferralTheNextVisitFollowupExpireDays referralTheNextVisitFollowupExpireDays,
            referralMaxFollowUp,
            ReferralComeVisitExpireDays referralComeVisitExpireDays,
            ReferralComeVisitingWarning referralComeVisitingWarning,
            referralMaxComeVisit,
            ReferralVisitExpireDays referralVisitExpireDays,
            ReferralVisitingWarning referralVisitingWarning,
            referralMaxVisit,
            DirectReferralExpireDays directReferralExpireDays,
            DirectReferralVisitExpireDays directReferralVisitExpireDays,
            DirectReferralVisitingWarning directReferralVisitingWarning,
            DirectReferralMaxVisit directReferralMaxVisit,
            WqtReportExpireDays wqtReportExpireDays,
            WqtReportDaysWarning wqtReportDaysWarning,
            WqtFollowupExpireDaysWarning wqtFollowupExpireDaysWarning,
            WqtTheNextVisitFollowupExpireDays wqtTheNextVisitFollowupExpireDays,
            wqtMaxFollowUp,
            WqtComeVisitExpireDays wqtComeVisitExpireDays,
            WqtComeVisitingWarning wqtComeVisitingWarning,
            wqtMaxComeVisit,
            WqtVisitExpireDays wqtVisitExpireDays,
            WqtVisitingWarning wqtVisitingWarning,
            wqtMaxVisit,
            judge_no_region judgeNoRegion,
            judge_no_pool judgeNoPool,
            judge_stage judgeStage,
            wqt_judge_no_region wqtJudgeNoRegion,
            wqt_judge_no_pool wqtJudgeNoPool,
            wqt_judge_stage wqtJudgeStage,
            followup_confirmation_time followUpConfirmationTime,
            referral_judge_no_region referralJudgeNoRegion,
            referral_judge_no_pool referralJudgeNoPool,
            referral_judge_stage referralJudgeStage,
            obtaincst_confirmation_time obtainCstConfirmationTime,
            ifnull((
                       SELECT concat( AreaName, '-', ProjectName )
                       FROM b_project bp
                       WHERE bp.ID = ProjectID
                   ),
                   (
                       SELECT AreaName
                       FROM b_project bp
                       WHERE bp.AreaID = ProjectID LIMIT 1
                )) entryName,
            count_three_ones countThreeOnes,
            maxFollowUpDays,
            wqtMaxFollowUpDays,
            referralMaxFollowUpDays,
            assignPoolsExpireDays,
            assignExpireDays,
            delivery_customer_protect_time deliveryCustomerProtectTime,
            allocation_customer_max allocationCustomerMax,
            enterprise_database_customer_protection_days enterpriseDatabaseCustomerProtectionDays,
            call_not_dial_customer_protect_days callNotDialCustomerProtectDays,
            call_not_conn_customer_protect_days callNotConnCustomerProtectDays,
            call_has_conn_customer_protect_days callHasConnCustomerProtectDays,
            checkInRange
            FROM b_project_rule
            ORDER BY SourceType
    </select>
    <insert id="addProjectRule" parameterType="java.util.List">
        insert into b_project_rule(ID,ProjectID,TheNextVisitFollowupExpireDays,
        SourceType,
        FollowupExpireDaysWarning,
        ChannelReportMax,
        caseTaoGuestNumber,
        caseGuestNumberType,
        monthReportMax,
        projectPoolRetentionTime,
        regionPoolRetentionTime,
        referralConfirmationTime,
        createTime,
        creator,
        ReportExpireDays,VisitExpireDays,
        maxFollowUp,VisitingWarning,ReportDaysWarning,
        maxVisit, ComeVisitExpireDays,
        ComeVisitingWarning, maxComeVisit,
        referralExpireDays, referralWarning, ReferralFollowupExpireDaysWarning,
        ReferralTheNextVisitFollowupExpireDays,
        referralMaxFollowUp,
        ReferralComeVisitExpireDays,
        ReferralComeVisitingWarning,
        referralMaxComeVisit,
        ReferralVisitExpireDays,
        ReferralVisitingWarning,
        referralMaxVisit,
        DirectReferralExpireDays,
        DirectReferralVisitExpireDays,
        DirectReferralVisitingWarning,
        DirectReferralMaxVisit,
        WqtReportExpireDays,
        WqtReportDaysWarning,
        WqtFollowupExpireDaysWarning,
        WqtTheNextVisitFollowupExpireDays,
        wqtMaxFollowUp,
        WqtComeVisitExpireDays,
        WqtComeVisitingWarning,
        wqtMaxComeVisit,
        WqtVisitExpireDays,
        WqtVisitingWarning,
        wqtMaxVisit,
        judge_no_region,judge_no_pool,judge_stage,
        wqt_judge_no_region,wqt_judge_no_pool,wqt_judge_stage,followup_confirmation_time,
        referral_judge_no_region,referral_judge_no_pool,referral_judge_stage,obtaincst_confirmation_time,
        count_three_ones, maxFollowUpDays,wqtMaxFollowUpDays,referralMaxFollowUpDays,AssignPoolsExpireDays,AssignExpireDays,
        delivery_customer_protect_time,allocation_customer_max,enterprise_database_customer_protection_days,
        call_not_dial_customer_protect_days,call_not_conn_customer_protect_days,call_has_conn_customer_protect_days,checkInRange)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.id},#{item.projectID},#{item.theNextVisitFollowupExpireDays},
             #{item.sourceType},#{item.followupExpireDaysWarning},#{item.channelReportMax},
             #{item.caseTaoGuestNumber},#{item.caseGuestNumberType},#{item.monthReportMax},
             #{item.projectPoolRetentionTime},#{item.regionPoolRetentionTime},#{item.referralConfirmationTime}
            ,now(),#{item.creator},
            #{item.reportExpireDays},#{item.visitExpireDays},#{item.maxFollowUp},#{item.visitingWarning},#{item.reportDaysWarning},
             #{item.maxVisit},#{item.comeVisitExpireDays},#{item.comeVisitingWarning},#{item.maxComeVisit},
             #{item.referralExpireDays},#{item.referralWarning},
            #{item.referralFollowupExpireDaysWarning},#{item.referralTheNextVisitFollowupExpireDays},
             #{item.referralMaxFollowUp},
            #{item.referralComeVisitExpireDays},#{item.referralComeVisitingWarning},
             #{item.referralMaxComeVisit},
            #{item.referralVisitExpireDays},#{item.referralVisitingWarning},#{item.referralMaxVisit},
            #{item.directReferralExpireDays},#{item.directReferralVisitExpireDays},#{item.directReferralVisitingWarning},#{item.directReferralMaxVisit},
             #{item.wqtReportExpireDays},#{item.wqtReportDaysWarning},
            #{item.wqtFollowupExpireDaysWarning},#{item.wqtTheNextVisitFollowupExpireDays},
             #{item.wqtMaxFollowUp},
            #{item.wqtComeVisitExpireDays},#{item.wqtComeVisitingWarning},#{item.wqtMaxComeVisit},
            #{item.wqtVisitExpireDays},#{item.wqtVisitingWarning},#{item.wqtMaxVisit},
            #{item.judgeNoRegion},#{item.judgeNoPool},#{item.judgeStage},
            #{item.wqtJudgeNoRegion},#{item.wqtJudgeNoPool},#{item.wqtJudgeStage},#{item.followUpConfirmationTime},
            #{item.referralJudgeNoRegion},#{item.referralJudgeNoPool},#{item.referralJudgeStage},#{item.obtainCstConfirmationTime},
            #{item.countThreeOnes},#{item.maxFollowUpDays},#{item.wqtMaxFollowUpDays},#{item.referralMaxFollowUpDays},
            #{item.assignPoolsExpireDays},#{item.assignExpireDays},#{item.deliveryCustomerProtectTime},#{item.allocationCustomerMax},
            #{item.enterpriseDatabaseCustomerProtectionDays},#{item.callNotDialCustomerProtectDays},#{item.callNotConnCustomerProtectDays},
            #{item.callHasConnCustomerProtectDays},#{item.checkInRange})
        </foreach>
    </insert>

    <update id="updateProjectRule" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update b_project_rule set TheNextVisitFollowupExpireDays=#{item.theNextVisitFollowupExpireDays},
            FollowupExpireDaysWarning =#{item.followupExpireDaysWarning},
            ChannelReportMax =#{item.channelReportMax},
            caseTaoGuestNumber =#{item.caseTaoGuestNumber},
            caseGuestNumberType =#{item.caseGuestNumberType},
            monthReportMax =#{item.monthReportMax},
            projectPoolRetentionTime =#{item.projectPoolRetentionTime},
            regionPoolRetentionTime =#{item.regionPoolRetentionTime},
            referralConfirmationTime =#{item.referralConfirmationTime},
            ReportExpireDays = #{item.reportExpireDays},
            VisitExpireDays = #{item.visitExpireDays},
            maxFollowUp = #{item.maxFollowUp},
            VisitingWarning = #{item.visitingWarning},
            ReportDaysWarning = #{item.reportDaysWarning},
            maxVisit = #{item.maxVisit},
            ComeVisitExpireDays = #{item.comeVisitExpireDays},
            ComeVisitingWarning = #{item.comeVisitingWarning},
            maxComeVisit = #{item.maxComeVisit},
            referralExpireDays = #{item.referralExpireDays},
            referralWarning = #{item.referralWarning},
            ReferralFollowupExpireDaysWarning = #{item.referralFollowupExpireDaysWarning},
            ReferralTheNextVisitFollowupExpireDays = #{item.referralTheNextVisitFollowupExpireDays},
            referralMaxFollowUp = #{item.referralMaxFollowUp},
            ReferralComeVisitExpireDays = #{item.referralComeVisitExpireDays},
            ReferralComeVisitingWarning = #{item.referralComeVisitingWarning},
            referralMaxComeVisit = #{item.referralMaxComeVisit},
            ReferralVisitExpireDays = #{item.referralVisitExpireDays},
            ReferralVisitingWarning = #{item.referralVisitingWarning},
            referralMaxVisit = #{item.referralMaxVisit},
            DirectReferralExpireDays = #{item.directReferralExpireDays},
            DirectReferralVisitExpireDays = #{item.directReferralVisitExpireDays},
            DirectReferralVisitingWarning = #{item.directReferralVisitingWarning},
            DirectReferralMaxVisit = #{item.directReferralMaxVisit},
            WqtReportExpireDays = #{item.wqtReportExpireDays},
            WqtReportDaysWarning = #{item.wqtReportDaysWarning},
            WqtFollowupExpireDaysWarning = #{item.wqtFollowupExpireDaysWarning},
            WqtTheNextVisitFollowupExpireDays = #{item.wqtTheNextVisitFollowupExpireDays},
            wqtMaxFollowUp = #{item.wqtMaxFollowUp},
            WqtComeVisitExpireDays = #{item.wqtComeVisitExpireDays},
            WqtComeVisitingWarning = #{item.wqtComeVisitingWarning},
            wqtMaxComeVisit = #{item.wqtMaxComeVisit},
            WqtVisitExpireDays = #{item.wqtVisitExpireDays},
            WqtVisitingWarning = #{item.wqtVisitingWarning},
            wqtMaxVisit = #{item.wqtMaxVisit},
            judge_no_region = #{item.judgeNoRegion},
            judge_no_pool = #{item.judgeNoPool},
            judge_stage = #{item.judgeStage},
            wqt_judge_no_region = #{item.wqtJudgeNoRegion},
            wqt_judge_no_pool = #{item.wqtJudgeNoPool},
            wqt_judge_stage = #{item.wqtJudgeStage},
            followup_confirmation_time = #{item.followUpConfirmationTime},
            referral_judge_no_region = #{item.referralJudgeNoRegion},
            referral_judge_no_pool = #{item.referralJudgeNoPool},
            referral_judge_stage = #{item.referralJudgeStage},
            obtaincst_confirmation_time = #{item.obtainCstConfirmationTime},
            count_three_ones = #{item.countThreeOnes},
            maxFollowUpDays = #{item.maxFollowUpDays},
            wqtMaxFollowUpDays = #{item.wqtMaxFollowUpDays},
            referralMaxFollowUpDays = #{item.referralMaxFollowUpDays},
            AssignPoolsExpireDays = #{item.assignPoolsExpireDays},
            AssignExpireDays = #{item.assignExpireDays},
            delivery_customer_protect_time = #{item.deliveryCustomerProtectTime},
            allocation_customer_max = #{item.allocationCustomerMax},
            enterprise_database_customer_protection_days = #{item.enterpriseDatabaseCustomerProtectionDays},
            call_not_dial_customer_protect_days = #{item.callNotDialCustomerProtectDays},
            call_not_conn_customer_protect_days = #{item.callNotConnCustomerProtectDays},
            call_has_conn_customer_protect_days = #{item.callHasConnCustomerProtectDays},
            checkInRange = #{item.checkInRange},
            EditTime =now(),
            Editor =#{item.editor}
            where ID = #{item.id}
        </foreach>
    </update>

<!--    编辑客户等级-->
    <update id="updateCustomerGrade">
        update b_project_opportunity
        set CustomerLevel = 'A'
        where OpportunityClueId IN
        (
        <foreach collection="opportunityList" item="opportunity" separator=",">
            #{opportunity}
        </foreach>
        ) and CustomerLevel in ('B','C','D');
    </update>

    <select id="selectReferralClue" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.ReferralRecord">
        SELECT
               ab.EmployeeName referralUser,
               ref.createTime createTime,
               if(ref.OldProjectClueId is null,
                    if(length(trim(newClue.diy_hide_customer_name)) = 0 or newClue.diy_hide_customer_name is null,concat(left(newClue.CustomerName,1),'**'),newClue.diy_hide_customer_name),
                    if(length(trim(oldClue.diy_hide_customer_name)) = 0 or oldClue.diy_hide_customer_name is null,concat(left(oldClue.CustomerName,1),'**'),oldClue.diy_hide_customer_name)
                ) cstName,
               if(ref.OldProjectClueId is null,newClue.CustomerName, oldClue.CustomerName) oldCstName,
               CONCAT(
               LEFT(if(ref.OldProjectClueId is null,newClue.CustomerMobile, oldClue.CustomerMobile),3),
               '****',
               RIGHT(if(ref.OldProjectClueId is null,newClue.CustomerMobile, oldClue.CustomerMobile),4)) cstMobile,
               if(ref.OldProjectClueId is null,newClue.CustomerMobile, oldClue.CustomerMobile) cstMobileAll,
               if(ref.OldProjectClueId is null,newClue.Contacts, oldClue.Contacts)  contacts,
               if(ref.OldProjectClueId is null,newClue.SourceMode, oldClue.SourceMode) sourceMode,
               bp.ProjectName projectName,
               ba.EmployeeName receiverUser,
               pb.ProjectName receiverProjectName,
               ref.endTime endTime,
               (CASE WHEN ref.status = '1' THEN '发起申请'
                     WHEN ref.status = '2' THEN '同意'
                     WHEN ref.status = '3' THEN '拒绝'
                     WHEN ref.status = '4' THEN '区域同意驳回'
                     WHEN ref.status = '5' THEN '区域拒绝驳回'
                     WHEN ref.status = '6' THEN '自动驳回'
                     ELSE '撤回'
                     END
                   ) status,
               ba1.EmployeeName operator,
               ref.achievementRate achievementRate,
               ref.commissionRate commissionRate,
               ref.rejectionReason rejectionReason,
               (case ref.IsShowReferral when 1 then '是' when 0 then '否' else '' end) isShowReferral,
               if(ref.OldProjectClueId is null,newClue.ProjectClueId, oldClue.ProjectClueId) projectClueId,
               if(ref.OldProjectClueId is null,newClue.projectId, oldClue.projectId) projectId,
               if(ref.OldProjectClueId is null,newClue.OpportunityClueId, oldClue.OpportunityClueId) opportunityClueId,
               ifnull(if(ref.OldProjectClueId is null, if(newClue.ClueStatus = 8,'无',newClue.SalesFollowExpireDate),
                    if(oldClue.ClueStatus = 8,'无',oldClue.SalesFollowExpireDate)),'无') salesFollowExpireDate
        FROM b_cust_referral ref
                 LEFT JOIN b_account ab ON ab.ID = ref.ReferralUserID
                 LEFT JOIN b_account ba ON ba.ID = ref.ReceiverUserID
                 LEFT JOIN b_account ba1 ON ba1.ID = ref.Operator
                 LEFT JOIN b_project_opportunity newClue on newClue.ProjectClueId = ref.ProjectClueId
                 LEFT JOIN b_project_opportunity oldClue on oldClue.ProjectClueId = ref.OldProjectClueId
                 LEFT JOIN b_project bp ON bp.ID = ref.ReferralProjectId
                 LEFT JOIN b_project pb ON pb.ID = ref.ReceiverProjectId
        WHERE 1 = 1
            <if test="projectIds != null and projectIds.size() > 0">
              AND ref.ReferralProjectId IN (
                <foreach collection="projectIds" separator="," item="item">
                    #{item}
                </foreach>
                )
            </if>
            <if test="receiverProjectIds != null and receiverProjectIds.size() > 0">
                AND ref.ReceiverProjectId IN (
                <foreach collection="receiverProjectIds" separator="," item="item">
                    #{item}
                </foreach>
                )
            </if>
            <if test="cstName!=null and cstName!=''">
                AND if(ref.OldProjectClueId is null,newClue.CustomerName, oldClue.CustomerName) = #{cstName}
            </if>
            <if test="cstMobile!=null and cstMobile!=''">
                AND if(ref.OldProjectClueId is null,newClue.CustomerMobile, oldClue.CustomerMobile) = #{cstMobile}
            </if>
            <if test="sourceMode!=null and sourceMode!=''">
                AND if(ref.OldProjectClueId is null,newClue.SourceMode, oldClue.SourceMode) = #{sourceMode}
            </if>
            <if test="type!=null and type!=''">
                AND ref.ReferralType = #{type}
            </if>
            <if test="createStartTime!=null and createStartTime!='' and createEndTime!=null and createEndTime!=''">
                and ref.createTime between #{createStartTime} and #{createEndTime}
            </if>
            <if test="endStartTime!=null and endStartTime!='' and endEndTime!=null and endEndTime!=''">
                and ref.endTime between #{endStartTime} and #{endEndTime}
            </if>
            <if test="orgIds!=null and orgIds.size() > 0">
                and if(ref.OldProjectClueId is null,newClue.SalesAttributionTeamId, oldClue.SalesAttributionTeamId) not in
                <foreach collection="orgIds" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            ORDER BY ref.createTime DESC
    </select>

<!--    查询渠道台账信息-->
    <select id="channelProjectClues" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT
        clue.ProjectClueId projectClueId,
        if(length(trim(clue.diy_hide_customer_name)) = 0 or clue.diy_hide_customer_name is null,concat(left(clue.CustomerName,1),'**'),clue.diy_hide_customer_name) customerName,
        clue.CustomerName oldCustomerName,
        CONCAT(
        LEFT ( clue.CustomerMobile, 3 ),
        '****',
        RIGHT ( clue.CustomerMobile, 4 )) customerMobile,
        clue.CustomerMobile oldCustomerMobile,
        clue.projectId projectId,
        clue.ProjectName projectName,
        clue.ReportCreateTime reportCreateTime,
        clue.ReportUserName reportUserName,
        (
        CASE
        WHEN clue.ReportUserRole = '1' THEN
        '项目招商专员'
        WHEN clue.ReportUserRole = '2' THEN
        '区域招商专员'
        WHEN clue.ReportUserRole = '3' THEN
        '全民经纪人'
        ELSE
        ''
        END
        ) reportUserRole,
        (case clue.IsPark when 1 then '是' when 0 then '否' else '' end  ) isPark,
        clue.ParkAddress parkAddress,
        clue.ParkFloor parkFloor,
        clue.ParkName parkName,
        clue.CustomerAddress customerAddress,
        inf.DetailedAddress detailedAddress,
        inf.BelongIndustriseDesc belongIndustriseDesc,
        inf.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
        inf.IndustryDirectoryChildDesc industryDirectoryChildDesc,
        clue.MainProducts businessProducts,
        clue.Label label,
        (case ClueStatus when 0 then '新增' when 11 then '分配' else '' end) clueStatus,
        SalesFollowExpireDate salesFollowExpireDate,
        DisTime disTime,
        clue.SalesAttributionName salesAttributionName
        FROM
        b_project_clues clue
        left join b_information inf ON clue.ProjectClueId = inf.ProjectClueId
        WHERE 1 = 1
        AND clue.ClueStatus in (0,11,13)
        <if test="ownerUserId != null and ownerUserId != ''">
            AND clue.SalesAttributionId = #{ownerUserId}
        </if>
        <if test="projectIdList != null and projectIdList.size() > 0">
            AND clue.projectId IN (
            <foreach collection="projectIdList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            <if test="type == 0 or type == '' or type == null">
                AND clue.CustomerName = #{customerName}
            </if>
            <if test="type != 0">
                AND clue.CustomerName like concat('%',#{customerName},'%')
            </if>
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND clue.CustomerMobile = #{customerMobile}
        </if>
        <if test="reportUserName != null and reportUserName != ''">
            AND clue.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND clue.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="reportUserRole!=null and reportUserRole!=''">
            AND clue.ReportUserRole = #{reportUserRole}
        </if>
        <if test="clueStatus != null and clueStatus != ''">
            AND clue.ClueStatus = #{clueStatus}
        </if>
        <if test="tagLabel != null and tagLabel != ''">
            AND clue.Label  like concat('%',#{tagLabel},'%')
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and clue.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
              separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="taskName != null and taskName != ''">
            AND clue.projectClueId IN (
            SELECT customerId FROM b_task_customer
            WHERE taskId IN (SELECT id FROM b_task bt WHERE taskName LIKE concat('%',#{taskName},'%'))
            )
        </if>
        order by clue.ReportCreateTime desc
    </select>

<!--    查询案场信息-->
    <select id="courtCaseCount" resultType="java.lang.String">
        SELECT
        count(1)
        FROM
        b_project_opportunity opp
        LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
        left join b_project bp on bp.ID = opp.projectId
        left join b_account bac on bac.ID = opp.CreateUserId
        WHERE 1 = 1
        <if test="ownerUserId != null and ownerUserId != ''">
            AND opp.SalesAttributionId = #{ownerUserId} AND opp.ClueStatus IN (1, 2, 3, 4, 8, 12)
        </if>
        <if test="ownerUserId == null or ownerUserId == ''">
            AND opp.ClueStatus IN (1, 2, 3, 8)
        </if>
        <if test="projectList != null and projectList.size() > 0">
            AND opp.projectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            <if test="type == 0">
                AND (
                opp.CustomerName = #{customerName}
                <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                    or opp.OpportunityClueId in
                    <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
            <if test="type != 0">
                AND (
                opp.CustomerName like concat('%',#{customerName},'%')
                <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                    or opp.OpportunityClueId in
                    <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND (
            opp.CustomerMobile = #{customerMobile}
            <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                or opp.OpportunityClueId in
                <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            )
        </if>
        <if test="clueStatus != null and clueStatus != ''">
            <if test='clueStatus == "1"'>
                AND exists (select 1 from b_followup_record a where FollowUpWay = '报备' and a.OpportunityClueId = opp.OpportunityClueId)
                AND not exists ( select 1 from b_followup_record a where (FollowUpWay in ('2','3','4') or IsThreeOnesStatus =1) and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "2"'>
                AND exists ( select 1 from b_followup_record a where FollowUpWay in ('3','4') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "3"'>
                AND exists ( select 1 from b_followup_record a where IsThreeOnesStatus =1 and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists ( select 1 from b_followup_record a where FollowUpWay in ('3','4') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "4"'>
                AND exists ( select 1 from b_followup_record a where FollowUpWay in ('2') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists ( select 1 from b_followup_record a where (FollowUpWay in ('3','4') or IsThreeOnesStatus =1) and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "8"'>
                AND exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
        </if>
        <if test="reportUserName != null and reportUserName != ''">
            AND opp.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="salesAttributionName != null and salesAttributionName != ''">
            AND opp.SalesAttributionName LIKE '%${salesAttributionName}%'
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            AND opp.SourceMode = #{sourceMode}
        </if>
        <if test="customerLevel != null and customerLevel != ''">
            AND opp.CustomerLevel = #{customerLevel}
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="startTimeTwo != null and startTimeTwo != '' and endTimeTwo != null and endTimeTwo != ''">
            AND opp.CreateTime BETWEEN #{startTimeTwo} AND #{endTimeTwo}
        </if>
        <if test="expireStartTime != null and expireStartTime != '' and expireEndTime != null and expireEndTime != ''">
            AND opp.SalesFollowExpireDate BETWEEN #{expireStartTime} AND #{expireEndTime} and opp.ClueStatus != 8
        </if>
        <if test="followStartTime != null and followStartTime != '' and followEndTime != null and followEndTime != ''">
            AND opp.SalesTheLatestFollowDate BETWEEN #{followStartTime} AND #{followEndTime}
        </if>
        <if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
            AND opp.SalesAttributionTime BETWEEN #{date1} AND #{date2}
        </if>
        <if test="visitStartCount!=null and visitStartCount!=''">
            and opp.visit_count &gt;= #{visitStartCount}
        </if>
        <if test="visitEndCount!=null and visitEndCount!=''">
            and opp.visit_count &lt;= #{visitEndCount}
        </if>
        <if test="threeOnesBeforeStartCount!=null and threeOnesBeforeStartCount!=''">
            and opp.three_ones_before_count &gt;= #{threeOnesBeforeStartCount}
        </if>
        <if test="threeOnesBeforeEndCount!=null and threeOnesBeforeEndCount!=''">
            and opp.three_ones_before_count &lt;= #{threeOnesBeforeEndCount}
        </if>
        <if test="threeOnesAfterStartCount!=null and threeOnesAfterStartCount!=''">
            and opp.three_ones_after_count &gt;= #{threeOnesAfterStartCount}
        </if>
        <if test="threeOnesAfterEndCount!=null and threeOnesAfterEndCount!=''">
            and opp.three_ones_after_count &lt;= #{threeOnesAfterEndCount}
        </if>
        <if test="comeVisitStartCount!=null and comeVisitStartCount!=''">
            and opp.come_visit_count &gt;= #{comeVisitStartCount}
        </if>
        <if test="comeVisitEndCount!=null and comeVisitEndCount!=''">
            and opp.come_visit_count &lt;= #{comeVisitEndCount}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
              separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="taskName != null and taskName != ''">
            AND opp.TaskId in (select id from b_task bt where taskName like concat('%',#{taskName},'%'))
        </if>
        <if test="tagLabel != null and tagLabel != ''">
            AND opp.Label  like concat('%',#{tagLabel},'%')
        </if>
    </select>
    <select id="courtCase" parameterType="cn.visolink.system.channel.model.form.ExcelForm"
            resultType="cn.visolink.system.channel.model.vo.ProjectCluesNew">
        SELECT
        opp.OpportunityClueId opportunityClueId,
        opp.ProjectClueId projectClueId,
        opp.projectId projectId,
        opp.ProjectName projectName,
        if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name) customerName,
        (case when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name) else opp.CustomerName end) oldCustomerName,
        opp.SourceMode sourceMode,
        inf.BelongIndustriseDesc belongIndustriseDesc,
        opp.Contacts contacts,
        CONCAT(
        LEFT ( opp.CustomerMobile, 3 ),
        '****',
        RIGHT ( opp.CustomerMobile, 4 )) customerMobile,
        (case when opp.IsReferralOk = 1 and opp.IsShowNameReferral = 0 then CONCAT(LEFT ( opp.CustomerMobile, 3 ),'****',RIGHT ( opp.CustomerMobile, 4 )) else opp.CustomerMobile end) oldCustomerMobile,
        opp.ReportCreateTime reportCreateTime,
        opp.ReportUserName reportUserName,
        opp.ReportTeamName reportTeamName,
        (
        CASE
        WHEN opp.ReportUserRole = '1' THEN
        '项目招商专员'
        WHEN opp.ReportUserRole = '2' THEN
        '区域招商专员'
        WHEN opp.ReportUserRole = '3' THEN
        '全民经纪人'
        ELSE
        ''
        END
        ) reportUserRole,
        opp.TokerTheLatestFollowDate tokerTheLatestFollowDate,
        opp.SalesAttributionName salesAttributionName,
        opp.SalesAttributionTime salesAttributionTime,
        opp.SalesFollowExpireDate salesFollowExpireDate,
        opp.TheFirstVisitDate theFirstVisitDate,
        opp.VisitDate visitDate,
        opp.CustomerLevel customerLevel,
        opp.TradeLevel tradeLevel,
        opp.SalesTheLatestFollowDate salesTheLatestFollowDate,
        opp.DeliveryDate deliveryDate,
        (
        CASE
        WHEN opp.IsTaoGuest = 1 THEN
        '是'
        ELSE
        '否'
        END
        ) isTaoGuest,
        (
        CASE
        WHEN opp.ClueStatus = 1 THEN
        '报备'
        WHEN opp.ClueStatus = 2 THEN
        '到访'
        WHEN opp.ClueStatus = 3 THEN
        '交房'
        WHEN opp.ClueStatus = 4 THEN
        '相似客户审批中'
        WHEN opp.ClueStatus = 12 THEN
        '相似客户审批驳回'
        WHEN opp.ClueStatus = 8 THEN
        '签约'
        ELSE
        '作废'
        END
        ) clueStatus,
        (case opp.IsPark when 1 then '是' when 0 then '否' else '' end  ) isPark,
        opp.ParkName parkName,
        opp.ParkAddress parkAddress,
        opp.ParkFloor parkFloor,
        opp.CustomerAddress customerAddress,
        inf.DetailedAddress detailedAddress,
        inf.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
        opp.MainProducts businessProducts,
        inf.MainRawMaterials mainRawMaterials,
        inf.PeopleNum peopleNum,
        inf.ExistingPlantArea existingPlantArea,
        inf.AnnualOutputValue annualOutputValue,
        inf.TaxAmountYear taxAmountYear,
        inf.WorkShopTypeDesc workShopTypeDesc,
        opp.PlantTypeDesc plantTypeDesc,
        inf.IntentionTypeDesc intentionTypeDesc,
        inf.IntentionalAreaDesc intentionalAreaDesc,
        inf.IntentionalPrice acceptPriceDesc,
        inf.IntentionalFloorDesc intentionalFloorDesc,
        opp.Label label,
        bp.AreaName areaName,
        (select count(1) from b_cust_referral where OpportunityClueId = opp.OpportunityClueId and status  = 1) isEditOk,
        (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end) from b_followup_record where IsDel = 0 and Status in (1, 3, 4, 5) and FollowUpType = 1 and FollowUpWay in (1,2,3,4,5) and UserId = opp.SalesAttributionId and FollowUpDate > opp.CatchTime and FollowUpDate > '2024-03-15 22:00:00' and OpportunityClueId = opp.OpportunityClueId order by EditTime desc,CreateTime desc limit 1) isFollUpOk,
        opp.visit_count visitCount,opp.three_ones_before_count threeOnesBeforeCount,opp.three_ones_after_count threeOnesAfterCount,opp.come_visit_count comeVisitCount,
        opp.CreateTime createTime,
        bac.EmployeeName createUserName,
        opp.CustomerType customerType,
        inf.BelongIndustrise belongIndustrise,
        inf.BelongIndustriseTwo belongIndustriseTwo,
        inf.BelongIndustriseThree belongIndustriseThree,
        inf.BelongIndustriseFour belongIndustriseFour,
        opp.MainProducts mainProducts,
        opp.Position position,
        opp.LegalPerson legalPerson,
        opp.LegalPersonPhone orderLegalPersonPhone,
        opp.LegalPersonCardNum legalPersonCardNum,
        opp.EnterpriseType enterpriseType,
        opp.PostCode postCode,
        opp.Floor floor,
        opp.RentAndSaleType rentAndSaleType,
        opp.RentalPrice rentalPrice,
        inf.YxArea yxArea,
        inf.IntentionClass intentionClass,
        inf.IntentionType intentionType,
        inf.IntentionalPrice intentionalPrice,
        inf.NowRent nowRent,
        inf.NowOfficeSpace nowOfficeSpace,
        inf.PollutantDischarge pollutantDischarge,
        inf.Zyreason zyreason,
        inf.ResistanceDesc resistanceDesc,
        inf.TechnologicalProcess technologicalProcess,
        inf.MajorEquipment majorEquipment,
        inf.ImportantDescription importantDescription,
        inf.ElectricityYear electricityYear,
        inf.WaterYear waterYear,
        (case
        when opp.ClueStatus = 4
        then (select concat(ba.EmployeeName, '... 审批中')
            from s_jobsuserrel rel
            left join s_jobs job on rel.JobID = job.ID
            left join s_commonjobs com on job.CommonJobID = com.ID
            left join s_organization org on job.JobOrgID = org.ID
            left join b_account ba on ba.ID = rel.AccountID
            left join s_user_org_rel url on ba.ID = url.user_id and find_in_set(org.ProjectID, url.project_id) and (IF(url.is_no_time = 0,DATE_FORMAT(NOW(), '%Y-%m-%d') between url.start_time and url.end_time,true)) and url.approve_status = 2 and url.isdel = 0 and url.status = 1
            where job.Status = 1
            and job.IsDel = 0
            and ba.Status = 1
            and com.JobCode in ('zszj')
            and org.ProjectID = opp.projectId and find_in_set(opp.SalesAttributionTeamId,url.org_id) limit 1)
        when opp.ClueStatus = 12
        then '报备审核驳回'
        else '' end ) similarCustomerApproveStatus,
        (case when exists ( select 1 from b_followup_record a where IsThreeOnesStatus =1 and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
        and not exists ( select 1 from b_followup_record a where FollowUpWay in ('3','4') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
        AND not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
        then '是' else '否' end) isThreeOnes,
        (select GROUP_CONCAT(enclosureUrl ) from b_enclosure where OpportunityClueId = opp.OpportunityClueId and enclosureType = 2) enclosures,
        (select (case Status when 1 then '1' when 3 then '2' when 4 then '1' when 5 then '1' else '0' end) from b_followup_record where IsDel = 0 and Status in (1, 3, 4, 5) and FollowUpType = 1 and FollowUpWay in (1,2,3,4,5) and UserId = opp.SalesAttributionId and FollowUpDate > opp.CatchTime and FollowUpDate > '2024-03-15 22:00:00' and OpportunityClueId = opp.OpportunityClueId order by EditTime desc,CreateTime desc limit 1) isFollUpOk,
        (case when opp.ClueStatus in (4,12) then opp.ReportCreateTime else (select FollowUpDate from b_followup_record where IsDel = 0 and Status in (1, 3, 4, 5) and FollowUpType = 1 and FollowUpWay in (1,2,3,4,5) and UserId = opp.SalesAttributionId and FollowUpDate > opp.CatchTime and FollowUpDate > '2024-03-15 22:00:00' and OpportunityClueId = opp.OpportunityClueId order by EditTime desc,CreateTime desc limit 1) end) isFollOrder
        FROM
        b_project_opportunity opp
        LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
        left join b_project bp on bp.ID = opp.projectId
        left join b_account bac on bac.ID = opp.CreateUserId
        WHERE 1 = 1
        <if test="ownerUserId != null and ownerUserId != ''">
            AND opp.SalesAttributionId = #{ownerUserId} AND opp.ClueStatus IN (1, 2, 3, 4, 8, 12)
        </if>
        <if test="ownerUserId == null or ownerUserId == ''">
            AND opp.ClueStatus IN (1, 2, 3, 8)
        </if>
        <if test="projectList != null and projectList.size() > 0">
            AND opp.projectId IN (
              <foreach collection="projectList" item="item" separator=",">
                  #{item}
              </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            <if test="type == 0">
                AND (
                opp.CustomerName = #{customerName}
                <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                    or opp.OpportunityClueId in
                    <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
            <if test="type != 0">
                AND (
                opp.CustomerName like concat('%',#{customerName},'%')
                <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                    or opp.OpportunityClueId in
                    <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND (
                opp.CustomerMobile = #{customerMobile}
                <if test="relaCustomerMainIds != null and relaCustomerMainIds.size() > 0">
                    or opp.OpportunityClueId in
                    <foreach collection="relaCustomerMainIds" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                )
        </if>
        <if test="clueStatus != null and clueStatus != ''">
            <if test='clueStatus == "1"'>
                AND exists (select 1 from b_followup_record a where FollowUpWay = '报备' and a.OpportunityClueId = opp.OpportunityClueId)
                AND not exists ( select 1 from b_followup_record a where (FollowUpWay in ('2','3','4') or IsThreeOnesStatus =1) and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "2"'>
                AND exists ( select 1 from b_followup_record a where FollowUpWay in ('3','4') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "3"'>
                AND exists ( select 1 from b_followup_record a where IsThreeOnesStatus =1 and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists ( select 1 from b_followup_record a where FollowUpWay in ('3','4') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "4"'>
                AND exists ( select 1 from b_followup_record a where FollowUpWay in ('2') and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                AND not exists ( select 1 from b_followup_record a where (FollowUpWay in ('3','4') or IsThreeOnesStatus =1) and a.OpportunityClueId = opp.OpportunityClueId and a.Status = 2)
                and not exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
            <if test='clueStatus == "8"'>
                AND exists (select 1 from b_opportunity_trade where OpportunityClueId = opp.OpportunityClueId)
            </if>
        </if>
        <if test="reportUserName != null and reportUserName != ''">
            AND opp.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="salesAttributionName != null and salesAttributionName != ''">
            AND opp.SalesAttributionName LIKE '%${salesAttributionName}%'
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            AND opp.SourceMode = #{sourceMode}
        </if>
        <if test="customerLevel != null and customerLevel != ''">
            AND opp.CustomerLevel = #{customerLevel}
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="startTimeTwo != null and startTimeTwo != '' and endTimeTwo != null and endTimeTwo != ''">
            AND opp.CreateTime BETWEEN #{startTimeTwo} AND #{endTimeTwo}
        </if>
        <if test="expireStartTime != null and expireStartTime != '' and expireEndTime != null and expireEndTime != ''">
            AND opp.SalesFollowExpireDate BETWEEN #{expireStartTime} AND #{expireEndTime} and opp.ClueStatus != 8
        </if>
        <if test="followStartTime != null and followStartTime != '' and followEndTime != null and followEndTime != ''">
            AND opp.SalesTheLatestFollowDate BETWEEN #{followStartTime} AND #{followEndTime}
        </if>
        <if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
            AND opp.SalesAttributionTime BETWEEN #{date1} AND #{date2}
        </if>
        <if test="visitStartCount!=null and visitStartCount!=''">
            and opp.visit_count &gt;= #{visitStartCount}
        </if>
        <if test="visitEndCount!=null and visitEndCount!=''">
            and opp.visit_count &lt;= #{visitEndCount}
        </if>
        <if test="threeOnesBeforeStartCount!=null and threeOnesBeforeStartCount!=''">
            and opp.three_ones_before_count &gt;= #{threeOnesBeforeStartCount}
        </if>
        <if test="threeOnesBeforeEndCount!=null and threeOnesBeforeEndCount!=''">
            and opp.three_ones_before_count &lt;= #{threeOnesBeforeEndCount}
        </if>
        <if test="threeOnesAfterStartCount!=null and threeOnesAfterStartCount!=''">
            and opp.three_ones_after_count &gt;= #{threeOnesAfterStartCount}
        </if>
        <if test="threeOnesAfterEndCount!=null and threeOnesAfterEndCount!=''">
            and opp.three_ones_after_count &lt;= #{threeOnesAfterEndCount}
        </if>
        <if test="comeVisitStartCount!=null and comeVisitStartCount!=''">
            and opp.come_visit_count &gt;= #{comeVisitStartCount}
        </if>
        <if test="comeVisitEndCount!=null and comeVisitEndCount!=''">
            and opp.come_visit_count &lt;= #{comeVisitEndCount}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
              separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="taskName != null and taskName != ''">
            AND opp.TaskId in (select id from b_task bt where taskName like concat('%',#{taskName},'%'))
        </if>
        <if test="tagLabel != null and tagLabel != ''">
            AND opp.Label  like concat('%',#{tagLabel},'%')
        </if>
        <if test="ownerUserId != null and ownerUserId != ''">
            order by isFollOrder desc, opp.ReportCreateTime desc
        </if>
        <if test="ownerUserId == null or ownerUserId == ''">
            order by opp.ReportCreateTime desc
        </if>
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>

<!--    查询放弃记录-->
    <select id="getAbandonRecord"
            resultType="cn.visolink.system.channel.model.vo.CustomerDistributionRecordsVO">
        SELECT
            custom.ProjectClueId projectClueId,
            custom.OldSalesId oldSalesId,
            custom.OldSalesName oldSalesName,
            custom.ApplyDatetime applyDatetime,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name) customerName,
            opp.CustomerName oldCustomerName,
            CONCAT(
            LEFT ( opp.CustomerMobile, 3 ),
            '****',
            RIGHT ( opp.CustomerMobile, 4 )) customerMobile,
            opp.CustomerMobile oldCustomerMobile,
            (
            CASE
            WHEN opp.SourceType = '1' THEN
            '中介'
            WHEN opp.SourceType = '2' THEN
            '自渠'
            WHEN opp.SourceType = '3' THEN
            '自然到访'
            WHEN opp.SourceType = '7' THEN
            '私营媒介'
            ELSE
            '历史数据'
            END
            ) sourceType,
            custom.projectId projectId,
            custom.ProjectName projectName,
            (
            CASE
            WHEN opp.ClueStatus = '0' THEN
            '走访'
            WHEN opp.ClueStatus = '1' THEN
            '报备'
            WHEN opp.ClueStatus = '2' THEN
            '到访'
            WHEN opp.ClueStatus = '7' THEN
            '认购'
            WHEN opp.ClueStatus = '8' THEN
            '签约'
            WHEN opp.ClueStatus = '9' THEN
            '丢失'
            ELSE
            '作废'
            END
            ) clueStatus,
            opp.ReportUserName reportUserName,
            opp.ReportCreateTime reportCreateTime
        FROM
            b_customerdistributionrecords custom
                LEFT JOIN b_project_opportunity opp ON custom.ProjectClueId = opp.ProjectClueId
        WHERE
              1 = 1
            AND custom.Type = 2
        <if test="projectList != null and projectList.size() > 0">
            AND opp.projectId in (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="oldSalesName != null and oldSalesName != ''">
            AND custom.OldSalesName LIKE '%${oldSalesName}%'
        </if>
        <if test="reportUserName != null and reportUserName != ''">
            AND opp.ReportUserName LIKE '%${reportUserName}%'
        </if>
        <if test="date == '放弃时间' and startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND custom.ApplyDatetime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="date == '报备时间' and startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND opp.ReportCreateTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="reportUserRole != null and reportUserRole != ''">
            AND opp.ReportUserRole = #{reportUserRole}
        </if>
    </select>

    <select id="oppInformation" parameterType="java.util.Map"
            resultType="cn.visolink.system.channel.model.vo.OppInformation">
        SELECT
            opp.OpportunityClueId as opportunityClueId,
            opp.SourceMode sourceMode,
            opp.SalesAttributionTeamId salesAttributionTeamId,
            opp.CustomerName customerName,
            if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name) customerNameIns,
            if(opp.SalesAttributionId = #{userId},opp.CustomerMobile,CONCAT( LEFT ( opp.CustomerMobile, 7), RIGHT ( opp.CustomerMobile, 4 ))) customerMobile,
            CONCAT(LEFT ( opp.CustomerMobile, 3 ), '****', RIGHT ( opp.CustomerMobile, 4 )) customerMobileIns,
            opp.CustomerGender customerGender,
            inf.BelongIndustrise belongIndustrise,
            inf.BelongIndustriseDesc belongIndustriseDesc,
            inf.BelongIndustriseTwo belongIndustriseTwo,
            inf.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
            inf.BelongIndustriseThree belongIndustriseThree,
            inf.BelongIndustriseThreeDesc belongIndustriseThreeDesc,
            inf.BelongIndustriseFour belongIndustriseFour,
            inf.BelongIndustriseFour belongIndustriseFour,
            opp.Contacts contacts,
            opp.Position position,
            opp.CustomerAddress customerAddress,
            opp.MainProducts mainProducts,
            opp.Floor floor,
            opp.PlantType plantType,
            opp.PlantTypeDesc plantTypeDesc,
            opp.RentAndSaleType rentAndSaleType,
            opp.RentAndSaleTypeDesc rentAndSaleTypeDesc,
            opp.RentalPrice rentalPrice,
            opp.IsPark isPark,
            opp.ParkName parkName,
            opp.ParkAddress parkAddress,
            opp.ParkFloor parkFloor,

            opp.CustomerType                      customerType,
            opp.LegalPerson                       legalPerson,
            if (opp.SalesAttributionId = #{userId},opp.LegalPersonPhone,
            CONCAT(LEFT ( opp.LegalPersonPhone, 3 ),
            '****',
            RIGHT ( opp.LegalPersonPhone, 4 ))) legalPersonPhone,
            CONCAT(LEFT ( opp.LegalPersonPhone, 3 ), '****', RIGHT ( opp.LegalPersonPhone, 4 )) legalPersonPhoneIns,
            opp.EnterpriseType                    enterpriseType,
            opp.EnterpriseTypeDesc                enterpriseTypeDesc,
            opp.CustomerCardType                  customerCardType,
            opp.CustomerCardTypeDesc              customerCardTypeDesc,
            opp.CustomerCardNum                   customerCardNum,
            opp.PostCode                          postCode,

            opp.ReportUserName reportUserName,
            account.Mobile reportUserMobile,
            (
            CASE
            WHEN opp.ReportUserRole = '1' THEN
            '项目招商专员'
            WHEN opp.ReportUserRole = '2' THEN
            '区域招商专员'
            WHEN opp.ReportUserRole = '3' THEN
            '全民经纪人'
            ELSE
            ''
            END
            ) reportUserRole,
            opp.ReportCreateTime reportCreateTime,
            opp.SalesAttributionName salesAttributionName,
            opp.SalesAttributionTime salesAttributionTime,
            opp.TokerTheLatestFollowDate tokerTheLatestFollowDate,
            opp.SalesTheLatestFollowDate salesTheLatestFollowDate,
            (
            CASE
            WHEN opp.ClueStatus = '0' THEN
            '走访'
            WHEN opp.ClueStatus = '1' THEN
            '报备'
            WHEN opp.ClueStatus = '2' THEN
            '到访'
            WHEN opp.ClueStatus = '3' THEN
            '交房'
            WHEN opp.ClueStatus = '4' THEN
            '相似客户审批中'
            WHEN opp.ClueStatus = '7' THEN
            '认购'
            WHEN opp.ClueStatus = '8' THEN
            '签约'
            WHEN opp.ClueStatus = '9' THEN
            '丢失'
            WHEN opp.ClueStatus = '12' THEN
            '相似客户审批驳回'
            ELSE
            '作废'
            END
            ) ClueStatus,
            (
            CASE
            WHEN opp.IsTaoGuest = 1 THEN '是'
            ELSE
            '否'
            END
            ) isTaoGuest,
            inf.YxArea yxArea,
            inf.YxAreaDesc yxAreaDesc,
            inf.IntentionClass intentionClass,
            inf.IntentionClassDesc intentionClassDesc,
            inf.IntentionType intentionType,
            inf.IntentionTypeDesc intentionTypeDesc,
            inf.YxSignTime yxSignTime,
            inf.IntentionalArea intentionalArea,
            inf.IntentionalAreaDesc intentionalAreaDesc,
            inf.IntentionalFloor intentionalFloor,
            inf.IntentionalFloorDesc intentionalFloorDesc,
            inf.Zyreason zyreason,
            inf.ZyreasonDesc zyreasonDesc,
            inf.DemandRemarks demandRemarks,
            inf.ResistanceDesc resistanceDesc,

            inf.Needs                             needs,
            inf.NowRent                           nowRent,
            inf.NowOfficeSpace                    nowOfficeSpace,
            inf.PollutantDischarge                pollutantDischarge,
            inf.PollutantDischargeDesc            pollutantDischargeDesc,

            inf.Description description,
            inf.TechnologicalProcess technologicalProcess,
            inf.MainRawMaterials mainRawMaterials,
            inf.ElectricityYear electricityYear,
            inf.TaxpayerNum taxpayerNum,
            inf.ImportantDescription importantDescription,
            inf.WaterYear waterYear,
            inf.BusinessProducts businessProducts,
            inf.PeopleNum peopleNum,
            inf.AnnualOutputValue annualOutputValue,
            inf.Area area,
            inf.MajorEquipment majorEquipment,
            inf.ExistingPlantArea existingPlantArea,
            inf.TaxAmountYear taxAmountYear,
            (
            CASE
            WHEN inf.WorkShopTypeDesc = 1 THEN '租赁'
            WHEN inf.WorkShopTypeDesc = 2 THEN '自建厂房'
            ELSE
            '他建购买'
            END
            ) workShopTypeDesc,
            inf.IntentionalPrice intentionalPrice,
            inf.DetailedAddress detailedAddress,
            bac.EmployeeName createUserName,
            opp.ReportTeamName reportTeamName,
            DATE_FORMAT(opp.CreateTime, '%Y-%m-%d %H:%i:%s' ) createTime,
            if(opp.SalesAttributionId=#{userId},1,0) isSelf,
            opp.SalesAttributionId as salesAttributionId,
            opp.projectId
        FROM
            b_project_opportunity opp
            LEFT JOIN b_information inf ON opp.OpportunityClueId = inf.OpportunityClueId
            LEFT JOIN b_account account ON opp.ReportUserID = account.ID
            left join b_account bac on bac.ID = opp.CreateUserId
        WHERE
            opp.OpportunityClueId = #{opportunityClueId}
    </select>

    <select id="getOppEnclosures" resultType="java.lang.String" parameterType="java.util.Map">
        select enclosureUrl from b_enclosure
        where OpportunityClueId = #{opportunityClueId} and enclosureType = 2 and isDel = 0
    </select>

    <select id="getClueEnclosures" resultType="java.lang.String" parameterType="java.util.Map">
        select enclosureUrl from b_enclosure
        where ProjectClueId = #{projectClueId} and enclosureType = 1 and isDel = 0
    </select>

    <select id="selectRelationCompany" resultType="java.lang.String">
        SELECT
            GROUP_CONCAT( opp.CustomerName ) FROM b_intention_relationship pp
                                                      LEFT JOIN b_project_opportunity opp ON opp.OpportunityClueId = pp.RelationshipOpportunityClueId
        WHERE pp.OpportunityClueId = #{opportunityClueId}
        GROUP BY
            pp.OpportunityClueId
    </select>
    <select id="selectProjectClues" resultType="cn.visolink.system.channel.model.vo.InformationVO">
        select
            clu.ProjectClueId projectClueId,
            clu.SalesAttributionTeamId salesAttributionTeamId,
            clu.CustomerName customerName,
            if(length(trim(clu.diy_hide_customer_name)) = 0 or clu.diy_hide_customer_name is null,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) customerNameIns,
            if(clu.SalesAttributionId= #{userId},clu.CustomerMobile,CONCAT(
                LEFT ( clu.CustomerMobile, 7 ),
                RIGHT ( clu.CustomerMobile, 4 ))) customerMobile,
        CONCAT(LEFT ( clu.CustomerMobile, 3 ), '****', RIGHT ( clu.CustomerMobile, 4 )) AS customerMobileIns,
               clu.projectId,clu.ProjectName projectName,clu.CustomerLevel customerLevel,clu.ClueStatus clueStatus,
            clu.Contacts contacts,clu.Longitude longitude,clu.Latitude latitude,clu.SourceMode sourceMode,bin.BelongIndustrise belongIndustrise,bin.BelongIndustriseDesc belongIndustriseDesc,clu.CustomerAddress customerAddress,clu.ReportUserRole reportUserRole,
            clu.Position position,clu.IsPark isPark,clu.ParkName parkName,clu.ParkAddress parkAddress,clu.MainProducts mainProducts,clu.Floor floor,clu.PlantType plantType,clu.RentAndSaleType rentAndSaleType,clu.RentalPrice rentalPrice,clu.ParkFloor parkFloor,
            clu.SalesAttributionTeamId orgId,clu.SalesAttributionTeamName orgName,
            clu.SalesAttributionId salesAttributionId,
            clu.PlantTypeDesc plantTypeDesc,
            clu.RentAndSaleTypeDesc rentAndSaleTypeDesc,
            bin.IntentionalAreaDesc intentionalAreaDesc,
            bin.IntentionalFloorDesc intentionalFloorDesc,
            bin.ResistanceDesc resistanceDesc,
            bin.YxArea yxArea,
            bin.YxAreaDesc yxAreaDesc,
            bin.ZyreasonDesc zyreasonDesc,
            bin.IntentionClass intentionClass,
            bin.IntentionClassDesc intentionClassDesc,
            bin.IntentionType intentionType,
            bin.IntentionTypeDesc intentionTypeDesc,
            bin.YxSignTime yxSignTime,
            bin.DemandRemarks demandRemarks,
          bin.BelongIndustriseTwo belongIndustriseTwo,
          bin.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
          bin.BelongIndustriseThree belongIndustriseThree,
          bin.BelongIndustriseThreeDesc belongIndustriseThreeDesc,
            bin.BelongIndustriseFour belongIndustriseFour,
            bin.BelongIndustriseFourDesc belongIndustriseFourDesc,
            bin.IntentionalPrice intentionalPrice,
          bin.Description description,
          bin.TaxpayerNum taxpayerNum,
          bin.Area area,
          bin.DetailedAddress detailedAddress,
          bin.TechnologicalProcess technologicalProcess,
          bin.BusinessProducts businessProducts,
          bin.MajorEquipment majorEquipment,
          bin.MainRawMaterials mainRawMaterials,
          bin.ImportantDescription importantDescription,
          bin.ElectricityYear electricityYear,
          bin.WaterYear waterYear,
          bin.AnnualOutputValue annualOutputValue,
          bin.TaxAmountYear taxAmountYear,
          bin.WorkShopType workShopType,
          bin.WorkShopTypeDesc workShopTypeDesc,
          bin.Province province,
          bin.City city,
          bin.District district,
          bin.PeopleNum peopleNum,
          bin.ExistingPlantArea existingPlantArea,
          if(clu.SalesAttributionId=#{userId},1,0) isSelf
        from b_project_clues clu
            left join b_information bin on clu.ProjectClueId = bin.ProjectClueId
        where clu.IsDel = 0
          and clu.ProjectClueId = #{projectClueId}
    </select>

<!--    申诉记录-->
    <select id="getAppealRecord" resultType="cn.visolink.system.channel.model.vo.AppealVo">
        SELECT
            app.id id,
            app.userId userId,
            ba.EmployeeName username,
            CONCAT(
            LEFT(ba.Mobile, 3),
            '****',
            RIGHT(ba.Mobile, 4)) mobile,
            ba.Mobile oldMobile,
            app.ProjectName projectName,
            app.ProblemDesc problemDesc,
            app.CreateTime  createTime,
            app.HandleTime  handleTime,
            (case app.Status when 1 then '申诉通过' when 2 then '申诉驳回' else '未处理' end) appealStatus,
            (select group_concat(img_url) from b_user_appeal_img where appeal_id = app.id) imgUrlStr,
            app.RejectReason rejectReason
        FROM
            b_user_appeal app
                LEFT JOIN b_account ba ON app.userId = ba.ID
        WHERE
            app.IsDel = 0
          AND ba.`Status` = 1
          AND ba.isDel = 0
        <if test="jobCode != null and jobCode != ''">
            AND app.jobCode = #{jobCode}
        </if>
        <if test="projectList != null and projectList.size() > 0">
            AND app.ProjectId in (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="username != null and username != ''">
            AND ba.EmployeeName = #{username}
        </if>
        <if test="mobile != null and mobile != ''">
            AND ba.Mobile = #{mobile}
        </if>
        <if test="createStartTime!=null and createStartTime!='' and createEndTime!=null and createEndTime!=''">
            and app.createTime between #{createStartTime} and #{createEndTime}
        </if>
        <if test="handleStartTime!=null and handleStartTime!='' and handleEndTime!=null and handleEndTime!=''">
            and app.handleTime between #{handleStartTime} and #{handleEndTime}
        </if>
        order by CreateTime desc
    </select>

    <select id="getTaskAccount" resultType="cn.visolink.system.channel.model.vo.TaskVo">
        SELECT DISTINCT * FROM (
        <!-- 场景1：创建者任务（保持不变） -->
        SELECT
        bt.id,
        bp.Id projectId,
        bp.ProjectName projectName,
        bt.taskName,
        bt.taskTypeId,
        ba.EmployeeName employeeName,
        bt.createBy,
        bt.createTime,
        bt.startTime,
        bt.endTime,
        bt.teamId,
        bt.teamName,
        bt.taskArea,
        (SELECT name FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) taskAreaName,
        (SELECT lat_lon FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) drawLatLon,
        IFNULL(bt.reportNum, 0) reportNum,
        IFNULL(bt.visitNum, 0) visitNum,
        IFNULL(bt.arriveNum, 0) arriveNum,
        IFNULL(bt.threeOneNum, 0) threeOneNum,
        CASE
        WHEN IFNULL(bt.status, 99) = 4 THEN 4
        WHEN bt.startTime <![CDATA[ <= ]]> NOW() AND bt.endTime >= NOW() AND IFNULL(bt.status, 99) != 4 THEN 2
        WHEN bt.startTime <![CDATA[ > ]]> NOW() AND IFNULL(bt.status, 99) != 4 THEN 1
        ELSE 3
        END AS taskStatus,
        IFNULL(bt.dealNum, 0) dealNum,
        IFNULL(bt.firstVisitNum, 0) firstVisitNum,
        IFNULL(bt.repeatVisitNum, 0) repeatVisitNum,
        IFNULL(bt.tagNum, 0) tagNum,
        bt.parentId,
        bt.taskDesc,
        bt.status,
        btp.taskName parentTaskName
        FROM b_task bt
        LEFT JOIN b_project bp ON bt.projectId = bp.ID
        LEFT JOIN b_account ba ON bt.createBy = ba.ID
        LEFT JOIN b_task btp ON bt.parentId = btp.id
        <!-- 场景1不关联 v_task_team_xsjl，保持原逻辑 -->
        WHERE bt.isDel = 0
        AND bp.`Status` = 1
        AND bp.isDel = 0
        AND ba.`Status` = 1
        AND ba.IsDel = 0
        <if test="userIdsCreate != null and userIdsCreate.size() > 0">
            AND bt.createBy IN
            <foreach collection="userIdsCreate" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="userIdsMember != null and userIdsMember.size() > 0  and memberUserName != null and memberUserName != ''">
            <!-- 场景2改为或关系：通过 b_task_member 或 v_task_team_xsjl 筛选 -->
            AND (
            bt.id IN (
            SELECT taskId FROM b_task_member
            WHERE memberId IN
            <foreach collection="userIdsMember" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
            )
        </if>

        UNION ALL

        <!-- 场景2：团队成员任务（改为或关系） -->
        SELECT
        bt.id,
        bp.Id projectId,
        bp.ProjectName projectName,
        bt.taskName,
        bt.taskTypeId,
        ba.EmployeeName employeeName,
        bt.createBy,
        bt.createTime,
        bt.startTime,
        bt.endTime,
        bt.teamId,
        bt.teamName,
        bt.taskArea,
        (SELECT name FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) taskAreaName,
        (SELECT lat_lon FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) drawLatLon,
        IFNULL(bt.reportNum, 0) reportNum,
        IFNULL(bt.visitNum, 0) visitNum,
        IFNULL(bt.arriveNum, 0) arriveNum,
        IFNULL(bt.threeOneNum, 0) threeOneNum,
        CASE
        WHEN IFNULL(bt.status, 99) = 4 THEN 4
        WHEN bt.startTime <![CDATA[ <= ]]> NOW() AND bt.endTime <![CDATA[ >= ]]> NOW() AND IFNULL(bt.status, 99) != 4 THEN 2
        WHEN bt.startTime <![CDATA[ > ]]> NOW() AND IFNULL(bt.status, 99) != 4 THEN 1
        ELSE 3
        END AS taskStatus,
        IFNULL(bt.dealNum, 0) dealNum,
        IFNULL(bt.firstVisitNum, 0) firstVisitNum,
        IFNULL(bt.repeatVisitNum, 0) repeatVisitNum,
        IFNULL(bt.tagNum, 0) tagNum,
        bt.parentId,
        bt.taskDesc,
        bt.status,
        btp.taskName parentTaskName
        FROM b_task bt
        LEFT JOIN b_project bp ON bt.projectId = bp.ID
        LEFT JOIN b_account ba ON bt.createBy = ba.ID
        LEFT JOIN b_task btp ON bt.parentId = btp.id
        <!-- 新增：关联 v_task_team_xsjl 表 -->
        LEFT JOIN v_task_team_xsjl vtt ON bt.teamId = vtt.teamId
        WHERE bt.isDel = 0
        AND bp.`Status` = 1
        AND bp.isDel = 0
        AND ba.`Status` = 1
        AND ba.IsDel = 0
        <if test="userIdsCreate != null and userIdsCreate.size() > 0 and createUserName != null and createUserName != ''">
            AND bt.createBy IN
            <foreach collection="userIdsCreate" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="userIdsMember != null and userIdsMember.size() > 0">
            <!-- 场景2改为或关系：通过 b_task_member 或 v_task_team_xsjl 筛选 -->
            AND (
            bt.id IN (
            SELECT taskId FROM b_task_member
            WHERE memberId IN
            <foreach collection="userIdsMember" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
            OR
            vtt.idXsjl IN
            <foreach collection="userIdsMember" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        ) t
        <where>
            <!-- 公共过滤条件（保持不变） -->
            <if test="projectList != null and projectList.size() > 0">
                AND t.projectId IN
                <foreach collection="projectList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="taskStatus != null and taskStatus != ''">
                <choose>
                    <when test='taskStatus == "1"'>
                        AND NOW() &lt; t.startTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "2"'>
                        AND NOW() BETWEEN t.startTime AND t.endTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "3"'>
                        AND NOW() &gt; t.endTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "4"'>
                        AND IFNULL(t.status, 99) = 4
                    </when>
                </choose>
            </if>

            <if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
                AND t.createTime BETWEEN #{date1} AND #{date2}
            </if>

            <if test="taskTypeId != null and taskTypeId != ''">
                AND t.taskTypeId = #{taskTypeId}
            </if>

            <if test="id != null and id != ''">
                AND t.id = #{id}
            </if>
            <if test="taskAreaIds != null and taskAreaIds.size() > 0">
                AND t.taskArea IN
                <foreach collection="taskAreaIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="taskArea != null and taskArea != ''">
                AND t.taskArea = #{taskArea}
            </if>

            <if test="taskName != null and taskName != ''">
                AND t.taskName LIKE CONCAT('%', #{taskName}, '%')
            </if>

            <if test="parentId != null and parentId != ''">
                AND t.parentId = #{parentId}
            </if>

            <if test="status != null and status != ''">
                AND IFNULL(t.status, 99) = #{status}
            </if>

            <if test="teamId != null and teamId != ''">
                AND t.teamId = #{teamId}
            </if>
        </where>

        ORDER BY t.startTime DESC, t.createTime DESC
    </select>

    <select id="getTaskAccountForDraw" resultType="cn.visolink.system.channel.model.vo.TaskVo">
        SELECT DISTINCT * FROM (
        <!-- 场景2：团队成员任务（改为或关系） -->
        SELECT
        bt.id,
        bp.Id projectId,
        bp.ProjectName projectName,
        bt.taskName,
        bt.taskTypeId,
        ba.EmployeeName employeeName,
        bt.createBy,
        bt.createTime,
        bt.startTime,
        bt.endTime,
        bt.teamId,
        bt.teamName,
        bt.taskArea,
        (SELECT name FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) taskAreaName,
        (SELECT lat_lon FROM b_zsmap_draw bzd WHERE draw_id = bt.taskArea) drawLatLon,
        IFNULL(bt.reportNum, 0) reportNum,
        IFNULL(bt.visitNum, 0) visitNum,
        IFNULL(bt.arriveNum, 0) arriveNum,
        IFNULL(bt.threeOneNum, 0) threeOneNum,
        CASE
        WHEN IFNULL(bt.status, 99) = 4 THEN 4
        WHEN bt.startTime <![CDATA[ <= ]]> NOW() AND bt.endTime <![CDATA[ >= ]]> NOW() AND IFNULL(bt.status, 99) != 4 THEN 2
        WHEN bt.startTime <![CDATA[ > ]]> NOW() AND IFNULL(bt.status, 99) != 4 THEN 1
        ELSE 3
        END AS taskStatus,
        IFNULL(bt.dealNum, 0) dealNum,
        IFNULL(bt.firstVisitNum, 0) firstVisitNum,
        IFNULL(bt.repeatVisitNum, 0) repeatVisitNum,
        IFNULL(bt.tagNum, 0) tagNum,
        bt.parentId,
        bt.taskDesc,
        bt.status,
        btp.taskName parentTaskName
        FROM b_task bt
        LEFT JOIN b_project bp ON bt.projectId = bp.ID
        LEFT JOIN b_account ba ON bt.createBy = ba.ID
        LEFT JOIN b_task btp ON bt.parentId = btp.id
        <!-- 新增：关联 v_task_team_xsjl 表 -->
        LEFT JOIN v_task_team_xsjl vtt ON bt.teamId = vtt.teamId
        WHERE bt.isDel = 0
        AND bp.`Status` = 1
        AND bp.isDel = 0
        AND ba.`Status` = 1
        AND ba.IsDel = 0
        ) t
        <where>
            <!-- 公共过滤条件（保持不变） -->
<!--            <if test="projectList != null and projectList.size() > 0">-->
<!--                AND t.projectId IN-->
<!--                <foreach collection="projectList" item="item" open="(" separator="," close=")">-->
<!--                    #{item}-->
<!--                </foreach>-->
<!--            </if>-->

            <if test="taskStatus != null and taskStatus != ''">
                <choose>
                    <when test='taskStatus == "1"'>
                        AND NOW() &lt; t.startTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "2"'>
                        AND NOW() BETWEEN t.startTime AND t.endTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "3"'>
                        AND NOW() &gt; t.endTime AND IFNULL(t.status, 99) != 4
                    </when>
                    <when test='taskStatus == "4"'>
                        AND IFNULL(t.status, 99) = 4
                    </when>
                </choose>
            </if>

            <if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
                AND t.createTime BETWEEN #{date1} AND #{date2}
            </if>

            <if test="taskTypeId != null and taskTypeId != ''">
                AND t.taskTypeId = #{taskTypeId}
            </if>

            <if test="id != null and id != ''">
                AND t.id = #{id}
            </if>
            <if test="taskAreaIds != null and taskAreaIds.size() > 0">
                AND t.taskArea IN
                <foreach collection="taskAreaIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="taskArea != null and taskArea != ''">
                AND t.taskArea = #{taskArea}
            </if>

            <if test="taskName != null and taskName != ''">
                AND t.taskName LIKE CONCAT('%', #{taskName}, '%')
            </if>

            <if test="parentId != null and parentId != ''">
                AND t.parentId = #{parentId}
            </if>

            <if test="status != null and status != ''">
                AND IFNULL(t.status, 99) = #{status}
            </if>

            <if test="teamId != null and teamId != ''">
                AND t.teamId = #{teamId}
            </if>
        </where>

        ORDER BY t.startTime DESC, t.createTime DESC
    </select>

<!--    报备失败台账-->
    <select id="getReportFailAccount" resultType="cn.visolink.system.channel.model.vo.ReportFailVo">
        SELECT
            bp.ProjectName projectName,
            <if test="type == 0">
                CONCAT(
                LEFT( detail.customer_name, 1),
                '**') customerName,
            </if>
            <if test="type != 0">
                detail.customer_name customerName,
            </if>
            detail.customer_name oldCustomerName,
            detail.contacts contacts,
            <if test="type == 0">
                CONCAT(
                LEFT ( detail.customer_mobile, 3 ),
                '****',
                RIGHT ( detail.customer_mobile, 4 )) AS customerMobile,
            </if>
            <if test="type != 0">
                detail.customer_mobile customerMobile,
            </if>
            detail.customer_mobile oldCustomerMobile,
            detail.report_time reportTime,
            ba.EmployeeName reportName,
            (
            CASE detail.source_type
            WHEN 1 THEN '招商专员'
            WHEN 2 THEN '区域招商专员'
            WHEN 4 THEN '万企通'
            ELSE '' END
            ) sourceTypeDesc,
            reason
        FROM
            b_customer_repeat_report_detail detail
                LEFT JOIN b_project bp ON detail.project_id = bp.ID
                LEFT JOIN b_account ba ON detail.report_user_id = ba.ID
        WHERE
            detail.mobile_type = 2
        AND ba.`Status` = 1
        AND ba.isDel = 0
        AND bp.`Status` = 1
        AND bp.isDel = 0
        <if test="projectList != null and projectList.size() > 0">
            AND detail.project_id IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != '' and type == 0">
            AND detail.customer_name = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != '' and type == 0">
            AND detail.customer_mobile = #{customerMobile}
        </if>
        <if test="customerName != null and customerName != '' and type != 0">
            AND detail.customer_name like concat('%',#{customerName},'%')
        </if>
        <if test="customerMobile != null and customerMobile != '' and type != 0">
            AND detail.customer_mobile like concat('%',#{customerMobile},'%')
        </if>
        <if test="reportName != null and reportName != ''">
            AND ba.EmployeeName LIKE '%${reportName}%'
        </if>
        <if test="date1 != null and date1 != '' and date2 != null and date2 != ''">
            AND detail.report_time BETWEEN #{date1} AND #{date2}
        </if>
    </select>

    <select id="getAppealFj" parameterType="java.util.Map" resultType="java.util.Map">
        select img_url imgUrl,img_name imgName from b_user_appeal_img where appeal_id = #{id}
    </select>

    <select id="getAppealDetail" parameterType="java.util.Map" resultType="cn.visolink.system.channel.model.form.AppealForm">
        select ProblemDesc problemDesc,
               CreateTime createTime,
               HandleTime handleTime,
               (case Status when 1 then reply_content
                            when 2 then RejectReason
                            else '' end) handleDesc ,
               (case when Status = 0 then '申请中'
                     when Status = 1 then '已通过'
                     when Status = 2 then '被驳回' else '' end) status,
               id
        from b_user_appeal where id = #{id}
    </select>

    <update id="delProRuleEnclosures" parameterType="cn.visolink.system.channel.model.ProjectRuleDetail">
        update b_rule_enclosure
        set isDel = 1,
            editTime = now()
        where ProjectRuleId = #{id}
    </update>

    <insert id="addProRuleEnclosures" parameterType="cn.visolink.system.channel.model.ProjectRuleDetail">
        insert into b_rule_enclosure(
        ProjectRuleId,
        editBatchId,
        enclosureUrl,
        enclosureType,
        enclosureName,
        createTime,
        creator
        )
        values
        <foreach collection="enclosures" separator="," item="item">
            (#{id},#{editBatchId},#{item.enclosureUrl},1,#{item.enclosureName},now(),#{creator})
        </foreach>
    </insert>

    <select id="getProRuleEnclosures" parameterType="java.lang.String" resultType="java.util.Map">
        select enclosureUrl,enclosureName from b_rule_enclosure where ProjectRuleId = #{id} and isDel = 0
    </select>

<!--    根据任务id,获取成员-->
    <select id="getUserByTaskId" resultType="cn.visolink.system.channel.model.TaskMember">
        SELECT
            t1.id,
            t1.taskId,
            t1.memberId,
            t2.EmployeeName as memberName,
            t2.EmployeeName,
            t1.reportCount,
            t1.visitCount,
            t1.arriveCount,
            t1.threeOneCount,
            t1.dealCount,
            t1.firstVisitCount,
            t1.repeatVisitCount,
            t1.tagCount,
            t1.createBy,
            t1.createTime,
            t1.modifyBy,
            t1.modifyTime
        FROM
            `b_task_member` AS t1
            LEFT JOIN `b_account` AS t2 ON t1.memberId = t2.ID
        WHERE 1=1
          AND t1.taskId IN ( ${taskIds} )
        ORDER BY
            EmployeeName
    </select>

    <!--    根据任务id,获取任务客户-->
    <select id="getCustomerByTaskId" resultType="cn.visolink.system.channel.model.TaskCustomer">
        SELECT id, taskId, customerId, customerType, isDel, createBy, createTime, modifyBy, modifyTime, customerName, customerMobile FROM b_task_customer t1

        WHERE
            t1.isDel = 0
          AND t1.taskId IN ( ${taskIds} )
        ORDER BY
            customerName
    </select>

<!--    获取任务完成情况-->
    <select id="getTaskComplete" resultType="java.util.Map">
        SELECT
        sum(t.reportCount) reportCompleteNum,
        sum(t.visitCount) visitCompleteNum,
        sum(t.arriveCount) arriveCompleteNum,
        sum(t.firstVisitCount) firstVisitCount,
        sum(t.repeatVisitCount) repeatVisitCount,
        sum(t.dealCount) dealCount
        FROM
        (
        SELECT
        count(1) reportCount,
        0 visitCount,
        0 arriveCount,
        0 dealCount,
        0 firstVisitCount,
        0 repeatVisitCount
        FROM
        b_project_opportunity
        WHERE
        TaskId = #{taskId}

        UNION ALL

        SELECT
        0 reportCount,
        IFNULL(SUM(CASE WHEN FollowUpWay = 2 THEN 1 ELSE 0 END), 0) visitCount,
        IFNULL(SUM(CASE WHEN FollowUpWay IN (3, 4) THEN 1 ELSE 0 END), 0) arriveCount,
        0 dealCount,
        CASE
        WHEN (SELECT COUNT(*) FROM b_followup_record a
        WHERE a.FollowUpWay IN ('3','4')
        AND a.Status = 2
        AND a.ProjectId = #{projectId}
        AND a.UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        AND a.FollowUpDate BETWEEN #{startTime} AND #{endTime}) >= 1
        THEN (SELECT COUNT(*) FROM b_followup_record b
        WHERE b.FollowUpWay IN (3, 4)
        AND b.Status = 2
        AND b.OpportunityClueId NOT IN (
        SELECT DISTINCT OpportunityClueId
        FROM b_followup_record
        WHERE FollowUpWay IN (3, 4)
        AND FollowUpDate BETWEEN #{startTime} AND #{endTime}
        AND ProjectId = #{projectId}
        AND UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        )
        AND b.ProjectId = #{projectId}
        AND b.UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        AND b.FollowUpDate BETWEEN #{startTime} AND #{endTime})
        ELSE 0
        END AS firstVisitCount,
        CASE
        WHEN (SELECT COUNT(*) FROM b_followup_record a
        WHERE a.FollowUpWay IN ('3','4')
        AND a.Status = 2
        AND a.ProjectId = #{projectId}
        AND a.UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        AND a.FollowUpDate BETWEEN #{startTime} AND #{endTime}) >= 2
        THEN (SELECT COUNT(*) FROM b_followup_record c
        WHERE c.FollowUpWay IN (3, 4)
        AND c.Status = 2
        AND c.OpportunityClueId IN (
        SELECT OpportunityClueId
        FROM b_followup_record
        WHERE FollowUpWay IN (3, 4)
        AND FollowUpDate BETWEEN #{startTime} AND #{endTime}
        AND ProjectId = #{projectId}
        AND UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        GROUP BY OpportunityClueId
        HAVING COUNT(*) >= 1
        )
        AND c.ProjectId = #{projectId}
        AND c.UserId IN (<foreach collection="userIds" separator="," item="item">#{item}</foreach>)
        AND c.FollowUpDate BETWEEN #{startTime} AND #{endTime})
        ELSE 0
        END AS repeatVisitCount
        FROM
        b_followup_record
        WHERE
        ProjectId = #{projectId}
        AND UserId IN (
        <foreach collection="userIds" separator="," item="item">
            #{item}
        </foreach>
        )
        AND FollowUpType = 1
        AND `Status` = 2
        AND FollowUpDate BETWEEN #{startTime} AND #{endTime}

        UNION ALL

        SELECT
        0 reportCount,
        0 visitCount,
        0 arriveCount,
        COUNT(1) dealCount,
        0 firstVisitCount,
        0 repeatVisitCount
        FROM
        b_opportunity_trade
        WHERE
        ProjectId = #{projectId}
        AND PerformanceAttributorID IN (
        <foreach collection="userIds" separator="," item="item">
            #{item}
        </foreach>
        )
        AND ContractDate BETWEEN #{startTime} AND #{endTime}
        ) t
    </select>

    <select id="getCstSource" resultType="java.util.Map">
        select DictName text,DictName value,Remark remark from s_dictionary where pid = '3109eff7-cac2-4973-8888-586e802aca2a' and IsDel = 0 and Status = 1 order by CAST(ListIndex AS SIGNED)
    </select>


    <select id="getCstIndustryOneNew" resultType="java.util.Map">
        select ID value,DictCode code,DictName label from s_dictionary where pid in (
            select ID from s_dictionary where pid = -1 and DictCode = 'SshyD' and IsDel = 0 and Status = 1) and IsDel = 0 and Status = 1 order by CAST(ListIndex AS SIGNED)
    </select>

    <select id="getCstIndustryTwo" resultType="java.util.Map">
        select ID value,DictCode code,DictName label from s_dictionary where pid = #{value} and IsDel = 0 and Status = 1 order by CAST(ListIndex AS SIGNED);
    </select>

    <select id="getProZsSales" resultType="java.util.Map">
        select ba.EmployeeName name,ba.ID id
        from b_account ba
        INNER JOIN s_jobsuserrel rel on ba.id = rel.AccountID and IsDel = 0
        INNER JOIN s_jobs jobs on rel.JobID = jobs.ID and jobs.isIdm = 0
        INNER JOIN s_commonjobs com on jobs.CommonJobID = com.ID and com.isIdm = 0
        INNER JOIN s_organization org on org.id = jobs.JobOrgID and org.IsDel = 0
        INNER JOIN b_project bp on bp.ID = org.ProjectID and bp.IsDel = 0
        where com.JobCode = #{jobCode} and bp.ID = #{projectId}
        <if test="userIds!=null and userIds.size()>0">
            and ba.id in (
            <foreach collection="userIds" separator="," item="item">
                #{item}
            </foreach>
            )
        </if>
        <if test="name !='' and name != null">
            and ba.EmployeeName  like '${name}%'
        </if>
    </select>
    <select id="getUserOrg" parameterType="java.util.Map" resultType="java.util.Map">
        select org.ID orgId,org.OrgName orgName
        from b_account ba
                 INNER JOIN s_jobsuserrel rel on rel.AccountID = ba.id
                 INNER JOIN s_jobs jobs on jobs.id = rel.JobID
                 INNER JOIN s_commonjobs com on com.id = jobs.CommonJobID
                 INNER JOIN s_organization org on org.id = jobs.JobOrgID
        where ProjectID = #{projectId}
          and com.JobCode = #{jobCode}
          and ba.id = #{userId} limit 1;
    </select>
    <select id="getComGUIDByProject" resultType="java.lang.String">
        select ComGUID from b_project where IsDel = 0 and ID = #{projectId}
    </select>
    <!--获取规则-->
    <select id="selectProjectRuleZs" parameterType="java.lang.String" resultType="cn.visolink.system.channel.model.ProjectRuleDetail">
        SELECT
            ProjectID projectID,
            ID id,
            TheNextVisitFollowupExpireDays theNextVisitFollowupExpireDays,
            SourceType sourceType,
            EditTime editTime,
            Editor editor,
            FollowupExpireDaysWarning followupExpireDaysWarning,
            ChannelReportMax channelReportMax,
            caseTaoGuestNumber,
            caseGuestNumberType,
            monthReportMax,
            projectPoolRetentionTime,
            regionPoolRetentionTime,
            referralConfirmationTime,
            createTime,
            creator,
            publicPoolType,
            clueIndDimension,
            ReportExpireDays reportExpireDays,
            VisitExpireDays visitExpireDays,
            maxFollowUp,
            VisitingWarning visitingWarning,
            ReportDaysWarning reportDaysWarning,
            maxVisit,
            ComeVisitExpireDays comeVisitExpireDays,
            ComeVisitingWarning comeVisitingWarning,
            maxComeVisit,
            referralExpireDays,
            referralWarning,
            ReferralFollowupExpireDaysWarning referralFollowupExpireDaysWarning,
            ReferralTheNextVisitFollowupExpireDays referralTheNextVisitFollowupExpireDays,
            referralMaxFollowUp,
            ReferralComeVisitExpireDays referralComeVisitExpireDays,
            ReferralComeVisitingWarning referralComeVisitingWarning,
            referralMaxComeVisit,
            ReferralVisitExpireDays referralVisitExpireDays,
            ReferralVisitingWarning referralVisitingWarning,
            referralMaxVisit,
            DirectReferralExpireDays directReferralExpireDays,
            DirectReferralVisitExpireDays directReferralVisitExpireDays,
            DirectReferralVisitingWarning directReferralVisitingWarning,
            DirectReferralMaxVisit directReferralMaxVisit,
            WqtReportExpireDays wqtReportExpireDays,
            WqtReportDaysWarning wqtReportDaysWarning,
            WqtFollowupExpireDaysWarning wqtFollowupExpireDaysWarning,
            WqtTheNextVisitFollowupExpireDays wqtTheNextVisitFollowupExpireDays,
            wqtMaxFollowUp,
            WqtComeVisitExpireDays wqtComeVisitExpireDays,
            WqtComeVisitingWarning wqtComeVisitingWarning,
            wqtMaxComeVisit,
            WqtVisitExpireDays wqtVisitExpireDays,
            WqtVisitingWarning wqtVisitingWarning,
            wqtMaxVisit,
            judge_no_region judgeNoRegion,
            judge_no_pool judgeNoPool,
            judge_stage judgeStage,
            wqt_judge_no_region wqtJudgeNoRegion,
            wqt_judge_no_pool wqtJudgeNoPool,
            wqt_judge_stage wqtJudgeStage,
            followup_confirmation_time followUpConfirmationTime,
            referral_judge_no_region referralJudgeNoRegion,
            referral_judge_no_pool referralJudgeNoPool,
            referral_judge_stage referralJudgeStage,
            obtaincst_confirmation_time obtainCstConfirmationTime,
            count_three_ones countThreeOnes,
            maxFollowUpDays,
            wqtMaxFollowUpDays,
            referralMaxFollowUpDays,
            assignPoolsExpireDays,
            assignExpireDays,
            allocation_customer_max allocationCustomerMax,
            enterprise_database_customer_protection_days enterpriseDatabaseCustomerProtectionDays,
            call_not_dial_customer_protect_days callNotDialCustomerProtectDays,
            call_not_conn_customer_protect_days callNotConnCustomerProtectDays,
            call_has_conn_customer_protect_days callHasConnCustomerProtectDays,
            checkInRange
        FROM
            b_project_rule
        WHERE
            ProjectID = #{projectId} and SourceType = #{sourceType} limit 1
    </select>
    <select id="getOpportunityById" parameterType="java.lang.String" resultType="java.util.Map">
        select * from b_project_opportunity where OpportunityClueId = #{opportunityClueId}
    </select>
    <insert id="addRelCustomerRecord" parameterType="java.util.Map">
        insert into b_customerdistributionrecords(ID,ProjectClueId,projectId,ProjectName,
                                                  ConfirmID,ConfirmTime,OldSalesName,OldSalesId,
                                                  SalesName,SalesId,OpportunityClueId,ApplyDatetime,
                                                  note,Type,OldProjectClueId,OldOpportunityClueId,main_project_id,main_project_name)
        values(uuid(),#{ProjectClueId},#{projectId},#{ProjectName},#{ConfirmID},#{ConfirmTime}
              ,#{OldSalesName},#{OldSalesId},#{SalesName},#{SalesId},#{OpportunityClueId}
              ,#{ApplyDatetime},#{note},#{Type},#{OldProjectClueId},#{OldOpportunityClueId},#{mainProjectId},#{mainProjectName})
    </insert>
    <!--获取原机会信息-->
    <select id="getOldOpportunityClueInfo"
            resultType="cn.visolink.system.channel.model.vo.ReferralVo">
        select CustomerType as customerType,CustomerName as customerName,SalesAttributionId as salesAttributionId,projectId, OpportunityClueId opportunityClueId, ProjectClueId projectClueId,CustomerLevel customerLevel,
            SalesFollowExpireWarningDate salesFollowExpireWarningDate,SalesFollowExpireDate salesFollowExpireDate from b_project_opportunity where OpportunityClueId = #{opportunityClueId}
    </select>

    <select id="getUserJobHsxt" resultType="java.lang.Integer">
        select count(1)
        from s_jobsuserrel rel
                 LEFT JOIN s_jobs job on job.id = rel.JobID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 LEFT JOIN s_organization org on org.id = job.JobOrgID
        where  rel.AccountID = #{userId} and com.JobCode = '10001'
    </select>

    <select id="getUserJobHsjt" resultType="java.lang.Integer">
        select count(1)
        from s_jobsuserrel rel
                 LEFT JOIN s_jobs job on job.id = rel.JobID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 LEFT JOIN s_organization org on org.id = job.JobOrgID
        where  rel.AccountID = #{userId} and org.ID in ('670869647114347', '-5759610777996603904')
    </select>

    <!--新增单条消息-->
    <insert id="insertOneMessage">
        insert into s_message
        (ID,Subject,Content,Sender,SendTime,MessageType,IsDel,Receiver,IsRead,OpportunityClueId,ProjectClueId,IsPush,IsNeedPush,ProjectID,Ext2,Ext3)
        values(UUID(),#{subject},#{content},#{sender},now(),#{messageType},#{isDel},#{receiver},#{isRead},#{opportunityClueId},#{projectClueId},#{isPush},#{isNeedPush},#{projectId},#{ext2},#{ext3})
    </insert>

    <update id="updateOppCst" parameterType="java.util.Map">
        update b_project_opportunity
        set
        SalesFollowExpireDate = #{salesFollowExpireDate},
        <if test="projectId!=null and projectId!=''">
            projectId = #{projectId},
        </if>
        <if test="projectName!=null and projectName!=''">
            ProjectName = #{projectName},
        </if>
        <if test="salesAttributionId!=null and salesAttributionId!=''">
            SalesAttributionId = #{salesAttributionId},
            SalesAttributionTeamId = #{salesAttributionTeamId},
            SalesAttributionTeamName = #{salesAttributionTeamName},
        </if>
        <if test="salesTheFirstFollowDate=='null'">
            SalesTheFirstFollowDate = null,
        </if>
        <if test="isThreeOnesDate == 'null'">
            IsThreeOnesDate = null,
        </if>
        <if test="wqtRefereeInfo == 'null'">
            wqt_referee_name = null,
            wqt_referee_mobile = null,
            wqt_referee_time = null,
            wqt_referee_id = null,
        </if>
        <if test="salesAttributionName!=null and salesAttributionName!=''">
            SalesAttributionName = #{salesAttributionName},
        </if>
        <if test="isEffective!=null and isEffective!=''">
            IsEffective = #{isEffective},
        </if>
        <if test="ClueStatus!=null and ClueStatus!=''">
            ClueStatus = #{ClueStatus},
        </if>
        <if test="ReportCreateTime!=null and ReportCreateTime!=''">
            ReportCreateTime = now(),
        </if>
        <if test="CustomerLevel!=null and CustomerLevel!=''">
            CustomerLevel =#{CustomerLevel},
        </if>
        CatchTime = now(),
        SalesFollowExpireWarningDate = #{salesFollowExpireWarningDate}
        where OpportunityClueId = #{OpportunityClueId};
        update b_project_clues set ClueStatus = #{ClueStatus}
        where ProjectClueId = #{ProjectClueId};
        update b_cust_referral set status = 6,endTime = now() where status = 1 and OpportunityClueId = #{OpportunityClueId};
    </update>

    <insert id="addDataViewPremission">
        insert into s_user_org_rel
        ( id,project_id,project_name,
          user_id,user_name,org_id,org_name,
          job_code,job_name,
         <if test="startTime != '' and startTime != null">start_time,</if>
         <if test="endTime != '' and endTime != null">end_time,</if>
         is_no_time,is_name_show,
          is_mobile_show,approve_status,
          creator,create_time,isdel,status,process_id,apply_reason)
        values (#{id},#{projectId},#{projectName},
                #{userId},#{userName},#{orgId},#{orgName},
                #{jobCode},#{jobName},
                <if test="startTime != '' and startTime != null">#{startTime},</if>
                <if test="endTime != '' and endTime != null">#{endTime},</if>
                #{isNoTime},#{isNameShow},
                #{isMobileShow},1,#{userId},#{createTime},0,1,#{processId},#{applyReason})
    </insert>
    <insert id="addDataViewPremissionRecord">
        insert into s_user_org_record
        ( id,project_id,project_name,
        user_id,user_name,org_id,org_name,
        job_code,job_name,
        <if test="startTime != '' and startTime != null">start_time,</if>
        <if test="endTime != '' and endTime != null">end_time,</if>
        is_no_time,is_name_show,
        is_mobile_show,approve_status,
        creator,create_time,isdel,status,process_id,apply_reason)
        values (#{id},#{projectId},#{projectName}
        ,#{userId},#{userName},#{orgId},#{orgName}
        ,#{jobCode},#{jobName},
        <if test="startTime != '' and startTime != null">#{startTime},</if>
        <if test="endTime != '' and endTime != null">#{endTime},</if>
        #{isNoTime},#{isNameShow}
        ,#{isMobileShow},1,#{userId},#{createTime},0,1,#{processId},#{applyReason})
    </insert>

    <insert id="addAdminDataViewPremission">
        insert into s_user_org_rel
        ( id,project_id,project_name,
        user_id,user_name,org_id,org_name,
        job_code,job_name,
        <if test="startTime != '' and startTime != null">start_time,</if>
        <if test="endTime != '' and endTime != null">end_time,</if>
        is_no_time,is_name_show,
        is_mobile_show,approve_status,
        creator,create_time,isdel,status,process_id,apply_reason)
        values (#{id},#{projectId},#{projectName},
        #{userId},#{userName},#{orgId},#{orgName},
        #{jobCode},#{jobName},
        <if test="startTime != '' and startTime != null">#{startTime},</if>
        <if test="endTime != '' and endTime != null">#{endTime},</if>
        #{isNoTime},#{isNameShow},
        #{isMobileShow},2,#{userId},NOW(),0,1,#{processId},#{applyReason})
    </insert>

    <select id="getDataViewPremissionList"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select
            rel.id id,project_id projectId,project_name projectName,
            user_id userId,user_name userName,org_id orgId,org_name orgName,
            job_code jobCode,job_name jobName,start_time startTime,
            end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
            is_mobile_show isMobileShow,(case approve_status when 1 then '审批中' when 2 then '审批通过' when 4 then '审批驳回' else '草稿' end) approveStatus,approve_time approveTime,
            rel.creator,create_time creatTime,updator,
            update_time updateTime,rel.isdel,rel.status,process_id processId,
            approve_desc approveDesc,ba.Mobile userMobile,rel.reject_reason rejectReason,apply_reason applyReason
        from s_user_org_record rel left join b_account ba on rel.user_id = ba.ID
        where rel.isdel = 0
        <if test="projectIdList != null and projectIdList.size() > 0">
            AND rel.project_id IN (
            <foreach collection="projectIdList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="search != null and search != ''">
            AND (ba.EmployeeName LIKE '%${search}%' or ba.Mobile LIKE '%${search}%')
        </if>
        <if test="type == 0">
            and rel.user_id = #{userId}
        </if>
        order by rel.create_time desc
    </select>

    <select id="getDataViewPremissionDetail"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select
            id id,project_id projectId,project_name projectName,
            user_id userId,user_name userName,org_id orgId,org_name orgName,
            job_code jobCode,job_name jobName,start_time startTime,
            end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
            is_mobile_show isMobileShow,approve_status approveStatus,approve_time approveTime,
            creator,create_time creatTime,updator,
            update_time updateTime,isdel,status,process_id processId,
            approve_desc approveDesc,apply_reason applyReason
        from s_user_org_record
        where isdel = 0 and id = #{id}
    </select>

    <select id="getDataViewPremissionApprove"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select id id,project_id projectId,project_name projectName,
               user_id userId,user_name userName,org_id orgId,org_name orgName,
               job_code jobCode,job_name jobName,start_time startTime,
               end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
               is_mobile_show isMobileShow,approve_status approveStatus,approve_time approveTime,
               creator,create_time creatTime,updator,
               update_time updateTime,isdel,status,process_id processId,
               approve_desc approveDesc,apply_reason applyReason
        from s_user_org_rel
        where isdel = 0
          and status = 1
          and user_id = #{userId}
          and project_id = #{projectId}
--           and approve_status in (1,2)
--           and (if(is_no_time = 0,  DATE_FORMAT(NOW(), '%Y-%m-%d') between start_time and end_time, true))
        order by create_time desc
    </select>

    <select id="getAdminDataViewPremissionApprove"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select id id,project_id projectId,project_name projectName,
               user_id userId,user_name userName,org_id orgId,org_name orgName,
               job_code jobCode,job_name jobName,start_time startTime,
               end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
               is_mobile_show isMobileShow,approve_status approveStatus,approve_time approveTime,
               creator,create_time creatTime,updator,
               update_time updateTime,isdel,status,process_id processId,
               approve_desc approveDesc,apply_reason applyReason
        from s_user_org_rel
        where user_id = #{userId}
        and isdel = 0
        and status = 1
        and approve_status = 2
        and (if(is_no_time = 0,  DATE_FORMAT(NOW(), '%Y-%m-%d') between start_time and end_time, true))
          <if test="projectId != '' and projectId != null">
            and project_id = #{projectId}
          </if>
        <if test="proList !=null and proList.size() > 0">
            and project_id IN
            <foreach collection="proList" item="item" separator="," open="(" close=")">
                 #{item}
            </foreach>
        </if>
        order by create_time desc
    </select>

    <select id="getDataViewPremissionApproveStatus"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select id id,project_id projectId,project_name projectName,
               user_id userId,user_name userName,org_id orgId,org_name orgName,
               job_code jobCode,job_name jobName,start_time startTime,
               end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
               is_mobile_show isMobileShow,approve_status approveStatus,approve_time approveTime,
               creator,create_time creatTime,updator,
               update_time updateTime,isdel,status,process_id processId,
               approve_desc approveDesc,apply_reason applyReason
        from s_user_org_rel
        where isdel = 0
          and status = 1
          and user_id = #{userId}
          and approve_status = 2
          and (if(is_no_time = 0,  DATE_FORMAT(NOW(), '%Y-%m-%d') between start_time and end_time, true))
          limit  1
    </select>

    <select id="getDataViewPremissionNoOrg" resultType="java.util.Map">
        select org.id orgId, org.OrgName, org.ProjectID projectId, com.JobCode jobCode, job.JobName
        from s_jobsuserrel rel
                 LEFT JOIN s_jobs job on job.id = rel.JobID
                 LEFT JOIN s_organization org on org.id = job.JobOrgID
                 left join s_commonjobs com on job.CommonJobID = com.ID
        where OrgName is not null
          and rel.AccountID = #{userId}
          AND com.JobCode IN ('zygw','qyzygw','xsjl', 'qyxsjl', 'zszj', 'qyzszj', 'yxjl', 'qyyxjl')
    </select>

    <select id="getDataViewPremissionOrg" resultType="java.util.Map">
        select org.id orgId, org.OrgName, org.ProjectID projectId, com.JobCode jobCode, job.JobName,ComGUID areaId,AreaName areaName
        from s_jobsuserrel rel
                 LEFT JOIN s_jobs job on job.id = rel.JobID
                 LEFT JOIN s_organization org on org.id = job.JobOrgID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join b_project bp on bp.ID = org.ProjectID
        where OrgName is not null
          and rel.AccountID = #{userId}
          AND com.JobCode IN ('xsjl', 'qyxsjl', 'zszj', 'qyzszj', 'yxjl')
        union
        select org.id orgId, org.OrgName, org.ProjectID projectId, com.JobCode jobCode, job.JobName,ComGUID areaId,AreaName areaName
        from s_jobsuserrel rel
                 LEFT JOIN s_jobs job on job.id = rel.JobID
                 LEFT JOIN s_organization org on org.id = job.JobOrgID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join b_project bp on bp.ComGUID = org.ID
        where OrgName is not null
          and rel.AccountID = #{userId}
          AND com.JobCode IN ('qyyxjl')
    </select>
    <select id="getDataViewPremissionOrgTeam" resultType="java.util.Map">
        select s.ID orgId,concat(bp.ProjectName,'-',s.OrgName) orgName,bp.ID projectId,bp.ProjectName projectName
        from (
        select * from s_organization where false
        <if test="orgList != null and orgList.size() > 0">
            union
            select *
            from s_organization
            where ID in (
            <foreach collection="orgList" separator="," item="item">
                #{item}
            </foreach>
            )
            and OrgCategory = 8
        </if>
        <if test="proList != null and proList.size() > 0">
            union
            select *
            from s_organization
            where ProjectID in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            )
            and OrgCategory = 8
        </if>
        ) s
        left join b_project bp on s.ProjectID = bp.ID
        where s.IsDel = 0 and s.Status = 1 and bp.isSyn = 1 and bp.IsDel = 0
    </select>

    <update id="updateDateViewPremissionStatus">
        update s_user_org_rel set isdel = 1,status = 0
        where id in <foreach collection="uf" index="index" item="item" open="("
                             separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <update id="updateAdminDateViewPremissionStatus">
        update s_user_org_rel set isdel = 1,status = 0
        where user_id = #{userId}
    </update>

    <update id="updateDataViewPremission">
        update s_user_org_rel
        <set>
            <if test="processId != null">
                process_id = #{processId},
            </if>
            apply_reason = #{applyReason},
            isdel = 0,status = 1,update_time = NOW()
        </set>
        where id = #{id}
    </update>

    <update id="updateAdminDataViewPremission">
        update s_user_org_rel
        <set>
            <if test="projectId != null and projectId != ''">
                project_id = #{projectId},
            </if>
            <if test="projectName != null and projectName != ''">
                project_name = #{projectName},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="orgId != null and orgId != ''">
                org_id = #{orgId},
            </if>
            <if test="orgName != null and orgName != ''">
                org_name = #{orgName},
            </if>
            <if test="jobCode != null and jobCode != ''">
                job_code = #{jobCode},
            </if>
            <if test="jobName != null and jobName != ''">
                job_name = #{jobName},
            </if>
            <if test="startTime != null and startTime != ''">
                start_time = #{startTime},
            </if>
            <if test="endTime != null and endTime != ''">
                end_time = #{endTime},
            </if>
            <if test="isNoTime != null">
                is_no_time = #{isNoTime},
            </if>
            <if test="isNameShow != null">
                is_name_show = #{isNameShow},
            </if>
            <if test="isMobileShow != null">
                is_mobile_show = #{isMobileShow},
            </if>
            <if test="applyReason != null and applyReason != ''">
                apply_reason = #{applyReason},
            </if>
            <if test="updator != null and updator != ''">
                updator = #{userId},
            </if>
            process_id = null,isdel = 0,status = 1,approve_status = 2,update_time = NOW()
        </set>
        where id = #{id}
    </update>


    <select id="getComProList" resultType="java.lang.String">
        select ID from b_project where ComGUID = #{comGUID} and isSyn = 1
    </select>

    <insert id="insertLogs" parameterType="cn.visolink.message.model.SysLog">
        insert into s_timetaslogs(ID, TaskName, StartTime, ExecutTime, ResultStatus, Note)
        values (UUID(), #{TaskName}, #{StartTime}, #{ExecutTime}, #{ResultStatus}, #{Note})
    </insert>

    <select id="getUserOAInfo" resultType="java.util.Map">
        select job.depID as senderOrg, job.standardPostId as senderPost
        from b_account_temp ba
                 left join t_jobs_te job on ba.personMainPostID = job.postID
                 LEFT JOIN s_organization org on job.depID = org.id
        where 1 = 1
          and ba.TID = #{userId}
            limit 0,1
    </select>

    <select id="getProComId" parameterType="java.lang.String" resultType="java.lang.String">
        select ComGUID from b_project where id = #{projectId}
    </select>

    <select id="getUserMobile" parameterType="java.lang.String" resultType="java.lang.String">
        select Mobile from b_account where id = #{userId};
    </select>

    <select id="getCusRelateList" resultType="java.util.Map">
        select id,
        relate_customer_name customerName,
        relate_customer_mobile customerMobile,
        concat(left(relate_customer_name,1),'**') reCustomerName,
        concat(left(relate_customer_mobile,3),'****',right (relate_customer_mobile,4)) reCustomerMobile,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') createTime
        from b_cust_relationship where isdel = 0
        <if test="projectClueId != '' and projectClueId != null">
            and ProjectClueId = #{projectClueId}
        </if>
        <if test="opportunityClueId !='' and opportunityClueId != null">
            and OpportunityClueId = #{opportunityClueId}
        </if>
    </select>

    <select id="getFollowUpRecordCount" resultType="java.lang.Integer">
        select count(1)
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        where 1 = 1 and fol.FollowUpWay in (1, 2, 3, 4, 5) and ifnull(fol.DataSource,'')!='clue'
        <if test="projectList != null and projectList.size() > 0">
            AND fol.ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
            AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
        </if>
        <if test="approvalStartTime != null and approvalStartTime != '' and approvalEndTime != null and approvalEndTime != ''">
            AND fol.ApprovalTime BETWEEN #{approvalEndTime} AND #{approvalEndTime}
        </if>
        <if test="followUpWay != null and followUpWay != ''">
            and fol.FollowUpWay = #{followUpWay}
        </if>
        <if test="status != null and status != ''">
            and fol.Status = #{status}
        </if>
        <if test="verificationStatusList !=null and verificationStatusList.size() > 0">
            and fol.verification_status in
            <foreach collection="verificationStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
            and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
        </if>
        <if test="userName != null and userName != ''">
            and ba1.EmployeeName = #{userName}
        </if>
        <if test="approveUser != null and approveUser != ''">
            and ba2.EmployeeName = #{approveUser}
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            and opp.SourceMode = #{sourceMode}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
              separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getFollowUpRecordCountClue" resultType="java.lang.Integer">
        select count(1)
        from b_followup_record fol
        left join b_project_clues opp on fol.ProjectClueId = opp.ProjectClueId
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        where 1 = 1 and fol.FollowUpWay in (1, 2, 5) and ifnull(fol.DataSource,'')='clue'
        <if test="projectList != null and projectList.size() > 0">
            AND fol.ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
            AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
        </if>
        <if test="approvalStartTime != null and approvalStartTime != '' and approvalEndTime != null and approvalEndTime != ''">
            AND fol.ApprovalTime BETWEEN #{approvalEndTime} AND #{approvalEndTime}
        </if>
        <if test="followUpWay != null and followUpWay != ''">
            and fol.FollowUpWay = #{followUpWay}
        </if>
        <if test="status != null and status != ''">
            and fol.Status = #{status}
        </if>
        <if test="verificationStatusList !=null and verificationStatusList.size() > 0">
            and fol.verification_status in
            <foreach collection="verificationStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
            and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
        </if>
        <if test="userName != null and userName != ''">
            and ba1.EmployeeName = #{userName}
        </if>
        <if test="approveUser != null and approveUser != ''">
            and ba2.EmployeeName = #{approveUser}
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            and opp.SourceMode = #{sourceMode}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getFollowUpRecordList" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowRecordId                                                 followRecordId,
        fol.FollowUpWay                                                           followUpWay,
        fol.FollowUpWayDesc                                                       followUpWayDesc,
        bp.AreaName                                                               areaName,
        bp.ID                                                                     projectId,
        bp.ProjectName                                                            projectName,
        if(fol.FollowUpWay in (3,4),bp2.ProjectName,'')                           childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                          reCustomerName,
        if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name)                                   customerName,
        opp.CustomerMobile                                                        reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****', right(opp.CustomerMobile, 4)) customerMobile,
        opp.CustomerAddress                                                       customerAddress,
        bin.DetailedAddress                                                       detailedAddress,
        opp.Contacts                                                              contacts,
        ba1.EmployeeName       userName,
        fol.FollowUpDate                                                          followUpDate,
        fol.FollowUpDetail                                                        followUpDetail,
        fol.NextFollowUpDate                                                      nextFollowUpDate,
        fol.NextFollowUpDetail                                                    nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                     isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                   isThreeOnesStatusDesc,
        opp.SourceMode                                                            sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1,2))                                                    enclosures,
--         (select GROUP_CONCAT(enclosureUrl)
--         from b_enclosure
--         where FollowRecordId = fol.FollowRecordId
--         and followType = 2)                                                    threeOnesUrls,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                    drawingQuotationUrls,
        fol.Status                                                             status,
        fol.main_approval_user                                                 mainApprovalUser,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        (case fol.verification_status when 0 then '未核验' when 1 then '已核验 合格' when 2 then '已核验 不合格' else '' end) verificationStatus,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end),''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_opportunity opp
        where opp.OpportunityClueId = fol.OpportunityClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),''))                                            approveUser,
        fol.ApprovalTime                                                          approvalTime,
        fol.RejectReason rejectReason,
        fol.projectClueId projectClueId,
        fol.opportunityClueId opportunityClueId
        from b_followup_record fol
        left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
        left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        where 1 = 1 and fol.FollowUpWay in (1, 2, 3, 4, 5) and ifnull(fol.DataSource,'')!='clue'
            <if test="projectList != null and projectList.size() > 0">
                AND fol.ProjectId IN (
                <foreach collection="projectList" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="customerName != null and customerName != ''">
                AND opp.CustomerName = #{customerName}
            </if>
            <if test="customerMobile != null and customerMobile != ''">
                AND opp.CustomerMobile = #{customerMobile}
            </if>
            <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
                AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
            </if>
            <if test="approvalStartTime != null and approvalStartTime != '' and approvalEndTime != null and approvalEndTime != ''">
                AND fol.ApprovalTime BETWEEN #{approvalStartTime} AND #{approvalEndTime}
            </if>
            <if test="followUpWay != null and followUpWay != ''">
                and fol.FollowUpWay = #{followUpWay}
            </if>
            <if test="status != null and status != ''">
                and fol.Status = #{status}
            </if>
            <if test="verificationStatusList !=null and verificationStatusList.size() > 0">
                and fol.verification_status in
                    <foreach collection="verificationStatusList" index="index" item="item" open="("
                                                        separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
                and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
            </if>
            <if test="userName != null and userName != ''">
                and ba1.EmployeeName = #{userName}
            </if>
            <if test="approveUser != null and approveUser != ''">
                and ba2.EmployeeName = #{approveUser}
            </if>
            <if test="sourceMode != null and sourceMode != ''">
                and opp.SourceMode = #{sourceMode}
            </if>
            <if test="orgIds!=null and orgIds.size() > 0">
                and opp.SalesAttributionTeamId not in
                <foreach collection="orgIds" index="index" item="item" open="("
                  separator="," close=")">
                    #{item}
                </foreach>
            </if>
        order by fol.FollowUpDate desc
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>

    <select id="getFollowUpRecordListClue" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowRecordId                                                 followRecordId,
        fol.FollowUpWay                                                           followUpWay,
        fol.FollowUpWayDesc                                                       followUpWayDesc,
        bp.AreaName                                                               areaName,
        bp.ID                                                                     projectId,
        bp.ProjectName                                                            projectName,
        if(fol.FollowUpWay in (3,4),bp2.ProjectName,'')                           childProjectName,
        (case fol.FollowUpWay when 2 then fol.CustomerAddress when 3 then bp2.ProjectName when 4 then bp2.ProjectName else '' end) followUpAddress,
        opp.CustomerName                                                          reCustomerName,
        if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,concat(left(opp.CustomerName,1),'**'),opp.diy_hide_customer_name)                                   customerName,
        opp.CustomerMobile                                                        reCustomerMobile,
        concat(left(opp.CustomerMobile, 3), '****', right(opp.CustomerMobile, 4)) customerMobile,
        opp.CustomerAddress                                                       customerAddress,
        bin.DetailedAddress                                                       detailedAddress,
        opp.Contacts                                                              contacts,
        ba1.EmployeeName       userName,
        fol.FollowUpDate                                                          followUpDate,
        fol.FollowUpDetail                                                        followUpDetail,
        fol.NextFollowUpDate                                                      nextFollowUpDate,
        fol.NextFollowUpDetail                                                    nextFollowUpDetail,
        fol.IsThreeOnesStatus                                                     isThreeOnesStatus,
        if(fol.IsThreeOnesStatus = 1 ,'是','否')                                   isThreeOnesStatusDesc,
        opp.SourceMode                                                            sourceMode,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType in (1,2))                                                    enclosures,
        --         (select GROUP_CONCAT(enclosureUrl)
        --         from b_enclosure
        --         where FollowRecordId = fol.FollowRecordId
        --         and followType = 2)                                                    threeOnesUrls,
        (select GROUP_CONCAT(enclosureUrl)
        from b_enclosure
        where FollowRecordId = fol.FollowRecordId
        and followType = 3)                                                    drawingQuotationUrls,
        fol.Status                                                             status,
        fol.main_approval_user                                                 mainApprovalUser,
        (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
        (case fol.verification_status when 0 then '未核验' when 1 then '已核验 合格' when 2 then '已核验 不合格' else '' end) verificationStatus,
        concat(ifnull((case
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('qyxsjl')
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        else '' end)
        when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('zszj')
        and org.ProjectID = fol.ProjectId)
        when 2 then concat(ba3.EmployeeName, '(审核通过)')
        when 3 then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('xsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('qyxsjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7) then (case fol.Status
        when 1
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('zszj')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId)
        when 2
        then concat(ba2.EmployeeName, '(审核通过)')
        when 3
        then concat(ba2.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then concat(ba2.EmployeeName, '(审核通过)')
        else '' end)
        else '' end),''), ' ', ifnull((case
        when FollowUpWay in (3, 4) and FollowUpUserRole = 1 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.MainFollowProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole = 2 then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        when FollowUpWay in (3, 4) and FollowUpUserRole in (5, 6, 7)
        then (case fol.Status
        when 1
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        when 2
        then concat(ba3.EmployeeName, '(审核通过)')
        when 3
        then concat(ba3.EmployeeName, '(审核驳回)')
        when 4
        then (select group_concat(distinct concat(ba.EmployeeName, '(待审核)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and com.JobCode in ('yxjl')
        and ba.Status = 1
        and org.ProjectID = fol.ProjectId
        and org.id =
        (select SalesAttributionTeamId
        from b_project_clues opp
        where opp.ProjectClueId = fol.ProjectClueId))
        when 5
        then (select group_concat(DISTINCT concat(ba.EmployeeName, '(审核中)'))
        from s_jobsuserrel rel
        left join s_jobs job on rel.JobID = job.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join s_organization org on job.JobOrgID = org.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
        and job.IsDel = 0
        and ba.Status = 1
        and com.JobCode in ('yxjl', 'zszj')
        and org.ProjectID = fol.childProjectId)
        else '' end)
        else '' end),''))                                            approveUser,
        fol.ApprovalTime                                                          approvalTime,
        fol.RejectReason rejectReason,
        fol.projectClueId projectClueId,
        fol.opportunityClueId opportunityClueId
        from b_followup_record fol
        left join b_project_clues opp on fol.ProjectClueId = opp.ProjectClueId
        left join b_information bin on bin.ProjectClueId = opp.ProjectClueId
        left join b_project bp on fol.ProjectId = bp.ID
        left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
        left join b_account ba1 on fol.UserId = ba1.ID
        left join b_account ba2 on fol.ApprovalUser = ba2.ID
        left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
        where 1 = 1 and fol.FollowUpWay in (1, 2, 5) and ifnull(fol.DataSource,'')='clue'
        <if test="projectList != null and projectList.size() > 0">
            AND fol.ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
            AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
        </if>
        <if test="approvalStartTime != null and approvalStartTime != '' and approvalEndTime != null and approvalEndTime != ''">
            AND fol.ApprovalTime BETWEEN #{approvalStartTime} AND #{approvalEndTime}
        </if>
        <if test="followUpWay != null and followUpWay != ''">
            and fol.FollowUpWay = #{followUpWay}
        </if>
        <if test="status != null and status != ''">
            and fol.Status = #{status}
        </if>
        <if test="verificationStatusList !=null and verificationStatusList.size() > 0">
            and fol.verification_status in
            <foreach collection="verificationStatusList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
            and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
        </if>
        <if test="userName != null and userName != ''">
            and ba1.EmployeeName = #{userName}
        </if>
        <if test="approveUser != null and approveUser != ''">
            and ba2.EmployeeName = #{approveUser}
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            and opp.SourceMode = #{sourceMode}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by fol.FollowUpDate desc
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>

    <select id="getCommonDict" resultType="java.util.Map">
        select DictCode text,DictName value from s_dictionary where pid = (select id from s_dictionary where DictCode =#{parentCode})
    </select>

    <select id="getAllDataViewPremissionInfo"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        SELECT  id id,project_id projectId,project_name projectName,
                user_id userId,user_name userName,org_id orgId,org_name orgName,
                job_code jobCode,job_name jobName,start_time startTime,
                end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
                is_mobile_show isMobileShow,apply_reason applyReason
        FROM s_user_org_rel
        WHERE (project_id, user_id, create_time) IN (
            SELECT project_id, user_id, max(create_time)
            FROM s_user_org_rel
            where isdel = 0 and status = 1 and approve_status = 2 and user_id = #{userId}
              and (IF(is_no_time = 0, DATE_FORMAT(NOW(), '%Y-%m-%d') between start_time and end_time, true))
            GROUP BY project_id, user_id
        )
        ORDER BY create_time desc
    </select>

    <select id="getRelaCustomerMainId" resultType="java.lang.String">
        select OpportunityClueId from b_cust_relationship
                                 where isdel = 0
        <if test="type == 0">
            and (relate_customer_name = #{customerName} or relate_customer_mobile = #{customerMobile})
        </if>
        <if test="type != 0">
            and (relate_customer_name like concat('%',#{customerName},'%') or relate_customer_mobile = #{customerMobile})
        </if>
    </select>

    <select id="getAllocationAllCustomerUserOrgInfo" resultType="java.util.Map">
        select distinct if(com.JobCode in('qyfz','qyyxjl'), org.ID, bp.AreaID) areaId,
                        bp.ID projectId,
                        com.JobCode jobCode
        from s_jobs job
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join s_jobsuserrel rel on job.ID = rel.JobID
                 left join s_organization org on job.JobOrgID = org.ID
                 left join b_project bp on org.ProjectID = bp.ID
                 left join s_jobsmenurel jm on job.ID = jm.JobID
                 left join s_commonjobsmenurel cjm on com.ID = cjm.JobID
                 left join s_menus men on jm.MenuID = men.ID
                 left join s_menus men2 on cjm.MenuID = men2.ID
        where job.IsDel = 0
          and job.Status = 1
          and com.IsDel = 0
          and org.IsDel = 0
          and org.Status = 1
          and (men.MenuSysName = 'allocation_all_customer' or men2.MenuSysName = 'allocation_all_customer')
          and com.JobCode in ('zszj', 'qyzszj', 'yxjl', 'qyyxjl', 'qyfz', '10001')
          and rel.AccountID = #{userId}
    </select>

    <select id="getAllocationAllCustomerUserOrgInfoCall" resultType="java.util.Map">
        select distinct if(com.JobCode = 'qyfz', org.ID, bp.AreaID) areaId,
                        bp.ID projectId,
                        com.JobCode jobCode
        from s_jobs job
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join s_jobsuserrel rel on job.ID = rel.JobID
                 left join s_organization org on job.JobOrgID = org.ID
                 left join b_project bp on org.ProjectID = bp.ID
                 left join s_jobsmenurel jm on job.ID = jm.JobID
                 left join s_commonjobsmenurel cjm on com.ID = cjm.JobID
                 left join s_menus men on jm.MenuID = men.ID
                 left join s_menus men2 on cjm.MenuID = men2.ID
        where job.IsDel = 0
          and job.Status = 1
          and com.IsDel = 0
          and org.IsDel = 0
          and org.Status = 1
          and com.JobCode in ('zszj', 'qyzszj', 'qyfz', '10001')
          and rel.AccountID = #{userId}
    </select>

    <select id="getProList" parameterType="java.lang.String" resultType="java.lang.String">
        select ID from b_project where ComGUID = #{comGUID} and isRegion = 1
    </select>

    <select id="getProListAll" parameterType="java.lang.String" resultType="java.lang.String">
        select ID from b_project where ComGUID = #{comGUID} and isSyn = 1
    </select>

    <select id="getProListD" parameterType="java.lang.String" resultType="java.lang.String">
        select ID from b_project where ComGUID = #{comGUID} and isSyn = 1 and isRegion = 0
    </select>

    <select id="getGlAllocationPropertyConsultantZygw" resultType="java.util.Map">
        select bp.AreaID       areaId,
               bp.AreaName     areaName,
               bp.ID           projectId,
               bp.ProjectName  projectName,
               org.ID          teamId,
               org.OrgName     teamName,
               ba.ID           userId,
               ba.UserName     userName,
               ba.EmployeeName employeeName,
               job.JobName     jobName,
               com.JobCode     jobCode
        from s_jobs job
                 left join s_jobsuserrel rel on job.ID = rel.JobID
                 left join s_organization org on job.JobOrgID = org.ID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join b_project bp on org.ProjectID = bp.ID
                 left join b_account ba on ba.ID = rel.AccountID
        where job.IsDel = 0
          and job.Status = 1
          and org.IsDel = 0
          and org.Status = 1
          and rel.is_post = 0
          and bp.AreaID is not null
          and bp.ID is not null
          and org.ID is not null
          and ba.ID is not null
          <if test="isManager != null and isManager != '' and '1'.toString() == isManager">
              and com.JobCode in ('zygw', 'qyzygw')
          </if>
          <if test="isManager != null and isManager != '' and '0'.toString() == isManager">
              and (1 != 1
              <if test="proList != null and proList.size()>0">
                  or (bp.ID in
                  <foreach collection="proList" index="index" item="item" open="("
                           separator="," close=")">
                      #{item}
                  </foreach>
                  and com.JobCode = 'zygw'
                  )
              </if>
              <if test="qyProList != null and qyProList.size()>0">
                  or (bp.ID in
                  <foreach collection="qyProList" index="index" item="item" open="("
                           separator="," close=")">
                      #{item}
                  </foreach>
                  and com.JobCode = 'qyzygw'
                  )
              </if>
              )
              <if test="orgIds!=null and orgIds.size() > 0">
                  and org.ID not in
                  <foreach collection="orgIds" index="index" item="item" open="("
                           separator="," close=")">
                      #{item}
                  </foreach>
              </if>
          </if>
          <if test="searchName != '' and searchName != null">
              and (ba.EmployeeName like concat('%',#{searchName},'%') or ba.UserName like concat('%',#{searchName},'%'))
          </if>
        order by bp.ID
    </select>
    <select id="getGlAllocationPropertyConsultantZygwCall" resultType="java.util.Map">
        select bp.AreaID       areaId,
        bp.AreaName     areaName,
        bp.ID           projectId,
        bp.ProjectName  projectName,
        org.ID          teamId,
        org.OrgName     teamName,
        ba.ID           userId,
        ba.UserName     userName,
        ba.EmployeeName employeeName,
        job.JobName     jobName,
        com.JobCode     jobCode,
        job.CommonJobID did,
        job.JobOrgID    sid,
        ba.ID           uid
        from s_jobs job
        left join s_jobsuserrel rel on job.ID = rel.JobID
        left join s_organization org on job.JobOrgID = org.ID
        left join s_commonjobs com on job.CommonJobID = com.ID
        left join b_project bp on org.ProjectID = bp.ID
        left join b_account ba on ba.ID = rel.AccountID
        where job.IsDel = 0
        and job.Status = 1
        and org.IsDel = 0
        and org.Status = 1
        and rel.is_post = 0
        and bp.AreaID is not null
        and bp.ID is not null
        and org.ID is not null
        and ba.ID is not null
        <if test="isManager != null and isManager != '' and '1'.toString() == isManager">
            and com.JobCode in ('zygw', 'qyzygw')
        </if>
        <if test="isManager != null and isManager != '' and '0'.toString() == isManager">
            and (1 != 1
            <if test="proList != null and proList.size()>0">
                or (bp.ID in
                <foreach collection="proList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                and com.JobCode = 'zygw'
                )
            </if>
            <if test="qyProList != null and qyProList.size()>0">
                or (bp.ID in
                <foreach collection="qyProList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
                and com.JobCode = 'qyzygw'
                )
            </if>
            )
        </if>
        <if test="searchName != '' and searchName != null">
            and (ba.EmployeeName like concat('%',#{searchName},'%') or ba.UserName like concat('%',#{searchName},'%'))
        </if>
        order by bp.ID
    </select>

    <select id="getTranslateProIds" resultType="java.lang.String">
        select trans_project_id proIds
        from b_project_translate
        where now() between start_time and end_time
          and status = 1
          and find_in_set(#{projectId}, trans_project_id)
    </select>

    <select id="getCstIsOkReferral" parameterType="java.util.Map" resultType="java.util.Map">
        select 'pro' type,count(1) count,SalesAttributionName name from b_project_opportunity
        where projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and SalesAttributionId is not null and ClueStatus &lt;9
        and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and OpportunityClueId != #{opportunityClueId}
        </if>
        <if test="judgeNoPool != null and judgeNoPool !='' and '0'.toString() == judgeNoPool">
            union all
            select PoolType type,count(1) count,'' name from b_customerpublicpool
            where projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and PoolType = 1 and is_del = 0
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="judgeNoRegion != null and judgeNoRegion !='' and '0'.toString() == judgeNoRegion">
            union all
            select 'region' type,count(1) count,SalesAttributionName name from b_project_opportunity
            where projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and SalesAttributionId is not null and ClueStatus &lt;9
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and OpportunityClueId != #{opportunityClueId}
            </if>
            union all
            select 'regionRelate' type,count(1) count,'' name from b_cust_relationship rela left join b_project_opportunity opp on rela.OpportunityClueId = opp.OpportunityClueId
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and rela.isdel = 0
            and (rela.relate_customer_name = #{customerName} or rela.relate_customer_mobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <!--<if test="oldProjectId != null and oldProjectId != ''">
            and #{oldProjectId} != (select ID from b_project where ComGUID = (select ComGUID from b_project where ID = #{projectId}) and isSyn = 1 and isRegion = 1)
        </if>-->
        union all
        select 'proRelate' type,count(1) count,'' name from b_cust_relationship rela left join b_project_opportunity opp on rela.OpportunityClueId = opp.OpportunityClueId
        where opp.projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and rela.isdel = 0
        and (rela.relate_customer_name = #{customerName} or rela.relate_customer_mobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and opp.OpportunityClueId != #{opportunityClueId}
        </if>
    </select>

    <select id="getCstIsOkComeVisit" parameterType="java.util.Map" resultType="java.util.Map">
        select 'pro' type,count(1) count,SalesAttributionName name from b_project_opportunity opp
        left join b_followup_record fol on opp.OpportunityClueId = fol.OpportunityClueId
        where opp.projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and SalesAttributionId is not null and opp.ClueStatus in (2,8)
        and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and opp.OpportunityClueId != #{opportunityClueId}
        </if>
        union all
        select 'proRelate' type,count(1) count,'' name from b_cust_relationship rel
        left join b_project_opportunity opp on rel.OpportunityClueId = opp.OpportunityClueId
        left join b_followup_record fol on rel.OpportunityClueId = fol.OpportunityClueId
        where opp.projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and rel.isdel = 0 and opp.ClueStatus in (2,8)
        and (relate_customer_name = #{customerName} or relate_customer_mobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and opp.OpportunityClueId != #{opportunityClueId}
        </if>
        <if test="judgeNoRegion != null and judgeNoRegion !='' and '0'.toString() == judgeNoRegion">
            union all
            select 'region' type,count(1) count,SalesAttributionName name from b_project_opportunity opp
            left join b_followup_record fol on opp.OpportunityClueId = fol.OpportunityClueId
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and SalesAttributionId is not null and opp.ClueStatus in (2,8)
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
            union all
            select 'regionRelate' type,count(1) count,'' name from b_cust_relationship rel
            left join b_project_opportunity opp on rel.OpportunityClueId = opp.OpportunityClueId
            left join b_followup_record fol on rel.OpportunityClueId = fol.OpportunityClueId
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and rel.isdel = 0 and opp.ClueStatus in (2,8)
            and (relate_customer_name = #{customerName} or relate_customer_mobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="judgeNoPool != null and judgeNoPool !='' and '0'.toString() == judgeNoPool">
            union all
            select PoolType type,count(1) count,'' name from b_customerpublicpool
            where projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and PoolType = 1 and is_del = 0
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
    </select>

    <select id="getCstIsOkTrade" parameterType="java.util.Map" resultType="java.util.Map">
        select 'pro' type,count(1) count,SalesAttributionName name from b_project_opportunity opp
        where opp.projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and SalesAttributionId is not null and ClueStatus = 8
        and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and opp.OpportunityClueId != #{opportunityClueId}
        </if>
        union all
        select 'proRelate' type,count(1) count,'' name from b_cust_relationship rel
        left join b_project_opportunity opp on rel.OpportunityClueId = opp.OpportunityClueId
        where opp.projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and rel.isdel = 0 and ClueStatus = 8
        and (relate_customer_name = #{customerName} or relate_customer_mobile = #{customerMobile})
        <if test="opportunityClueId != '' and opportunityClueId != null">
            and opp.OpportunityClueId != #{opportunityClueId}
        </if>
        <if test="judgeNoRegion != null and judgeNoRegion !='' and '0'.toString() == judgeNoRegion">
            union all
            select 'region' type,count(1) count,SalesAttributionName name from b_project_opportunity opp
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and SalesAttributionId is not null and ClueStatus = 8
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
            union all
            select 'regionRelate' type,count(1) count,'' name from b_cust_relationship rel
            left join b_project_opportunity opp on rel.OpportunityClueId = opp.OpportunityClueId
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and rel.isdel = 0 and ClueStatus = 8
            and (relate_customer_name = #{customerName} or relate_customer_mobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="judgeNoPool != null and judgeNoPool !='' and '0'.toString() == judgeNoPool">
            union all
            select PoolType type,count(1) count,'' name from b_customerpublicpool
            where projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and PoolType = 1 and is_del = 0
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
    </select>

    <update id="delPublicOpps" parameterType="java.util.List">
        update b_customerpublicpool set is_del = 1
        where OpportunityClueId in (
        <foreach collection="list" separator="," item="item">
            #{item}
        </foreach>
        )
    </update>

    <update id="updateBatchCustomerStatus">
        <foreach collection="list" separator=";" item="item">
            update b_project_opportunity
            set
            SalesFollowExpireDate = #{item.salesFollowExpireDate},
            SalesFollowExpireWarningDate = #{item.salesFollowExpireWarningDate},
            ClueStatus = #{item.clueStatus},
            CatchTime = now()
            where OpportunityClueId = #{item.opportunityClueId}
        </foreach>
    </update>

    <select id="getGlBatchUpdateCustomerStatusQx" resultType="java.util.Map">
        select distinct bp.AreaID areaId,
                        bp.ID projectId,
                        com.JobCode jobCode
        from s_jobs job
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join s_jobsuserrel rel on job.ID = rel.JobID
                 left join s_organization org on job.JobOrgID = org.ID
                 left join b_project bp on org.ProjectID = bp.ID
                 left join s_jobsmenurel jm on job.ID = jm.JobID
                 left join s_commonjobsmenurel cjm on com.ID = cjm.JobID
                 left join s_menus men on jm.MenuID = men.ID
                 left join s_menus men2 on cjm.MenuID = men2.ID
        where job.IsDel = 0
          and job.Status = 1
          and com.IsDel = 0
          and org.IsDel = 0
          and org.Status = 1
          and (men.MenuSysName = 'batch_udp_customer_status' or men2.MenuSysName = 'batch_udp_customer_status')
          and com.JobCode = '10001'
          and rel.AccountID = #{userId}
    </select>

    <select id="getCustomerProAndAreaAllInfo" resultType="java.util.Map">
        select opp.OpportunityClueId opportunityClueId, bp.ID projectId, bp.AreaID comGuId,opp.ClueStatus clueStatus,
               opp.ProjectClueId,opp.OpportunityClueId,opp.projectId,opp.ProjectName,opp.SalesAttributionId,opp.SalesAttributionName,
               opp.SalesFollowExpireDate,opp.SalesFollowExpireWarningDate
        from b_project_opportunity opp
                 left join b_project bp on opp.projectId = bp.ID
        where opp.OpportunityClueId = #{opportunityClueId}
    </select>
    <select id="getUserAuthorityAll" resultType="cn.visolink.system.channel.model.UserAuthority">
        SELECT
            ba.UserName,
            ba.EmployeeName,
            project_name projectName,
            org_name OrgNameList,
            ba.Mobile,
            IF
                ( ba.Gender = 1, '男', '女' ) Gender,
            IF
                ( rel.is_name_show = 0, '隐号', '全号' ) isNameShow,
            IF
                ( rel.is_mobile_show = 0, '隐号', '全号' ) isMobileShow,
            IF
                ( rel.is_no_time = 0, '有效期', '不限时间' ) isNoTime,
            rel.start_time startTime,
            rel.end_time endTime,
            rel.apply_reason applyReason
        FROM
            s_user_org_rel rel
                LEFT JOIN b_account ba ON rel.user_id = ba.ID
        WHERE
            rel.isdel = 0
          AND rel.STATUS = 1
          AND rel.approve_status = 2
          AND (
            IF
                ( rel.is_no_time = 0, DATE_FORMAT( NOW(), '%Y-%m-%d' ) BETWEEN rel.start_time AND rel.end_time, TRUE ))
        ORDER BY
            user_id DESC
    </select>

    <select id="getProOrgParentLevel" resultType="java.lang.String">
        select distinct PID from s_organization where ProjectID = #{projectId} and OrgCategory = 4 and IsDel = 0 and Status = 1
    </select>

    <select id="getCstIsOkRepeat" resultType="java.util.Map">
        <if test="type != null and type != '' and 'pro'.toString() == type">
            select 'pro' type,CustomerName customerName,CustomerMobile custoerMobile,projectId projectId,(case when SourceMode = '万企通' and wqt_referee_id is not null then '1' when IsReferralOk = 1 then '2' else '3'end) sourceMode
            from b_project_opportunity
            where projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and SalesAttributionId is not null and ClueStatus &lt;9
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="type != null and type != '' and 'region'.toString() == type">
            select 'region' type,CustomerName customerName,CustomerMobile custoerMobile,projectId projectId,(case when SourceMode = '万企通' and wqt_referee_id is not null then '1' when IsReferralOk = 1 then '2' else '3'end) sourceMode
            from b_project_opportunity
            where projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and SalesAttributionId is not null and ClueStatus &lt;9
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="type != null and type != '' and 'proRelate'.toString() == type">
            select 'proRelate' type,CustomerName customerName,CustomerMobile custoerMobile,projectId projectId,(case when SourceMode = '万企通' and wqt_referee_id is not null then '1' when IsReferralOk = 1 then '2' else '3'end) sourceMode
            from b_cust_relationship rela left join b_project_opportunity opp on rela.OpportunityClueId = opp.OpportunityClueId
            where opp.projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and rela.isdel = 0
            and (rela.relate_customer_name = #{customerName} or rela.relate_customer_mobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="type != null and type != '' and 'regionRelate'.toString() == type">
            select 'regionRelate' type,CustomerName customerName,CustomerMobile custoerMobile,projectId projectId,(case when SourceMode = '万企通' and wqt_referee_id is not null then '1' when IsReferralOk = 1 then '2' else '3'end) sourceMode
            from b_cust_relationship rela left join b_project_opportunity opp on rela.OpportunityClueId = opp.OpportunityClueId
            where opp.projectId = (select ID from b_project where ComGUID = (
            select ComGUID from b_project where ID = #{projectId}
            ) and isSyn = 1 and isRegion = 1) and rela.isdel = 0
            and (rela.relate_customer_name = #{customerName} or rela.relate_customer_mobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and opp.OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
        <if test="type != null and type != '' and '1'.toString() == type">
            select PoolType type,CustomerName customerName,CustomerMobile custoerMobile,projectId projectId,'3' sourceMode
            from b_customerpublicpool where projectId in (
            <foreach collection="proList" separator="," item="item">
                #{item}
            </foreach>
            ) and PoolType = 1 and is_del = 0
            and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
            <if test="opportunityClueId != '' and opportunityClueId != null">
                and OpportunityClueId != #{opportunityClueId}
            </if>
        </if>
    </select>

    <select id="getDataViewPremissionMainInfo"
            resultType="cn.visolink.system.channel.model.form.UserOrgRelForm">
        select id id,project_id projectId,project_name projectName,
               user_id userId,user_name userName,org_id orgId,org_name orgName,
               job_code jobCode,job_name jobName,start_time startTime,
               end_time endTime,is_no_time isNoTime,is_name_show isNameShow,
               is_mobile_show isMobileShow,approve_status approveStatus,approve_time approveTime,
               creator,create_time creatTime,updator,
               update_time updateTime,isdel,status,process_id processId,
               approve_desc approveDesc,apply_reason applyReason
        from s_user_org_rel
        where isdel = 0
          and status = 1
          and approve_status = 2
          and id = #{id}
    </select>

    <select id="getCstIsOkDisClues" resultType="java.util.Map">
        select 'pro' type,count(1) count,SalesAttributionName name from b_project_clues
        where projectId in (
        <foreach collection="proList" separator="," item="item">
            #{item}
        </foreach>
        ) and SalesAttributionId is not null and ClueStatus = 11
        and (CustomerName = #{customerName} or CustomerMobile = #{customerMobile})
    </select>

    <delete id="delProjectRule">
        delete from b_project_rule where ID = #{id}
    </delete>

    <select id="getProjectClue" parameterType="java.lang.String" resultType="cn.visolink.system.excel.model.ReportCustomerForm">
        select AlternativeTelephone alternativeTelephone,CompanyPhone companyPhone,sourceMode,ReportCreateTime createDate,
               ReportUserID userId,ReportUserName employeeName,ReportUserRole reportUserRole,HomePhone homePhone,ProjectClueId projectClueId
        from b_project_clues
        where ProjectClueId = #{projectClueId}
    </select>

    <!--查询首访问卷详情-->
    <select id="getInformationInfo" parameterType="java.lang.String" resultType="cn.visolink.system.channel.model.vo.InformationVO">
        select clu.ProjectClueId projectClueId,clu.OpportunityClueId opportunityClueId,
               (case when clu.IsReferralOk = 1 and clu.IsShowNameReferral = 0 then if(length(trim(clu.diy_hide_customer_name)) = 0  or clu.diy_hide_customer_name is null,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) when #{jobCode} in('zygw' ,'qyzygw' ,'qyfz') or #{isNameShow} = '1' or find_in_set(concat(clu.projectId, 'IsNameShow1'), #{proIsShowNameStr}) then clu.CustomerName else if(length(trim(clu.diy_hide_customer_name)) = 0,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) end) customerName,
               if(length(trim(clu.diy_hide_customer_name)) = 0 or clu.diy_hide_customer_name is null,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) reCustomerName,
               clu.CustomerName orderCustomerName,
               clu.CustomerMobile orderCustomerMobile,
               (case when clu.IsReferralOk = 1 and clu.IsShowMobileReferral = 0 then concat(left(clu.CustomerMobile, 3), '****', right(clu.CustomerMobile, 4)) when #{jobCode} in('zygw' ,'qyzygw') or #{isMobileShow} = '1' or find_in_set(concat(clu.projectId, 'IsMobileShow1'), #{proIsShowMobileStr}) then clu.CustomerMobile else concat(left(clu.CustomerMobile,3),'****',right (clu.CustomerMobile,4)) end) customerMobile,
               clu.projectId,clu.ProjectName projectName,clu.CustomerLevel customerLevel,clu.ClueStatus clueStatus,
               clu.Contacts contacts,clu.Longitude longitude,clu.Latitude latitude,clu.SourceMode sourceMode,bin.BelongIndustrise belongIndustrise,bin.BelongIndustriseDesc belongIndustriseDesc,clu.CustomerAddress customerAddress,clu.ReportUserRole reportUserRole,
               clu.Position position,clu.IsPark isPark,clu.ParkName parkName,clu.ParkAddress parkAddress,clu.MainProducts mainProducts,clu.Floor floor,clu.PlantType plantType,clu.RentAndSaleType rentAndSaleType,clu.RentalPrice rentalPrice,clu.ParkFloor parkFloor,
              clu.SalesAttributionTeamId orgId,clu.SalesAttributionTeamName orgName,
              clu.SalesAttributionId salesAttributionId,
              clu.SalesAttributionName salesAttributionName,
              clu.PlantType plantType,
              clu.PlantTypeDesc plantTypeDesc,
              clu.RentAndSaleType rentAndSaleType,
              clu.RentAndSaleTypeDesc rentAndSaleTypeDesc,
              clu.OrderProId orderProId,
              clu.OrderProName orderProName,
              bin.IntentionalAreaDesc intentionalAreaDesc,
              bin.IntentionalFloorDesc intentionalFloorDesc,
              bin.ResistanceDesc resistanceDesc,
              bin.YxArea yxArea,
              bin.YxAreaDesc yxAreaDesc,
              bin.ZyreasonDesc zyreasonDesc,
              bin.IntentionClass intentionClass,
              bin.IntentionClassDesc intentionClassDesc,
              bin.IntentionType intentionType,
              bin.IntentionTypeDesc intentionTypeDesc,
              bin.YxSignTime yxSignTime,
              bin.DemandRemarks demandRemarks,
              clu.IntentionID intentionID,
              bin.BelongIndustriseTwo belongIndustriseTwo,
              bin.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
              bin.BelongIndustriseThree belongIndustriseThree,
              bin.BelongIndustriseThreeDesc belongIndustriseThreeDesc,
              bin.BelongIndustriseFour belongIndustriseFour,
              bin.BelongIndustriseFourDesc belongIndustriseFourDesc,
              bin.IntentionalPrice intentionalPrice,
              bin.Description description,
              bin.TaxpayerNum taxpayerNum,
              bin.Area area,
              bin.DetailedAddress detailedAddress,
              bin.TechnologicalProcess technologicalProcess,
              bin.BusinessProducts businessProducts,
              bin.MajorEquipment majorEquipment,
              bin.MainRawMaterials mainRawMaterials,
              bin.ImportantDescription importantDescription,
              bin.ElectricityYear electricityYear,
              bin.WaterYear waterYear,
              bin.AnnualOutputValue annualOutputValue,
              bin.TaxAmountYear taxAmountYear,
              bin.WorkShopType workShopType,
              bin.WorkShopTypeDesc workShopTypeDesc,
              bin.Province province,
              bin.City city,
              bin.District district,
            bin.PeopleNum peopleNum,
            bin.ExistingPlantArea existingPlantArea,
            clu.SourceModeCode sourceModeCode,
            clu.CustomerType customerType,
            (case when clu.CustomerType = 0 then '企业' when clu.CustomerType = 1 then '个人' else '' end ) customerTypeDesc,
            clu.CustomerGender customerGender,
            (case when clu.CustomerGender = 1 then '男' when clu.CustomerGender = 0 then '女' else '' end ) customerGenderDesc,
            clu.LegalPerson legalPerson,
            (case when clu.IsReferralOk = 1 and clu.IsShowLegalMobileReferral = 0 then concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4)) when  #{jobCode} in('zygw' ,'qyzygw' ,'qyfz') or #{isMobileShow} = '1' or find_in_set(concat(clu.projectId, 'IsMobileShow1'), #{proIsShowMobileStr}) then clu.LegalPersonPhone else concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4)) end) legalPersonPhone,
            concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4))  reLegalPersonPhone,
            clu.LegalPersonPhone orderLegalPersonPhone,
            clu.LegalPersonCardNum legalPersonCardNum,
            clu.EnterpriseType enterpriseType,
            clu.EnterpriseTypeDesc enterpriseTypeDesc,
            clu.CustomerCardType customerCardType,
            clu.CustomerCardTypeDesc customerCardTypeDesc,
            clu.CustomerCardNum customerCardNum,
            clu.PostCode postCode,
            bin.AnnualOutputValue annualOutputValue,
            bin.Needs needs,
            bin.NowRent nowRent,
            bin.NowOfficeSpace nowOfficeSpace,
            bin.PollutantDischarge pollutantDischarge,
            bin.PollutantDischargeDesc pollutantDischargeDesc,
            bin.Zyreason zyreason,
            (IF(clu.IsReferralOk = 1, (select cust.IsShowReferral from b_cust_referral cust where cust.OpportunityClueId = clu.OpportunityClueId),1)) isokref
        from b_project_opportunity clu
            left join b_information bin on bin.OpportunityClueId = clu.OpportunityClueId
        where clu.ProjectClueId = #{projectClueId}
    </select>

    <!--置业顾问线索表新增-->
    <insert id="insertProjectClues"
            parameterType="cn.visolink.system.excel.model.ReportCustomerForm">
        INSERT INTO b_project_clues (ProjectClueId,BasicCustomerId,TradeLevel,CustomerName,
                                     CustomerMobile,CustomerGender,ExpectedVisitDate,IsFollow,SourceType,SourceTypeDesc,
                                     SourceTypeOld,SourceTypeOldDesc,ClueStatus,IsFirstTable,projectId,ProjectName,
                                     ReportUserID,ReportUserName,ReportTeamID,ReportCreateTime,ReportTeamName,SalesAttributionId,
                                     SalesAttributionName,SalesAttributionGroupId,SalesAttributionGroupName,SalesAttributionTeamId,
                                     SalesAttributionTeamName,SalesAttributionTime,IsReportExpire,ReportExpireDate,IsTokerVisitExpire,
                                     TokerVisitExpireDate,SalesFollowExpireDate,IsDel,CreateTime,CreateUserId,IntentionBusiness,Remarks,
                                     SalesTheLatestFollowDate,ReportExpireWarningDate,AreaCode,flag,`Level`,CustomerLevel,
                                     Contacts,Longitude,Latitude,SourceMode,BelongIndustrise,BelongIndustriseDesc,ReportUserRole,CustomerAddress,
                                     Position,IsPark,ParkName,ParkAddress,MainProducts,Floor,PlantType,RentAndSaleType,RentalPrice,ParkFloor,PlantTypeDesc,RentAndSaleTypeDesc,SourceModeCode,
                                     ParkProvince, ParkCity, ParkCounty, ParkStreet, ParkLongitude, ParkLatitude,DisTime,DisOpportunityClueId,diy_hide_customer_name)
        VALUES
            (#{projectClueId},#{customerUuid},#{tradeLevel},#{customerName},#{customerMobile},#{customerGender},
             null,0,3,null,3,null,#{clueStatus},0,#{projectId},#{projectName},#{userId},#{employeeName},#{orgId},now(),#{orgName},#{userId},#{employeeName},
             #{orgId},#{orgName},#{orgId},#{orgName},now(),0,null,0,null,#{salesFollowExpireDate},0,
             now(),#{userId},#{intentionBusiness},#{remarks},null,null,'0086',#{flag}
                ,#{tradeLevel},#{CustomerLevel},
             #{contacts},
             #{longitude},#{latitude},
             #{sourceMode},
             #{belongIndustrise},
             #{belongIndustriseDesc},#{reportUserRole},#{customerAddress},
             #{position},#{isPark},#{parkName},#{parkAddress},#{mainProducts},#{floor},
             #{plantType},#{rentAndSaleType},#{rentalPrice},#{parkFloor},#{plantTypeDesc},#{rentAndSaleTypeDesc},(select DictCode from s_dictionary where pid = '3109eff7-cac2-4973-8888-586e802aca2a' and DictName = #{sourceMode}),
             #{parkProvince}, #{parkCity}, #{parkCounty}, #{parkStreet}, #{ParkLongitude}, #{ParkLatitude},#{disTime},#{disOpportunityClueId},#{diyHideCustomerName})
    </insert>

    <select id="getOppEnclosures2" parameterType="java.lang.String" resultType="java.lang.String">
        select enclosureUrl from b_enclosure
        where OpportunityClueId = #{opportunityClueId}
          and enclosureType = 2
    </select>

    <insert id="addCluesEnclosures" parameterType="java.util.Map">
        insert into b_enclosure(ProjectClueId,OpportunityClueId,FollowRecordId,enclosureUrl,enclosureType,createTime,followType,obtain_cst_approve_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{ProjectClueId},#{OpportunityClueId},#{FollowRecordId},#{item},#{enclosureType},now(),#{followType},#{obtainCstApproveId})
        </foreach>
    </insert>

    <update id="updateClueCst">
        update b_project_clues
        set SalesFollowExpireDate = #{salesFollowExpireDate},
            DisOpportunityClueId = #{disOpportunityClueId},
            ClueStatus = #{clueStatus},
            SalesAttributionId = #{salesAttributionId},
            SalesAttributionName = #{salesAttributionName},
            SalesAttributionTeamId = #{salesAttributionTeamId},
            SalesAttributionTeamName = #{salesAttributionTeamName},
            DisPerson = #{disPerson},
            DisPersonName = #{disPersonName},
            DisTime = now(),
            <if test="CustomerLevel!=null and CustomerLevel!=''">
                CustomerLevel = #{CustomerLevel},
            </if>
            SalesAttributionTime = now(),
            EditUserId=#{disPerson},
            EditorTime = now(),
            IsWaitPool = 0,
            projectId = #{projectId},
            ProjectName = #{ProjectName}
        where ProjectClueId = #{ProjectClueId}
    </update>

    <select id="getFeedAskCjList" resultType="cn.visolink.system.channel.model.FeedBackEc">
        select ID id,ProblemDesc problemDesc,HandleDesc handleDesc
        from a_user_feedback
        where type = 0 and IsDel = 0
        <if test="keyWord != null and keyWord != '' ">
            and ProblemDesc like concat('%',#{keyWord},'%')
        </if>
        order by CreateTime desc
    </select>

    <select id="getFeedAskCjDetail" resultType="cn.visolink.system.channel.model.FeedBackEc">
        select ID id,ProblemDesc problemDesc,HandleDesc handleDesc from a_user_feedback where type = 0 and IsDel = 0 and ID = #{ID}
    </select>

    <select id="getFeedBackEdList" resultType="cn.visolink.system.channel.model.FeedBackEc">
        select ID                                                                                          id,
            FeedBackUserName                                                                               feedBackUserName,
            FeedBackUserMobile                                                                             feedBackUserMobile,
            CreateTime                                                                                     createTime,
            ProjectName                                                                                    projectName,
            ProblemDesc                                                                                    problemDesc,
            (select group_concat(img_url) from a_user_feedback_img where feedback_id = a_user_feedback.ID) enclosureList
        from a_user_feedback
        where type = 1
        and IsDel = 0
        <if test="projectList != null and projectList.size() > 0">
            AND ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            AND CreateTime BETWEEN #{startTime} AND #{endTime}
        </if>
        <if test="keyWord != null and keyWord != '' ">
            and ProblemDesc like concat('%',#{keyWord},'%')
        </if>
        order by CreateTime desc
    </select>

    <insert id="addFeedAskCj">
        insert into a_user_feedback
        (ID,FeedBackUserId,FeedBackUserName
        ,FeedBackUserMobile,ProblemDesc,FeedBackUserRole
        ,ImgUrl,HandleUserId,HandleTime
        ,HandleDesc,Creator,CreateTime
        ,Status,IsDel,ProjectId,ProjectName,type)
        values (UUID(),#{feedBackUserId},#{feedBackUserName}
               ,#{feedBackUserMobile},#{problemDesc},#{feedBackUserRole}
               ,#{imgUrl},#{handleUserId},#{handleTime}
               ,#{handleDesc},#{creator},NOW()
               ,1,0,#{projectId},#{projectName},#{type})
    </insert>

    <update id="updateFeedAskCj" parameterType="cn.visolink.system.channel.model.FeedBackEc">
        update a_user_feedback
        <set>
            <if test="feedBackUserId != null and feedBackUserId != ''">
                FeedBackUserId = #{feedBackUserId},
            </if>
            <if test="feedBackUserName != null and feedBackUserName != ''">
                FeedBackUserName = #{feedBackUserName},
            </if>
            <if test="feedBackUserMobile != null and feedBackUserMobile != ''">
                FeedBackUserMobile = #{feedBackUserMobile},
            </if>
            <if test="problemDesc != null and problemDesc != ''">
                ProblemDesc = #{problemDesc},
            </if>
            <if test="feedBackUserRole != null and feedBackUserRole != ''">
                FeedBackUserRole = #{feedBackUserRole},
            </if>
            <if test="imgUrl != null and imgUrl != ''">
                ImgUrl = #{imgUrl},
            </if>
            <if test="handleUserId != null and handleUserId != ''">
                HandleUserId = #{handleUserId},
            </if>
            <if test="handleTime != null">
                HandleTime = #{handleTime},
            </if>
            <if test="handleDesc != null and handleDesc != ''">
                HandleDesc = #{handleDesc},
            </if>
            <if test="status != null and status != ''">
                Status = #{status},
            </if>
            <if test="editor != null and editor != ''">
                Editor = #{editor},
            </if>
            <if test="projectId != null and projectId != ''">
                ProjectId = #{projectId},
            </if>
            <if test="projectName != null and projectName != ''">
                ProjectName = #{projectName},
            </if>
            EditTime = NOW()
        </set>
        where ID = #{id}
    </update>
    <update id="updateLocationError">
        update b_project_clues set location_error = '1' where ProjectClueId = #{businessId}
    </update>

    <select id="getReportList" resultType="java.util.Map">
        select reportUserName,DATE_FORMAT(reportCreateTime,'%Y-%m-%d %H:%i:%s') reportCreateTime,opportunityClueId from b_customer_report_record
        where opportunityClueId in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.opportunityClueId}
        </foreach>
        order by reportCreateTime desc
    </select>

    <select id="getFirstNodeMoveInfo" resultType="java.util.Map">
        SELECT t.old_sales_id AS oldSalesId, t.old_sales_name AS oldSalesName
        FROM (
                 SELECT
                     node.old_sales_id,
                     node.old_sales_name,
                     node.version_num,
                     MIN(node.create_time) AS min_create_time
                 FROM b_followup_node node
                          LEFT JOIN b_followup_record fr ON node.follow_record_id = fr.FollowRecordId
                 WHERE node.follow_record_id = #{id}
                   AND node.node_type = 3
                   AND node.node_time > IFNULL(fr.EditTime, fr.CreateTime)
                   AND node.status = 1
                   AND node.isdel = 0
                   AND node.is_success = 0
                   AND fr.Status NOT IN ('2', '3')
                 GROUP BY node.version_num
             ) AS t
                 INNER JOIN b_followup_node node ON t.version_num = node.version_num AND t.min_create_time = node.create_time;
    </select>

    <select id="getMainNodeMoveInfo" resultType="java.util.Map">
        select sales_id   salesId,
               sales_name salesName
        from b_followup_node node
                 left join b_followup_record fr on node.follow_record_id = fr.FollowRecordId
        where node.follow_record_id = #{id}
          and node.node_type = 3
          and node.node_time > ifnull(fr.EditTime, fr.CreateTime)
          and node.status = 1
          and node.isdel = 0
          and node.is_success = 0
          and version_status = 1
          and fr.Status not in ('2', '3')
        ;
    </select>

    <select id="getAllowedCount" resultType="java.lang.Integer">
        select count(1) from b_customerdistributionrecords
        where Type = 1 and ConfirmID = #{userId} and DATE_FORMAT(ApplyDatetime,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')
    </select>
    <select id="getAllowedClueCount" resultType="java.lang.Integer">
        select count(1) from b_project_clues
        where ClueStatus = 11 and SalesAttributionId = #{userId} and projectId = #{projectId}
    </select>
    <select id="getCustIsOkInfo" resultType="java.util.Map">
        select OpportunityClueId,CustomerName,CustomerMobile,DATE_FORMAT(ReportCreateTime, '%Y-%m-%d %H:%i:%s') ReportCreateTime,CustomerGender,
               ProjectName projectName,SalesAttributionName,
               (case when opp.ClueStatus = 1 then '报备'
                     when opp.ClueStatus = 2 then '到访'
                     when opp.ClueStatus = 3 then '交房'
                     when opp.ClueStatus = 4 then '相似客户审批中'
                     when opp.ClueStatus = 8 then '签约'
                     when opp.ClueStatus = 9 then '丢失' else '' end) clueStatus,
               (case when opp.ClueStatus = 8 then '已成交' else '未成交' end) orderStatus,
               (select count(1)
                from b_followup_record fol
                where fol.OpportunityClueId = opp.OpportunityClueId
                  and FollowUpWay in (3, 4)
                  and Status = 2)                                 visitCount,
               DATE_FORMAT(SalesTheLatestFollowDate, '%Y-%m-%d %H:%i:%s') salesTheLatestFollowDate,
               DATE_FORMAT(SalesFollowExpireDate, '%Y-%m-%d %H:%i:%s') salesFollowExpireDate
        from b_project_opportunity opp
        where SalesAttributionId is not null and ClueStatus &lt;10
          and (CustomerName = #{keyWord} or CustomerMobile = #{keyWord})
        union all
        select '' OpportunityClueId,
               relate_customer_name CustomerName,
               relate_customer_mobile CustomerMobile,
               DATE_FORMAT(rela.create_time, '%Y-%m-%d %H:%i:%s') ReportCreateTime,
               CustomerGender,
               opp.ProjectName                                     projectName,
               SalesAttributionName,
               '关联企业'                                          clueStatus,
               (case when opp.ClueStatus = 8 then '已成交' else '未成交' end) orderStatus,
               0                                                  visitCount,
               ''                                                 salesTheLatestFollowDate,
               ''                                                 salesFollowExpireDate
        from b_cust_relationship rela
                 left join b_project_opportunity opp on rela.OpportunityClueId = opp.OpportunityClueId
        where rela.isdel = 0 and opp.ClueStatus &lt;9
          and (relate_customer_name = #{keyWord} or relate_customer_mobile = #{keyWord})
    </select>
    <select id="getKsReportCount" resultType="java.lang.Integer">
        select count(distinct projectId) reportVcount
        from b_project_opportunity
        where ClueStatus &lt; 9
        and OpportunityClueId in (
        <foreach collection="oppList" item="item" separator=",">
            #{item.OpportunityClueId}
        </foreach>
        )
    </select>
    <select id="getKsVisitCount" resultType="java.lang.Integer">
        select count(distinct ifnull(childProjectId,projectId)) visitCount
        from b_followup_record
        where FollowUpWay in (3,4)
        and Status = 2
        and OpportunityClueId in (
        <foreach collection="oppList" item="item" separator=",">
            #{item.OpportunityClueId}
        </foreach>
        )
    </select>
    <select id="getKsOrderCount" resultType="java.lang.Integer">
        select count(distinct ifnull(OrderProId,projectId)) orderVcount
        from b_project_opportunity
        where ClueStatus = 8
        and OpportunityClueId in (
        <foreach collection="oppList" item="item" separator=",">
            #{item.OpportunityClueId}
        </foreach>
        )
    </select>
    <select id="getTaskAccountDetail"
      resultType="cn.visolink.system.channel.model.TaskDetailVO">
        select
            (
            select
                orgName
            from
                s_organization so
            where
                so.id = bt.orgId
            limit 1) areaName,
          (
          select
            projectName
          from
            b_project bp
          where
            bp.id = bt.projectId
          limit 1) projectName,
          bt.teamName ,
          ba.EmployeeName userName,
          ba.UserName accountName,
          ifnull(bt.reportNum,0) reportNum,
          ifnull(btm.reportCount,0) reportCompleteNum,
          ifnull(bt.visitNum,0) visitNum,
          ifnull(btm.visitCount,0) visitCompleteNum,
          ifnull(bt.arriveNum,0) arriveNum,
          ifnull(btm.arriveCount,0) arriveCompleteNum,
          ifnull(bt.threeOneNum,0) threeOneNum,
          ifnull(btm.threeOneCount,0) threeOneCompleteNum,
          ifnull(bt.dealNum,0) dealNum,
          ifnull(btm.dealCount,0) dealCompleteNum,
          ifnull(bt.firstVisitNum,0) firstVisitNum,
          ifnull(btm.firstVisitCount,0) firstVisitCompleteNum,
          ifnull(bt.repeatVisitNum,0) repeatVisitNum,
          ifnull(btm.repeatVisitCount,0) repeatVisitCompleteNum
        from
            b_task_member btm
            left join b_task bt on
            btm.taskId = bt.id
            left join b_account ba on
            ba.ID = btm.memberId
        where btm.isDel = 0
            and btm.taskId = #{taskId}
    </select>


    <insert id="insertProjectCluesCall"
            parameterType="cn.visolink.system.excel.model.ReportCustomerForm">
        INSERT INTO b_project_clues (ProjectClueId,BasicCustomerId,TradeLevel,CustomerName,
                                     CustomerMobile,CustomerGender,ExpectedVisitDate,IsFollow,SourceType,SourceTypeDesc,
                                     SourceTypeOld,SourceTypeOldDesc,ClueStatus,IsFirstTable,projectId,ProjectName,
                                     ReportUserID,ReportUserName,ReportTeamID,ReportCreateTime,ReportTeamName,SalesAttributionId,
                                     SalesAttributionName,SalesAttributionGroupId,SalesAttributionGroupName,SalesAttributionTeamId,
                                     SalesAttributionTeamName,SalesAttributionTime,IsReportExpire,ReportExpireDate,IsTokerVisitExpire,
                                     TokerVisitExpireDate,SalesFollowExpireDate,IsDel,CreateTime,CreateUserId,IntentionBusiness,Remarks,
                                     SalesTheLatestFollowDate,ReportExpireWarningDate,AreaCode,flag,`Level`,CustomerLevel,
                                     Contacts,Longitude,Latitude,SourceMode,BelongIndustrise,BelongIndustriseDesc,ReportUserRole,CustomerAddress,
                                     Position,IsPark,ParkName,ParkAddress,MainProducts,Floor,PlantType,RentAndSaleType,RentalPrice,ParkFloor,PlantTypeDesc,RentAndSaleTypeDesc,SourceModeCode,
                                     ParkProvince, ParkCity, ParkCounty, ParkStreet, ParkLongitude, ParkLatitude,DisTime,DisOpportunityClueId,diy_hide_customer_name)
        VALUES
            (#{projectClueId},#{customerUuid},#{tradeLevel},#{customerName},#{customerMobile},#{customerGender},
             null,0,6,'外呼系统',3,null,#{clueStatus},0,#{projectId},#{projectName},#{userId},#{employeeName},#{orgId},now(),#{orgName},#{userId},#{employeeName},
             #{orgId},#{orgName},#{orgId},#{orgName},now(),0,null,0,null,#{salesFollowExpireDate},0,
             now(),#{userId},#{intentionBusiness},#{remarks},null,null,'0086',#{flag}
                ,#{tradeLevel},'E',
             #{contacts},
             #{longitude},#{latitude},
             #{sourceMode},
             #{belongIndustrise},
             #{belongIndustriseDesc},#{reportUserRole},#{customerAddress},
             #{position},#{isPark},#{parkName},#{parkAddress},#{mainProducts},#{floor},
             #{plantType},#{rentAndSaleType},#{rentalPrice},#{parkFloor},#{plantTypeDesc},#{rentAndSaleTypeDesc},(select DictCode from s_dictionary where pid = '3109eff7-cac2-4973-8888-586e802aca2a' and DictName = #{sourceMode}),
             #{parkProvince}, #{parkCity}, #{parkCounty}, #{parkStreet}, #{ParkLongitude}, #{ParkLatitude},#{disTime},#{disOpportunityClueId},#{diyHideCustomerName})
    </insert>
<!--    cn/visolink/system/excel/model/FollowUpRecordForm.java-->
    <insert id="saveFollowUpRecordCall"
            parameterType="cn.visolink.system.excel.model.FollowUpRecordForm">
        insert into b_followup_record(FollowRecordId,FollowUpWay,CommunicationContent,FollowUpDetail,UserId,FollowUpDate,ProjectId,childProjectId,FollowUpType,
                                      IsDel,source,level,ProjectClueId,OpportunityClueId,SaleCustomerId,JobOrgID,EmployeeName,orgName,CreateTime,NextFollowUpDate,FollowUpUserRole,FollowUpWayDesc,IsFirstFollowUp,
                                      NextFollowUpDetail,Status,CustomerAddress,Longitude,Latitude,MainFollowProjectId,InvalidTime,IsThreeOnesStatus )
        values(#{FollowRecordId},#{followUpWay},#{communicationContent},#{followUpDetail},#{userId},now(),#{projectId},#{childProjectId},1,0,2,#{level},#{projectClueId},
               (SELECT OpportunityClueId FROM b_project_opportunity WHERE ProjectClueId = #{projectClueId}),#{saleCustomerId},#{jobOrgId},#{employeeName},#{jobName},now(),#{nextFollowUpDate},#{followUpUserRole},#{followUpWayDesc},#{isFirstFollowUp},
               #{nextFollowUpDetail},#{status},#{customerAddress},#{longitude},#{latitude},#{mainFollowProjectId},#{invalidTime},#{isThreeOnesStatus})
    </insert>

    <insert id="saveInformationZCall" parameterType="cn.visolink.system.excel.model.ReportCustomerForm">
        insert into b_information(id,ProjectClueId,projectId,CustomerName,
                                  CustomerMobile,CustomerGender,
                                  BelongIndustrise,BelongIndustriseDesc,
                                  CreateTime,CreateUserId,IsDel,
                                  IntentionalAreaDesc,
                                  IntentionalFloorDesc,
                                  ResistanceDesc,
                                  YxArea,
                                  YxAreaDesc,
                                  ZyreasonDesc,
                                  IntentionClass,
                                  IntentionClassDesc,
                                  IntentionType,
                                  IntentionTypeDesc,
                                  YxSignTime,
                                  DemandRemarks,
                                  BelongIndustriseTwo,
                                  BelongIndustriseTwoDesc,
                                  BelongIndustriseThree,
                                  BelongIndustriseThreeDesc,
                                  BelongIndustriseFour,
                                  BelongIndustriseFourDesc,
                                  IntentionalPrice,
                                  AnnualOutputValue,
                                  NowRent,
                                  NowOfficeSpace,
                                  PollutantDischarge,
                                  PollutantDischargeDesc,
                                  Needs,
                                  DetailedAddress,
                                  Province,City,District
        )
        values(uuid(),#{projectClueId},#{projectId},#{customerName},
               #{customerMobile},#{customerGender},#{belongIndustrise},
               #{belongIndustriseDesc},now(),#{userId},0,
               #{intentionalAreaDesc},
               #{intentionalFloorDesc},
               #{resistanceDesc},#{yxArea},#{yxAreaDesc},
               #{zyreasonDesc},#{intentionClass},#{intentionClassDesc},
               #{intentionType},#{intentionTypeDesc},
               #{yxSignTime},#{demandRemarks},#{belongIndustriseTwo},
               #{belongIndustriseTwoDesc},#{belongIndustriseThree},
               #{belongIndustriseThreeDesc},#{belongIndustriseFour},
               #{belongIndustriseFourDesc},#{intentionalPrice},
               #{annualOutputValue},
               #{nowRent},
               #{nowOfficeSpace},
               #{pollutantDischarge},
               #{pollutantDischargeDesc},
               #{needs},
               #{detailedAddress},
               #{province},#{city},#{district})
    </insert>

    <insert id="addDimensionCall" parameterType="cn.visolink.system.excel.model.ReportCustomerForm">
        insert into b_customer_dimension(
            DimensionName,
            DimensionAddress,
            ParkName,
            ParkAddress,
            Longitude,
            Latitude,
            UserId,
            NumberOfLayers,
            createTime,
            creator,
            ProjectClueId,
            OpportunityClueId,
            DimensionType,
            BelongIndustrise,
            BelongIndustriseDesc,
            ProjectId,
            BelongIndustriseTwo,
            BelongIndustriseTwoDesc,
            BelongIndustriseThree,
            BelongIndustriseThreeDesc,
            BelongIndustriseFour,
            BelongIndustriseFourDesc
        )
        values(#{customerName},
               #{customerAddress},
               #{parkName},
               #{parkAddress},
               #{longitude},
               #{latitude},
               #{userId},
               #{parkFloor},
               now(),
               #{userId},
               #{projectClueId},
               #{opportunityClueId},
               #{dimensionType},
               #{belongIndustrise},
               #{belongIndustriseDesc},
               #{projectId},
               #{belongIndustriseTwo},
               #{belongIndustriseTwoDesc},
               #{belongIndustriseThree},
               #{belongIndustriseThreeDesc},
               #{belongIndustriseFour},
               #{belongIndustriseFourDesc})
    </insert>
    <insert id="insertProjectCluesCallTwo">
        INSERT INTO b_project_clues (ProjectClueId,TradeLevel,CustomerName,
                                     CustomerMobile,CustomerGender,ExpectedVisitDate,IsFollow,SourceType,SourceTypeDesc,
                                     SourceTypeOld,SourceTypeOldDesc,ClueStatus,IsFirstTable,projectId,ProjectName,
                                     ReportUserID,ReportUserName,ReportTeamID,ReportCreateTime,ReportTeamName,SalesAttributionId,
                                     SalesAttributionName,SalesAttributionGroupId,SalesAttributionGroupName,SalesAttributionTeamId,
                                     SalesAttributionTeamName,SalesAttributionTime,IsReportExpire,ReportExpireDate,IsTokerVisitExpire,
                                     TokerVisitExpireDate,SalesFollowExpireDate,IsDel,CreateTime,CreateUserId,IntentionBusiness,Remarks,
                                     SalesTheLatestFollowDate,ReportExpireWarningDate,AreaCode,flag,`Level`,CustomerLevel,
                                     Contacts,Longitude,Latitude,SourceMode,BelongIndustrise,BelongIndustriseDesc,ReportUserRole,CustomerAddress,
                                     Position,IsPark,ParkName,ParkAddress,MainProducts,Floor,PlantType,RentAndSaleType,RentalPrice,ParkFloor,PlantTypeDesc,RentAndSaleTypeDesc,SourceModeCode,
                                     ParkProvince, ParkCity, ParkCounty, ParkStreet, ParkLongitude, ParkLatitude,DisTime,DisOpportunityClueId,diy_hide_customer_name,Label)
        VALUES
            (#{projectClueId},#{tradeLevel},#{customerName},#{customerMobile},#{customerGender},
             null,0,7,'机器人',3,null,#{clueStatus},0,#{projectId},#{projectName},#{uid},(select employeeName from b_account where ID = #{uid} ),#{sid},now(),(select orgName from s_organization where ID = #{sid} ),#{uid},(select employeeName from b_account where ID = #{uid} ),
             #{sid},(select orgName from s_organization where ID = #{sid} ),#{sid},(select orgName from s_organization where ID = #{sid} ),now(),0,null,0,null,#{salesFollowExpireDate},0,
             now(),#{uid},#{intentionBusiness},#{remarks},null,null,'0086',#{flag}
                ,#{tradeLevel},'E',
             #{contacts},
             #{longitude},#{latitude},
             #{sourceMode},
             #{belongIndustrise},
             #{belongIndustriseDesc},#{reportUserRole},#{customerAddress},
             #{position},#{isPark},#{parkName},#{parkAddress},#{mainProducts},#{floor},
             #{plantType},#{rentAndSaleType},#{rentalPrice},#{parkFloor},#{plantTypeDesc},#{rentAndSaleTypeDesc},null,
             #{parkProvince}, #{parkCity}, #{parkCounty}, #{parkStreet}, #{ParkLongitude}, #{ParkLatitude},#{disTime},#{disOpportunityClueId},#{diyHideCustomerName},#{label})
    </insert>
    <select id="getProjectByOrgId" resultType="java.util.Map">
        SELECT
            o2.ProjectID projectId,
            o2.OrgName projectName,
            p.isRegion
        FROM
            s_organization o1
                left join s_organization o2 on o1.PID = o2.ID
                left join b_project p ON o2.ProjectID = p.ID
        WHERE
            o1.ID = #{id}
    </select>
    <select id="getJobsByUserId" resultType="java.lang.String">
        select distinct com.JobCode
        from s_jobsuserrel rel
                 left join s_jobs job on rel.JobID = job.ID
                 left join s_commonjobs com on job.CommonJobID = com.ID
                 left join s_organization org on job.JobOrgID = org.ID
                 left join b_account ba on ba.ID = rel.AccountID
        where job.Status = 1
          and job.IsDel = 0
          and ba.Status=1
          and ba.id = #{userId}
    </select>
  <select id="getProOrgIds" resultType="cn.visolink.system.org.model.vo.OrganizationVO">
      select * from s_organization
      where ProjectID in (
      <foreach collection="projectIds" separator="," item="item">
          #{item}
      </foreach>
      ) and OrgCategory = 8 and `Status` = 1
  </select>
    <select id="isRobotPermissions" resultType="java.util.Map">
        SELECT
            menu.`ID`,
            menu.`PID`,
            menu.`MenuName` NAME,
            menu.`Url` path,
            menu.`ImageUrl`,
            menu.`IsShow` hidden,
            menu.`redirect`,
            menu.`component`,
            menu.`alwaysShow`,
            menu.IsLast,
            menu.`meta`
        FROM
            s_commonjobs scj
                JOIN s_commonjobsmenurel scjm ON scjm.JobID = scj.ID
                LEFT JOIN s_menus menu ON scjm.MenuID = menu.ID
        WHERE
            scj.ID = #{did} AND menu.isDel=0 AND menu.MenuName = "机器人"
    </select>

    <select id="getFollowUpRecordById" resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        SELECT fr.FollowUpWay as       followUpWay,
               fr.FollowUpDate         followUpDate,
               fr.Status               status,
               fr.childProjectId,
               fr.ProjectId            projectId,
               fr.FollowUpUserRole     followUpUserRole,
               fr.ProjectClueId        projectClueId,
               fr.OpportunityClueId    opportunityClueId,
               opp.CustomerName        customerName,
               fr.UserId               userId,
               ba.UserName             userName,
               fr.MainFollowProjectId  mainFollowProjectId,
               fr.IsThreeOnesStatus    isThreeOnesStatus,
               fr.rectification_status rectificationStatus
        FROM b_followup_record fr
                 left join b_project_opportunity opp on fr.OpportunityClueId = opp.OpportunityClueId
                 left join b_account ba on fr.UserId = ba.ID
        WHERE
            fr.FollowRecordId =#{id}
    </select>

    <select id="getFollowupVerificationRecord"
            resultType="cn.visolink.system.channel.model.vo.FollowupVerificationRecordVo">
        select id,
               follow_record_id followRecordId
        from b_followup_verification_record
        where follow_record_id = #{followRecordId}
        <if test="userId != '' and userId != null">
            and creator = #{userId}
        </if>
    </select>

    <select id="getFollowupVerificationVersionNum" resultType="java.lang.Integer">
        select ifnull(max(version_num),0) versionNum
        from b_followup_verification_record
        where follow_record_id = #{followRecordId}
    </select>

    <insert id="saveFollowupVerificationRecord">
        insert into b_followup_verification_record
        ( id,follow_record_id,apply_time
        ,description,approval_reason,rectification_status
        ,verification_status,status,is_del
        ,create_time,creator,update_time
        ,updator,version_num)
        values (UUID(),#{followRecordId},NOW()
               ,#{description},#{approvalReason},#{rectificationStatus}
               ,#{verificationStatus},1,0
               ,NOW(),#{userId},NOW()
               ,#{userId},#{versionNum})
    </insert>

    <update id="updateFollowUpRecordInsVrf">
        update b_followup_record
        set verification_status = #{verificationResult},
            rectification_status = #{rectificationStatus}
        where FollowRecordId = #{followRecordId}
    </update>

    <select id="getFollowUpVerificationRecordList"
            resultType="cn.visolink.system.channel.model.vo.FollowUpRecordVO">
        select fol.FollowRecordId                                                                                    followRecordId,
               fol.FollowUpWay                                                                                       followUpWay,
               fol.FollowUpWayDesc                                                                                   followUpWayDesc,
               bp.AreaName                                                                                           areaName,
               bp.ID                                                                                                 projectId,
               bp.ProjectName                                                                                        projectName,
               if(fol.FollowUpWay in (3, 4), bp2.ProjectName, '')                                                    childProjectName,
               (case fol.FollowUpWay
                    when 2 then fol.CustomerAddress
                    when 3 then bp2.ProjectName
                    when 4 then bp2.ProjectName
                    else '' end)                                                                                     followUpAddress,
               opp.CustomerName                                                                                      reCustomerName,
               if(length(trim(opp.diy_hide_customer_name)) = 0 or opp.diy_hide_customer_name is null,
                  concat(left(opp.CustomerName, 1), '**'),
                  opp.diy_hide_customer_name)                                                                        customerName,
               opp.CustomerMobile                                                                                    reCustomerMobile,
               concat(left(opp.CustomerMobile, 3), '****',
                   right(opp.CustomerMobile, 4))                                                                  customerMobile,
               opp.CustomerAddress                                                                                   customerAddress,
               bin.DetailedAddress                                                                                   detailedAddress,
               opp.Contacts                                                                                          contacts,
               ba1.EmployeeName                                                                                      userName,
               fol.FollowUpDate                                                                                      followUpDate,
               fol.FollowUpDetail                                                                                    followUpDetail,
               fol.NextFollowUpDate                                                                                  nextFollowUpDate,
               fol.NextFollowUpDetail                                                                                nextFollowUpDetail,
               fol.IsThreeOnesStatus                                                                                 isThreeOnesStatus,
               if(fol.IsThreeOnesStatus = 1, '是', '否')                                                              isThreeOnesStatusDesc,
               opp.SourceMode                                                                                        sourceMode,
               (select GROUP_CONCAT(enclosureUrl)
                from b_enclosure
                where FollowRecordId = fol.FollowRecordId
                  and followType in (1, 2))                                                                          enclosures,
               (select GROUP_CONCAT(enclosureUrl)
                from b_enclosure
                where FollowRecordId = fol.FollowRecordId
                  and followType = 3)                                                                                drawingQuotationUrls,
               fol.Status                                                                                            status,
               fol.main_approval_user                                                                                mainApprovalUser,
               (case fol.Status when 1 then '待审核' when 2 then '审核通过' when 3 then '驳回' when 5 then '审核中' else '' end) statusDesc,
               concat(ifnull((case
                                  when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (1, 2)
                                      then (IF(fol.Status = 2, concat(ba2.EmployeeName, '(审核通过)'), ''))
                                  when FollowUpWay in (1, 2, 5) and FollowUpUserRole in (5, 6, 7)
                                      then (IF(fol.Status = 2, concat(ba3.EmployeeName, '(审核通过)'), ''))
                                  when FollowUpWay in (3, 4) then (IF(fol.Status = 2, concat(ba2.EmployeeName, '(审核通过)'), ''))
                                  else '' end), ''), ' ',
                      ifnull((IF(FollowUpWay in (3, 4), (IF(fol.Status = 2, concat(ba3.EmployeeName, '(审核通过)'), '')), '')),
                             ''))                                                                                    approveUser,
               fol.ApprovalTime                                                                                      approvalTime,
               fol.RejectReason                                                                                      rejectReason,
               fol.projectClueId                                                                                     projectClueId,
               fol.opportunityClueId                                                                                 opportunityClueId,
               fv.apply_time                                                                                         verificationTime,
               ba4.EmployeeName                                                                                      verificationUerName,
               (case fv.verification_status when 0 then '核验不合格' when 1 then '核验合格' else '' end)                          verificationStatus,
               (case fv.rectification_status
                    when 0 then '无需整改'
                    when 1 then '待整改'
                    when 2 then '待复核'
                    when 3 then '已整改'
                    else '' end)                                                                                     rectificationStatus
        from b_followup_verification_record fv
                 left join b_followup_record fol on fv.follow_record_id = fol.FollowRecordId
                 left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
                 left join b_information bin on bin.OpportunityClueId = opp.OpportunityClueId
                 left join b_project bp on fol.ProjectId = bp.ID
                 left join b_project bp2 on fol.MainFollowProjectId = bp2.ID
                 left join b_account ba1 on fol.UserId = ba1.ID
                 left join b_account ba2 on fol.ApprovalUser = ba2.ID
                 left join b_account ba3 on fol.TwoApprovalUser = ba3.ID
                 left join b_account ba4 on fv.creator = ba4.ID
        where 1 = 1
        <if test="projectList != null and projectList.size() > 0">
            AND fol.ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
            AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
        </if>
        <if test="verificationStartTime != null and verificationStartTime != '' and verificationEndTime != null and verificationEndTime != ''">
            AND fv.apply_time BETWEEN #{verificationStartTime} AND #{verificationEndTime}
        </if>
        <if test="followUpWay != null and followUpWay != ''">
            and fol.FollowUpWay = #{followUpWay}
        </if>
        <if test="status != null and status != ''">
            and fol.Status = #{status}
        </if>
        <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
            and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            and opp.SourceMode = #{sourceMode}
        </if>
        <if test="verificationUerName != null and verificationUerName != ''">
            and ba4.EmployeeName = #{verificationUerName}
        </if>
        <if test="approveUser != null and approveUser != ''">
            and ba2.EmployeeName = #{approveUser}
        </if>
        <if test="rectificationStatus != null and rectificationStatus != ''">
            and fv.rectification_status = #{rectificationStatus}
        </if>
        <if test="verificationStatus != null and verificationStatus != ''">
            and fv.verification_status = #{verificationStatus}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by fv.create_time desc
        <if test="pageIndex != null and pageIndex != '' and pageSize != null and pageSize != ''">
            LIMIT #{pageIndex},#{pageSize}
        </if>
    </select>
    <select id="getFollowUpRecordVerificationCount" resultType="java.lang.Integer">
        select count(1)
        from b_followup_verification_record fv
            left join b_followup_record fol on fv.follow_record_id = fol.FollowRecordId
            left join b_project_opportunity opp on fol.OpportunityClueId = opp.OpportunityClueId
            left join b_account ba2 on fol.ApprovalUser = ba2.ID
            left join b_account ba4 on fv.creator = ba4.ID
        where 1 = 1
        <if test="projectList != null and projectList.size() > 0">
            AND fol.ProjectId IN (
            <foreach collection="projectList" item="item" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="customerName != null and customerName != ''">
            AND opp.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND opp.CustomerMobile = #{customerMobile}
        </if>
        <if test="followUpStartTime != null and followUpStartTime != '' and followUpEndTime != null and followUpEndTime != ''">
            AND fol.FollowUpDate BETWEEN #{followUpStartTime} AND #{followUpEndTime}
        </if>
        <if test="verificationStartTime != null and verificationStartTime != '' and verificationEndTime != null and verificationEndTime != ''">
            AND fv.apply_time BETWEEN #{verificationStartTime} AND #{verificationEndTime}
        </if>
        <if test="followUpWay != null and followUpWay != ''">
            and fol.FollowUpWay = #{followUpWay}
        </if>
        <if test="status != null and status != ''">
            and fol.Status = #{status}
        </if>
        <if test="isThreeOnesStatus != null and isThreeOnesStatus != ''">
            and fol.IsThreeOnesStatus = #{isThreeOnesStatus}
        </if>
        <if test="sourceMode != null and sourceMode != ''">
            and opp.SourceMode = #{sourceMode}
        </if>
        <if test="verificationUerName != null and verificationUerName != ''">
            and ba4.EmployeeName = #{verificationUerName}
        </if>
        <if test="approveUser != null and approveUser != ''">
            and ba2.EmployeeName = #{approveUser}
        </if>
        <if test="rectificationStatus != null and rectificationStatus != ''">
            and fv.rectification_status = #{rectificationStatus}
        </if>
        <if test="verificationStatus != null and verificationStatus != ''">
            and fv.verification_status = #{verificationStatus}
        </if>
        <if test="orgIds!=null and orgIds.size() > 0">
            and opp.SalesAttributionTeamId not in
            <foreach collection="orgIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getFollowupVerificationAllRecordList"
            resultType="cn.visolink.system.channel.model.vo.FollowupRectificationRecordVo">
        select fr.id,
               fr.follow_record_id                                                          followRecordId,
               fr.follow_verification_record_id                                             followVerificationRecordId,
               fr.apply_time                                                                applyTime,
               fr.approval_reason                                                           approvalReason,
               (case
                    when length(trim(fr.approval_reason)) > 0 and fr.status = 1 then '通过'
                    when length(trim(fr.approval_reason)) > 0 and fr.status = 0 then '驳回'
                    else '' end)                                                            approvalStatus,
               fr.approval_time                                                               approvalTime,
               ba.EmployeeName                                                              employeeName,
               fv.create_time                                                               verificationCreateTime,
               ba2.EmployeeName                                                             verificationmUserName,
               fv.approval_reason                                                           verificationApprovalReason,
               (case fv.verification_status when 0 then '不合格' when 1 then '合格' else '' end) verificationStatus,
               (case fv.rectification_status
                    when 0 then '无需整改'
                    when 1 then '待整改'
                    when 2 then '待复核'
                    when 3 then '已整改'
                    else '' end)                                                            rectificationStatus
        from b_followup_rectification_record fr
                 left join b_followup_verification_record fv on fr.follow_verification_record_id = fv.id
                 left join b_account ba on fr.approval_user = ba.ID
                 left join b_account ba2 on fv.creator = ba.ID
        where 1 = 1
          and fr.follow_verification_record_id = #{followVerificationRecordId}
        order by fr.create_time
    </select>

    <select id="getFollowupVerificationRecordByFollowRecordId"
            resultType="cn.visolink.system.channel.model.vo.FollowupVerificationRecordVo">
        select fv.id                                                                        id,
               fv.follow_record_id                                                          followRecordId,
               fv.apply_time                                                                applyTime,
               ba.EmployeeName                                                              employeeName,
               approval_reason                                                              approvalReason,
               (case fv.verification_status when 0 then '不合格' when 1 then '合格' else '' end) verificationStatus,
               (case fv.rectification_status
                    when 0 then '无需整改'
                    when 1 then '待整改'
                    when 2 then '待复核'
                    when 3 then '已整改'
                    else '' end)                                                            rectificationStatus
        from b_followup_verification_record fv
                 left join b_account ba on fv.creator = ba.ID
        where fv.is_del = 0
          and fv.status = 1
          and fv.follow_record_id = #{followRecordId}
        order by create_time
    </select>

    <select id="getFollowupRectificationRecordByFollowupVerificationRecordIds"
            resultType="cn.visolink.system.channel.model.vo.FollowupRectificationRecordVo">
        select fr.id,
        fr.follow_record_id              followRecordId,
        fr.follow_verification_record_id followVerificationRecordId,
        fr.apply_time                    applyTime,
        fr.approval_reason               approvalReason,
        (case
        when length(trim(fr.approval_reason)) > 0 and fr.status = 1 then '通过'
        when length(trim(fr.approval_reason)) > 0 and fr.status = 0 then '驳回'
        else '' end)                approvalStatus,
        fr.approval_time                   approvalTime,
        ba.EmployeeName                  employeeName
        from b_followup_rectification_record fr
        left join b_account ba on fr.approval_user = ba.ID
        where is_del = 0
        and follow_verification_record_id in (
        <foreach collection="ids" item="item" separator=",">
            #{item}
        </foreach>
        )
        order by create_time
    </select>

    <select id="getCustomerInfoInsCl" resultType="java.util.Map">
        select opp.CustomerName                                        customerName,
               opp.OpportunityClueId                                   opportunityClueId,
               opp.ProjectClueId                                       projectClueId,
               opp.CustomerLevel                                       customerLevel,
               opp.SalesAttributionId                                  salesAttributionId,
               opp.SalesAttributionName                                salesAttributionName,
               opp.SalesAttributionTeamId                              salesAttributionTeamId,
               opp.SalesAttributionTeamName                            salesAttributionTeamName,
               opp.projectId                                           projectId,
               (select AreaID from b_project where ID = opp.projectId) areaId
        from b_project_opportunity opp
        where opp.OpportunityClueId = #{opportunityClueId}
    </select>

    <insert id="insertCustomerLevelChangeLog">
        insert into b_customer_level_record
        ( id,opportunity_cue_id,project_clue_id
        ,customer_level,sales_attribution_id,sales_attribution_name
        ,sales_attribution_team_id,sales_attribution_team_name,project_id
        ,area_id,sales_attribution_time,creator
        ,create_time,status,is_del)
        values (UUID(),#{opportunityCueId},#{projectClueId}
               ,#{customerLevel},#{salesAttributionId},#{salesAttributionName}
               ,#{salesAttributionTeamId},#{salesAttributionTeamName},#{projectId}
               ,#{areaId},NOW(),#{creator}
               ,NOW(),1,0)
    </insert>

    <insert id="saveCustomerAddLog">
        insert into b_customer_add_log
        ( id,area_id,project_id,
          opportunity_clue_id,project_clue_id,customer_name,
          customer_mobile,sales_attribution_id,sales_attribution_name,
          sales_attribution_team_id,sales_attribution_team_name,is_three_ones,
          <if test="isThreeOnesDate != null and isThreeOnesDate != 'null'.toString()">is_three_ones_date,</if>
          add_type,is_add,report_create_time,is_effective,create_time
        )
        values (UUID(),#{areaId},#{projectId},
                #{opportunityClueId},#{projectClueId},#{customerName},
                #{customerMobile},#{salesAttributionId},#{salesAttributionName},
                #{salesAttributionTeamId},#{salesAttributionTeamName},#{isThreeOnes},
                <if test="isThreeOnesDate != null and isThreeOnesDate != 'null'.toString()">
                    #{isThreeOnesDate},
                </if>
                #{addType},#{isAdd},#{reportCreateTime},#{isEffective},NOW()
               )
    </insert>

    <insert id="saveCustomerFodLog">
        insert into b_customer_fod_log
        ( id,add_log_id,opportunity_clue_id
        ,project_clue_id,business_id,business_type
        ,business_time,cycle_type,group_cycle
        ,area_cycle,project_cycle,team_cycle
        ,user_cycle,business_project_id,main_visit_project_id
        ,is_three_ones_status,Is_three_ones_after_status,is_first_visit_status
        ,is_first_come_visit_status,is_sign_after_visit_status,is_statistics
        ,create_time,creator,status,is_del
        )
        values (UUID(),#{addLogId},#{opportunityClueId}
               ,#{projectClueId},#{businessId},#{businessType}
               ,#{businessTime},#{cycleType},#{groupCycle}
               ,#{areaCycle},#{projectCycle},#{teamCycle}
               ,#{userCycle},#{businessProjectId},#{mainVisitProjectId}
               ,#{isThreeOnesStatus},#{isThreeOnesAfterStatus},#{isFirstVisitStatus}
               ,#{isFirstComeVisitStatus},#{isSignAfterVisitStatus},#{isStatistics}
               ,NOW(),#{creator},1,0
               )
    </insert>

    <update id="disableCutomerAddLog">
        update b_customer_add_log set is_effective = 0 where opportunity_clue_id = #{opportunityClueId}
    </update>

    <update id="updateCustomerFodRecordIsStatistics">
        update b_customer_fod_log set is_statistics = #{isStatistics} where business_id = #{followRecordId}
    </update>

    <select id="getCustomerAddLogToIsAdd" resultType="java.lang.String">
        select if(count(1) > 0,0,1) from b_customer_add_log where opportunity_clue_id = #{opportunityClueId} and project_id = #{projectId}
    </select>

    <select id="getCustomerAddLogIdByOpportunityClueId" resultType="java.lang.String">
        select id from b_customer_add_log where opportunity_clue_id = #{opportunityClueId} and is_effective = 1
    </select>

    <select id="getTeamUser" resultType="java.lang.String">
        select ba.ID
        from b_account ba
                 INNER JOIN s_jobsuserrel rel on ba.id = rel.AccountID and ba.IsDel = 0
                 INNER JOIN s_jobs jobs on rel.JobID = jobs.ID and jobs.isIdm = 0
                 INNER JOIN s_commonjobs com on jobs.CommonJobID = com.ID and com.isIdm = 0
                 INNER JOIN s_organization org on org.id = jobs.JobOrgID and org.IsDel = 0
                 inner join b_project bp on org.ProjectID = bp.ID
        where (case bp.isRegion when 0 then com.JobCode = 'zygw' when 1 then com.JobCode = 'qyzygw' else false end)
          and org.id = #{orgId}
    </select>

    <select id="getProjectProportion" resultType="java.lang.Integer">
        <if test="type != null and type != '' and 'report'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_add_log where project_id = #{projectId} and report_create_time between #{startTime} and #{endTime} and is_add = 1
        </if>
        <if test="type != null and type != '' and 'visit'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and business_type = '' and is_statistics = 1;
        </if>
        <if test="type != null and type != '' and 'threeOne'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and is_three_ones_status = 1 and is_statistics = 1;
        </if>
        <if test="type != null and type != '' and 'deal'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and is_three_ones_status = 1 and is_statistics = 1;
        </if>
        <if test="type != null and type != '' and 'firstVisit'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and is_three_ones_status = 1 and is_statistics = 1;
        </if>
        <if test="type != null and type != '' and 'repeatVisit'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and is_three_ones_status = 1 and is_statistics = 1;
        </if>
        <if test="type != null and type != '' and 'tag'.toString() == type">
            select count(distinct opportunity_clue_id) from b_customer_fod_log where business_project_id = #{projectId} and business_time between #{startTime} and #{endTime} and is_three_ones_status = 1 and is_statistics = 1;
        </if>
    </select>

    <update id="updateBatchCustomerExpireDate">
        <foreach collection="list" separator=";" item="item">
            update b_project_opportunity
            set
            SalesFollowExpireDate = #{item.salesFollowExpireDate},
            SalesFollowExpireWarningDate = #{item.salesFollowExpireWarningDate}
            where OpportunityClueId = #{item.opportunityClueId}
        </foreach>
    </update>

    <update id="updateBatchCustomerMaxFollowUp">
        <foreach collection="list" separator=";" item="item">
            update b_project_opportunity
            set
            maxFollowUp = #{item.maxFollowUp}
            where OpportunityClueId = #{item.opportunityClueId}
        </foreach>
    </update>

    <insert id="addCustomerChangeNodeRecord">
        insert into b_customer_change_node_record
        ( id,project_clue_id,opportunity_clue_id,project_id,project_name,confirm_id,confirm_person_name,confirm_time,reason,
         sales_name,sales_id,apply_date_time,note,type,enclosurse_url,
         customer_change_node_batch_id,creator,create_time,updator,update_time)
        values (UUID(),#{projectClueId},#{opportunityClueId},#{projectId},#{projectName},#{confirmId},#{confirmPersonName},
                #{confirmTime},#{reason},#{salesName},#{salesId},#{applyDateTime},#{note},#{type},#{enclosurseUrl},
                #{customerChangeNodeBatchId},#{creator},#{createTime},#{updator},#{updateTime})
    </insert>

    <select id="getCstLastDisClues" resultType="java.util.Map">
        select record.SalesId salesId
        from b_customerdistributionrecords record
                 left join b_redistribution_batch batch on record.RedistributionBatchId = batch.id
        where OpportunityClueId = #{opportunityClueId}
          and batch.type = 2
        order by record.ApplyDatetime desc
            limit 1
    </select>

    <insert id="addRelCustomerBatch">
        insert into b_redistribution_batch
        ( id,createUser,createTime,countNumber,type,customer_full_names,customer_hide_names,customer_full_mobiles,customer_hide_mobiles,
         project_ids,project_names,sales_attribution_info,batch_code,old_batch_code,redistribution_result,sales_attribution_names)
        values (#{id},#{createuser}
               ,#{createtime},#{countnumber},#{type}
               ,#{customerFullNames},#{customerHideNames},#{customerFullMobiles}
               ,#{customerHideMobiles},#{projectIds},#{projectNames}
               ,#{salesAttributionInfo},#{batchCode},#{oldBatchCode},#{redistributionResult},#{salesAttributionNames})
    </insert>

    <insert id="addRelCustomerRecordBatch" parameterType="java.util.Map">
        insert into b_customerdistributionrecords(ID,ProjectClueId,projectId,ProjectName,
                                                  ConfirmID,ConfirmTime,OldSalesName,OldSalesId,
                                                  SalesName,SalesId,OpportunityClueId,ApplyDatetime,
                                                  note,Type,OldProjectClueId,OldOpportunityClueId,main_project_id,main_project_name)
        values
            <foreach collection="list" item="item" separator=",">
                (uuid(),#{item.ProjectClueId},#{item.projectId},#{item.ProjectName},#{item.ConfirmID},#{item.ConfirmTime}
                ,#{item.OldSalesName},#{item.OldSalesId},#{item.SalesName},#{item.SalesId},#{item.OpportunityClueId}
                ,#{item.ApplyDatetime},#{item.note},#{item.Type},#{item.OldProjectClueId},#{item.OldOpportunityClueId},#{item.mainProjectId},#{item.mainProjectName})
            </foreach>
    </insert>

    <!--线索表批量新增-->
    <insert id="insertProjectCluesBatch"
            parameterType="cn.visolink.system.excel.model.ReportCustomerForm">
        INSERT INTO b_project_clues (ProjectClueId,BasicCustomerId,TradeLevel,CustomerName,
                                     CustomerMobile,CustomerGender,ExpectedVisitDate,IsFollow,SourceType,SourceTypeDesc,
                                     SourceTypeOld,SourceTypeOldDesc,ClueStatus,IsFirstTable,projectId,ProjectName,
                                     ReportUserID,ReportUserName,ReportTeamID,ReportCreateTime,ReportTeamName,SalesAttributionId,
                                     SalesAttributionName,SalesAttributionGroupId,SalesAttributionGroupName,SalesAttributionTeamId,
                                     SalesAttributionTeamName,SalesAttributionTime,IsReportExpire,ReportExpireDate,IsTokerVisitExpire,
                                     TokerVisitExpireDate,SalesFollowExpireDate,IsDel,CreateTime,CreateUserId,IntentionBusiness,Remarks,
                                     SalesTheLatestFollowDate,ReportExpireWarningDate,AreaCode,flag,`Level`,CustomerLevel,
                                     Contacts,Longitude,Latitude,SourceMode,BelongIndustrise,BelongIndustriseDesc,ReportUserRole,CustomerAddress,
                                     Position,IsPark,ParkName,ParkAddress,MainProducts,Floor,PlantType,RentAndSaleType,RentalPrice,ParkFloor,PlantTypeDesc,RentAndSaleTypeDesc,SourceModeCode,
                                     ParkProvince, ParkCity, ParkCounty, ParkStreet, ParkLongitude, ParkLatitude,DisTime,DisOpportunityClueId,diy_hide_customer_name)
        VALUES
            <foreach collection="list" item="item" separator=",">
                (#{item.projectClueId},#{item.customerUuid},#{item.tradeLevel},#{item.customerName},#{item.customerMobile},#{item.customerGender},
                null,0,3,null,3,null,#{item.clueStatus},0,#{item.projectId},#{item.projectName},#{item.userId},#{item.employeeName},#{item.orgId},now(),#{item.orgName},#{item.userId},#{item.employeeName},
                #{item.orgId},#{item.orgName},#{item.orgId},#{item.orgName},now(),0,null,0,null,#{item.salesFollowExpireDate},0,
                now(),#{item.userId},#{item.intentionBusiness},#{item.remarks},null,null,'0086',#{item.flag}
                ,#{item.tradeLevel},#{item.CustomerLevel},
                #{item.contacts},
                #{item.longitude},#{item.latitude},
                #{item.sourceMode},
                #{item.belongIndustrise},
                #{item.belongIndustriseDesc},#{item.reportUserRole},#{item.customerAddress},
                #{item.position},#{item.isPark},#{item.parkName},#{item.parkAddress},#{item.mainProducts},#{item.floor},
                #{item.plantType},#{item.rentAndSaleType},#{item.rentalPrice},#{item.parkFloor},#{item.plantTypeDesc},#{item.rentAndSaleTypeDesc},(select DictCode from s_dictionary where pid = '3109eff7-cac2-4973-8888-586e802aca2a' and DictName = #{item.sourceMode}),
                #{item.parkProvince}, #{item.parkCity}, #{item.parkCounty}, #{item.parkStreet}, #{item.ParkLongitude}, #{item.ParkLatitude},#{item.disTime},#{item.disOpportunityClueId},#{item.diyHideCustomerName})
            </foreach>
    </insert>

    <insert id="saveCustomerAddLogBatch">
        insert into b_customer_add_log
        ( id,area_id,project_id,
        opportunity_clue_id,project_clue_id,customer_name,
        customer_mobile,sales_attribution_id,sales_attribution_name,
        sales_attribution_team_id,sales_attribution_team_name,is_three_ones,
        <if test="isThreeOnesDate != null and isThreeOnesDate != 'null'.toString()">is_three_ones_date,</if>
        add_type,is_add,report_create_time,is_effective,create_time
        )
        values
            <foreach collection="list" item="item" separator=",">
                (UUID(),#{item.areaId},#{item.projectId},
                #{item.opportunityClueId},#{item.projectClueId},#{item.customerName},
                #{item.customerMobile},#{item.salesAttributionId},#{item.salesAttributionName},
                #{item.salesAttributionTeamId},#{item.salesAttributionTeamName},#{item.isThreeOnes},
                <if test="item.isThreeOnesDate != null and item.isThreeOnesDate != 'null'.toString()">
                    #{item.isThreeOnesDate},
                </if>
                #{item.addType},#{item.isAdd},#{item.reportCreateTime},#{item.isEffective},NOW()
                )
            </foreach>
    </insert>

    <update id="disableCutomerAddLogBatch">
        update b_customer_add_log set is_effective = 0 where opportunity_clue_id in (
        <foreach collection="list" item="item" separator=",">
            #{item.opportunityClueId}
        </foreach>
            )
    </update>

    <insert id="insertCustomerLevelChangeLogBatch">
        insert into b_customer_level_record
        ( id,opportunity_cue_id,project_clue_id
        ,customer_level,sales_attribution_id,sales_attribution_name
        ,sales_attribution_team_id,sales_attribution_team_name,project_id
        ,area_id,sales_attribution_time,creator
        ,create_time,status,is_del)
        values
            <foreach collection="list" item="item" separator=",">
                (UUID(),#{item.opportunityCueId},#{item.projectClueId}
                ,#{item.customerLevel},#{item.salesAttributionId},#{item.salesAttributionName}
                ,#{item.salesAttributionTeamId},#{item.salesAttributionTeamName},#{item.projectId}
                ,#{item.areaId},NOW(),#{item.creator}
                ,NOW(),1,0)
            </foreach>
    </insert>

    <update id="updateClueCstBatch">
        <foreach collection="list" item="item" separator=";">
            update b_project_clues
            set SalesFollowExpireDate = #{item.salesFollowExpireDate},
            DisOpportunityClueId = #{item.disOpportunityClueId},
            ClueStatus = #{item.clueStatus},
            SalesAttributionId = #{item.salesAttributionId},
            SalesAttributionName = #{item.salesAttributionName},
            SalesAttributionTeamId = #{item.salesAttributionTeamId},
            SalesAttributionTeamName = #{item.salesAttributionTeamName},
            DisPerson = #{item.disPerson},
            DisPersonName = #{item.disPersonName},
            DisTime = now(),
            <if test="item.CustomerLevel!=null and item.CustomerLevel!=''">
                CustomerLevel = #{item.CustomerLevel},
            </if>
            SalesAttributionTime = now(),
            EditUserId=#{item.disPerson},
            EditorTime = now(),
            IsWaitPool = 0,
            projectId = #{item.projectId},
            ProjectName = #{item.ProjectName}
            where ProjectClueId = #{item.ProjectClueId}
        </foreach>
    </update>

    <insert id="addCluesEnclosuresBatch" parameterType="java.util.Map">
        insert into b_enclosure(ProjectClueId,OpportunityClueId,FollowRecordId,enclosureUrl,enclosureType,createTime,followType,obtain_cst_approve_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.ProjectClueId},#{item.OpportunityClueId},#{item.FollowRecordId},#{item.enclosureUrl},#{item.enclosureType},now(),#{item.followType},#{item.obtainCstApproveId})
        </foreach>
    </insert>

    <update id="updateOppCstBatch" parameterType="java.util.Map">
        <foreach collection="list" item="item" separator=";">
            update b_project_opportunity
            set
            SalesFollowExpireDate = #{item.salesFollowExpireDate},
            <if test="item.projectId!=null and item.projectId!=''">
                projectId = #{item.projectId},
            </if>
            <if test="item.projectName!=null and item.projectName!=''">
                ProjectName = #{item.projectName},
            </if>
            <if test="item.salesAttributionId!=null and item.salesAttributionId!=''">
                SalesAttributionId = #{item.salesAttributionId},
                SalesAttributionTeamId = #{item.salesAttributionTeamId},
                SalesAttributionTeamName = #{item.salesAttributionTeamName},
            </if>
            <if test="item.salesTheFirstFollowDate=='null'">
                SalesTheFirstFollowDate = null,
            </if>
            <if test="item.isThreeOnesDate == 'null'">
                IsThreeOnesDate = null,
            </if>
            <if test="item.wqtRefereeInfo == 'null'">
                wqt_referee_name = null,
                wqt_referee_mobile = null,
                wqt_referee_time = null,
                wqt_referee_id = null,
            </if>
            <if test="item.salesAttributionName!=null and item.salesAttributionName!=''">
                SalesAttributionName = #{item.salesAttributionName},
            </if>
            <if test="item.isEffective!=null and item.isEffective!=''">
                IsEffective = #{item.isEffective},
            </if>
            <if test="item.ClueStatus!=null and item.ClueStatus!=''">
                ClueStatus = #{item.ClueStatus},
            </if>
            <if test="item.ReportCreateTime!=null and item.ReportCreateTime!=''">
                ReportCreateTime = now(),
            </if>
            <if test="item.CustomerLevel!=null and item.CustomerLevel!=''">
                CustomerLevel =#{item.CustomerLevel},
            </if>
            CatchTime = now(),
            SalesFollowExpireWarningDate = #{item.salesFollowExpireWarningDate}
            where OpportunityClueId = #{item.OpportunityClueId};
            update b_project_clues set ClueStatus = #{item.ClueStatus}
            where ProjectClueId = #{item.ProjectClueId};
            update b_cust_referral set status = 6,endTime = now() where status = 1 and OpportunityClueId = #{item.OpportunityClueId};
        </foreach>
    </update>

    <select id="getClueCstNMInfo" resultType="java.util.Map">
        select CustomerName customerName,CustomerMobile customerMobile from b_project_clues
        where SalesAttributionId in (
        <foreach collection="userIds" separator="," item="item">
            #{item.salesAttributionId}
        </foreach>
        ) and projectId = #{projectId}
    </select>

    <select id="getOpportunityByIds" resultType="java.util.Map">
        select *,
               IF(length(trim(diy_hide_customer_name)) = 0 OR diy_hide_customer_name IS NULL,concat(LEFT(CustomerName, 1), '**'),diy_hide_customer_name) reCustomerName,
               concat(LEFT(CustomerMobile, 3),'****',RIGHT(CustomerMobile, 4)) reCustomerMobile
        from b_project_opportunity where OpportunityClueId in (
        <foreach collection="ids" separator="," item="item">
            #{item}
        </foreach>
        )
    </select>

    <select id="getPublicPoolOpportunityByIds" resultType="java.util.Map">
        select ID,OpportunityClueId
        from b_customerpublicpool where ID in (
        <foreach collection="ids" separator="," item="item">
            #{item}
        </foreach>
        ) and is_del = 0
    </select>

    <select id="getUserAllowedClueCount" resultType="java.util.Map">
        select count(1), SalesAttributionId userId from b_project_clues
        where ClueStatus = 11 and SalesAttributionId in (
            <foreach collection="userIds" separator="," item="item">
                #{item.salesAttributionId}
            </foreach>
            ) and projectId = #{projectId}
        goup by SalesAttributionId
    </select>

    <select id="getProjectClueByIds" parameterType="java.lang.String" resultType="cn.visolink.system.excel.model.ReportCustomerForm">
        select AlternativeTelephone alternativeTelephone,CompanyPhone companyPhone,sourceMode,ReportCreateTime createDate,
               ReportUserID userId,ReportUserName employeeName,ReportUserRole reportUserRole,HomePhone homePhone,ProjectClueId projectClueId
        from b_project_clues
        where ProjectClueId in (
        <foreach collection="ids" separator="," item="item">
            #{item}
        </foreach>
        )
    </select>

    <!--查询首访问卷详情-->
    <select id="getInformationInfoByIds" parameterType="java.lang.String" resultType="cn.visolink.system.channel.model.vo.InformationVO">
        select clu.ProjectClueId projectClueId,clu.OpportunityClueId opportunityClueId,
               (case when clu.IsReferralOk = 1 and clu.IsShowNameReferral = 0 then if(length(trim(clu.diy_hide_customer_name)) = 0  or clu.diy_hide_customer_name is null,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) when #{jobCode} in('zygw' ,'qyzygw' ,'qyfz') or #{isNameShow} = '1' or find_in_set(concat(clu.projectId, 'IsNameShow1'), #{proIsShowNameStr}) then clu.CustomerName else if(length(trim(clu.diy_hide_customer_name)) = 0,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) end) customerName,
               if(length(trim(clu.diy_hide_customer_name)) = 0 or clu.diy_hide_customer_name is null,concat(left(clu.CustomerName,1),'**'),clu.diy_hide_customer_name) reCustomerName,
               clu.CustomerName orderCustomerName,
               clu.CustomerMobile orderCustomerMobile,
               (case when clu.IsReferralOk = 1 and clu.IsShowMobileReferral = 0 then concat(left(clu.CustomerMobile, 3), '****', right(clu.CustomerMobile, 4)) when #{jobCode} in('zygw' ,'qyzygw') or #{isMobileShow} = '1' or find_in_set(concat(clu.projectId, 'IsMobileShow1'), #{proIsShowMobileStr}) then clu.CustomerMobile else concat(left(clu.CustomerMobile,3),'****',right (clu.CustomerMobile,4)) end) customerMobile,
               clu.projectId,clu.ProjectName projectName,clu.CustomerLevel customerLevel,clu.ClueStatus clueStatus,
               clu.Contacts contacts,clu.Longitude longitude,clu.Latitude latitude,clu.SourceMode sourceMode,bin.BelongIndustrise belongIndustrise,bin.BelongIndustriseDesc belongIndustriseDesc,clu.CustomerAddress customerAddress,clu.ReportUserRole reportUserRole,
               clu.Position position,clu.IsPark isPark,clu.ParkName parkName,clu.ParkAddress parkAddress,clu.MainProducts mainProducts,clu.Floor floor,clu.PlantType plantType,clu.RentAndSaleType rentAndSaleType,clu.RentalPrice rentalPrice,clu.ParkFloor parkFloor,
              clu.SalesAttributionTeamId orgId,clu.SalesAttributionTeamName orgName,
              clu.SalesAttributionId salesAttributionId,
              clu.SalesAttributionName salesAttributionName,
              clu.PlantType plantType,
              clu.PlantTypeDesc plantTypeDesc,
              clu.RentAndSaleType rentAndSaleType,
              clu.RentAndSaleTypeDesc rentAndSaleTypeDesc,
              clu.OrderProId orderProId,
              clu.OrderProName orderProName,
              bin.IntentionalAreaDesc intentionalAreaDesc,
              bin.IntentionalFloorDesc intentionalFloorDesc,
              bin.ResistanceDesc resistanceDesc,
              bin.YxArea yxArea,
              bin.YxAreaDesc yxAreaDesc,
              bin.ZyreasonDesc zyreasonDesc,
              bin.IntentionClass intentionClass,
              bin.IntentionClassDesc intentionClassDesc,
              bin.IntentionType intentionType,
              bin.IntentionTypeDesc intentionTypeDesc,
              bin.YxSignTime yxSignTime,
              bin.DemandRemarks demandRemarks,
              clu.IntentionID intentionID,
              bin.BelongIndustriseTwo belongIndustriseTwo,
              bin.BelongIndustriseTwoDesc belongIndustriseTwoDesc,
              bin.BelongIndustriseThree belongIndustriseThree,
              bin.BelongIndustriseThreeDesc belongIndustriseThreeDesc,
              bin.BelongIndustriseFour belongIndustriseFour,
              bin.BelongIndustriseFourDesc belongIndustriseFourDesc,
              bin.IntentionalPrice intentionalPrice,
              bin.Description description,
              bin.TaxpayerNum taxpayerNum,
              bin.Area area,
              bin.DetailedAddress detailedAddress,
              bin.TechnologicalProcess technologicalProcess,
              bin.BusinessProducts businessProducts,
              bin.MajorEquipment majorEquipment,
              bin.MainRawMaterials mainRawMaterials,
              bin.ImportantDescription importantDescription,
              bin.ElectricityYear electricityYear,
              bin.WaterYear waterYear,
              bin.AnnualOutputValue annualOutputValue,
              bin.TaxAmountYear taxAmountYear,
              bin.WorkShopType workShopType,
              bin.WorkShopTypeDesc workShopTypeDesc,
              bin.Province province,
              bin.City city,
              bin.District district,
            bin.PeopleNum peopleNum,
            bin.ExistingPlantArea existingPlantArea,
            clu.SourceModeCode sourceModeCode,
            clu.CustomerType customerType,
            (case when clu.CustomerType = 0 then '企业' when clu.CustomerType = 1 then '个人' else '' end ) customerTypeDesc,
            clu.CustomerGender customerGender,
            (case when clu.CustomerGender = 1 then '男' when clu.CustomerGender = 0 then '女' else '' end ) customerGenderDesc,
            clu.LegalPerson legalPerson,
            (case when clu.IsReferralOk = 1 and clu.IsShowLegalMobileReferral = 0 then concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4)) when  #{jobCode} in('zygw' ,'qyzygw' ,'qyfz') or #{isMobileShow} = '1' or find_in_set(concat(clu.projectId, 'IsMobileShow1'), #{proIsShowMobileStr}) then clu.LegalPersonPhone else concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4)) end) legalPersonPhone,
            concat(left(clu.LegalPersonPhone,3),'****',right (clu.LegalPersonPhone,4))  reLegalPersonPhone,
            clu.LegalPersonPhone orderLegalPersonPhone,
            clu.LegalPersonCardNum legalPersonCardNum,
            clu.EnterpriseType enterpriseType,
            clu.EnterpriseTypeDesc enterpriseTypeDesc,
            clu.CustomerCardType customerCardType,
            clu.CustomerCardTypeDesc customerCardTypeDesc,
            clu.CustomerCardNum customerCardNum,
            clu.PostCode postCode,
            bin.AnnualOutputValue annualOutputValue,
            bin.Needs needs,
            bin.NowRent nowRent,
            bin.NowOfficeSpace nowOfficeSpace,
            bin.PollutantDischarge pollutantDischarge,
            bin.PollutantDischargeDesc pollutantDischargeDesc,
            bin.Zyreason zyreason,
            (IF(clu.IsReferralOk = 1, (select cust.IsShowReferral from b_cust_referral cust where cust.OpportunityClueId = clu.OpportunityClueId),1)) isokref
        from b_project_opportunity clu
            left join b_information bin on bin.OpportunityClueId = clu.OpportunityClueId
        where clu.ProjectClueId in (
        <foreach collection="ids" separator="," item="item">
            #{item}
        </foreach>
        )
    </select>

    <select id="getOppEnclosuresByIds" resultType="java.util.Map">
        select enclosureUrl,OpportunityClueId from b_enclosure
        where OpportunityClueId in (
        <foreach collection="ids" separator="," item="item">
            #{item}
        </foreach>
        ) and enclosureType = 2
    </select>

    <select id="getUserOrgByIds" resultType="java.util.Map">
        select org.ID orgId,org.OrgName orgName,ba.id userId
        from b_account ba
                 INNER JOIN s_jobsuserrel rel on rel.AccountID = ba.id
                 INNER JOIN s_jobs jobs on jobs.id = rel.JobID
                 INNER JOIN s_commonjobs com on com.id = jobs.CommonJobID
                 INNER JOIN s_organization org on org.id = jobs.JobOrgID
        where ProjectID = #{projectId}
          and com.JobCode = #{jobCode}
          and ba.id in (
            <foreach collection="ids" separator="," item="item">
                #{item}
            </foreach>
            )
    </select>

    <select id="queryPublicPoolAverageRedistributionRecord"
            resultType="cn.visolink.system.channel.model.vo.CustomerDistributionRecordsVO">
        SELECT bc.id id,
        ba.EmployeeName                                               confirmPersonName,
        bc.createTime                                                 confirmTime,
        bc.project_names                                              projectName,
        bc.sales_attribution_names                                    salesAttributionNames,
        bp.ProjectName                                                newProjectName,
        bc.batch_code                                                 batchCode,
        bc.redistribution_result                                      redistributionResult,
        bc.batch_code                                                 batchCode
        FROM b_redistribution_batch bc
        left join b_project bp on bc.projectId = bp.ID
        left join b_account ba on bc.createUser = ba.ID
        WHERE 1 = 1
        <if test="projectList != null and projectList.size() > 0">
            AND bc.projectId IN
            <foreach collection="projectList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="salesName != null and salesName != ''">
            AND find_in_set(#{salesName},bc.sales_attribution_names)
        </if>
        <if test="confirmStartTime!=null and confirmStartTime!='' and confirmEndTime!=null and confirmEndTime!=''">
            and bc.createTime between #{confirmStartTime} and #{confirmEndTime}
        </if>
        <if test="confirmPersonName != null and confirmPersonName != ''">
            AND ba.EmployeeName = #{confirmPersonName}
        </if>
        <if test="userId != null and userId != ''">
            AND bc.createUser = #{userId}
        </if>
        AND bc.type = 2
        ORDER BY bc.createTime DESC
    </select>

    <select id="queryPublicPoolAverageRedistributionDetailRecord"
            resultType="cn.visolink.system.channel.model.vo.CustomerDistributionRecordsVO">
        SELECT
        (select EmployeeName from b_account where ID = bc.ConfirmID) confirmPersonName,
        bc.ConfirmTime confirmTime,
        bpc.ProjectName projectName,
        if(length(trim(bpc.diy_hide_customer_name)) = 0 or bpc.diy_hide_customer_name is null,concat(left(bpc.CustomerName,1),'**'),bpc.diy_hide_customer_name) customerName,
        bpc.CustomerName oldCustomerName,
        CONCAT(
        LEFT ( bpc.CustomerMobile, 3 ),
        '****',
        RIGHT ( bpc.CustomerMobile, 4 )) customerMobile,
        bpc.CustomerMobile oldCustomerMobile,
        bc.OldSalesName oldSalesName,
        bc.SalesName salesName,
        bc.Type type,
        bc.ProjectName oldProjectName,
        bc.main_project_name newProjectName,
        bc.OpportunityClueId opportunityClueId,
        #{batchInfo} batchInfo
        FROM b_customerdistributionRecords bc
        INNER JOIN b_project_opportunity bpc ON bpc.OpportunityClueId = bc.OpportunityClueId
        WHERE
        1 = 1 and bc.RedistributionBatchId = #{id}
        <if test="projectList != null and projectList.size() > 0">
            AND bc.main_project_id IN
            <foreach collection="projectList" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="customerName != null and customerName != ''">
            AND bpc.CustomerName = #{customerName}
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            AND bpc.CustomerMobile = #{customerMobile}
        </if>
        <if test="salesName != null and salesName != ''">
            AND bc.SalesName = #{salesName}
        </if>
        <if test="confirmStartTime!=null and confirmStartTime!='' and confirmEndTime!=null and confirmEndTime!=''">
            and bc.ConfirmTime between #{confirmStartTime} and #{confirmEndTime}
        </if>
        AND bc.Type = 1
        ORDER BY bc.ConfirmTime DESC
    </select>

    <select id="getGlAllocationPropertyConsultantPro" resultType="java.util.Map">
        SELECT
        p.id value,
        p.projectName label
        FROM
        b_project p where  p.Status = 1 and p.IsDel = 0
        and IsStages =0
        and pid is null
        and orgId is not null
        and orgId != ''
        <if test="isManager != null and isManager != '' and '0'.toString() == isManager">
            <if test="pList != null and pList.size()>0">
                and p.ID in
                <foreach collection="pList" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </if>
    </select>
    <select id="queryPublicPoolAverageRedistributionInfo" resultType="java.lang.String">
        SELECT concat('本批次共分配成功',countNumber,'组客户：接收人为：',sales_attribution_names)
        FROM b_redistribution_batch bc
        WHERE ID = #{id}
    </select>
    <select id="getChildTasksByParentIds" resultType="cn.visolink.system.channel.model.vo.TaskVo">
        SELECT
            t.*

        FROM
            b_task t

        WHERE
            t.parentId IN (${parentIds})
          AND
            t.isDel = 0
        ORDER BY
            t.createTime DESC
    </select>

    <!-- 获取客户来访信息 -->
    <select id="getCustomerVisitInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT

            DATE_FORMAT(MIN(FollowUpDate), '%Y-%m-%d %H:%i:%s') AS firstVisitTime,
            DATE_FORMAT(MAX(FollowUpDate), '%Y-%m-%d %H:%i:%s') AS lastVisitTime,
            (SELECT projectName FROM b_project WHERE ID = (SELECT projectId FROM b_followup_record WHERE opportunityClueId = #{opportunityClueId} ORDER BY FollowUpDate DESC LIMIT 1)) as visitProject
        FROM
            b_followup_record
        WHERE
            opportunityClueId = #{opportunityClueId} and FollowUpWay IN ('3','4') and Status=2
    </select>

    <!-- 获取客户成交信息 -->
    <select id="getCustomerDealInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(MIN(tradeTime), '%Y-%m-%d %H:%i:%s') AS firstDealTime,
            DATE_FORMAT(MAX(tradeTime), '%Y-%m-%d %H:%i:%s') AS lastDealTime,
            (SELECT projectName FROM b_project WHERE ID = (SELECT ProjectID FROM b_opportunity_trade WHERE OpportunityClueId = #{opportunityClueId} ORDER BY tradeTime DESC LIMIT 1)) as dealProject,
            "" as factoryType,
            (SELECT CjBldArea FROM b_opportunity_trade WHERE opportunityClueId = #{opportunityClueId} ORDER BY tradeTime DESC LIMIT 1) as dealArea
        FROM
            b_opportunity_trade
        WHERE
            opportunityClueId = #{opportunityClueId}
    </select>

    <!-- 获取客户三个一信息 -->
    <select id="getCustomerThreeOneInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(FollowUpDate, '%Y-%m-%d %H:%i:%s') AS threeOneCompleteTime
        FROM
            b_followup_record
        WHERE
            OpportunityClueId = #{opportunityClueId} and  IsThreeOnesStatus=1 and Status=2
        ORDER BY
            FollowUpDate DESC
            LIMIT 1
    </select>

    <!-- 获取线索最新拜访信息 -->
    <select id="getClueVisitInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT

            DATE_FORMAT(MAX(FollowUpDate), '%Y-%m-%d %H:%i:%s') AS lastVisitTime
        FROM
            b_followup_record
        WHERE
            ProjectClueId = #{projectClueId} and FollowUpWay IN ('3') and Status=2
    </select>

    <!-- 批量更新线索表地址信息 -->
    <update id="batchUpdateCluesAddress">
        <foreach collection="list" item="item" separator=";">
            UPDATE b_project_clues
            <set>
                <if test="item.customerAddress != null and item.customerAddress != ''">
                    CustomerAddress = #{item.customerAddress},
                </if>
                <if test="item.longitude != null and item.longitude != ''">
                    Longitude = #{item.longitude},
                </if>
                <if test="item.latitude != null and item.latitude != ''">
                    Latitude = #{item.latitude},
                </if>
                EditorTime = NOW(),
                EditUserId = #{item.updateUserId}
            </set>
            WHERE ProjectClueId = #{item.businessId}
        </foreach>
    </update>

    <!-- 批量更新机会表地址信息 -->
    <update id="batchUpdateOpportunityAddress">
        <foreach collection="list" item="item" separator=";">
            UPDATE b_project_opportunity
            <set>
                <if test="item.customerAddress != null and item.customerAddress != ''">
                    CustomerAddress = #{item.customerAddress},
                </if>
                <if test="item.longitude != null and item.longitude != ''">
                    Longitude = #{item.longitude},
                </if>
                <if test="item.latitude != null and item.latitude != ''">
                    Latitude = #{item.latitude},
                </if>
                EditorTime = NOW(),
                EditUserId = #{item.updateUserId}
            </set>
            WHERE OpportunityClueId = #{item.businessId}
        </foreach>
    </update>

</mapper>
