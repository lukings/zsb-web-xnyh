<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.visolink.system.custMap.dao.ZsMapDrawDao">
	<insert id="save">
		INSERT INTO b_zsmap_draw (
			draw_id, `type`, name, address, `length`, acreage, folder_id, folder, lat_lon, color, url,
			create_by, create_time, update_by, update_time, is_del,
			ProjectId, ProjectName, ReportUserRole, CreateJobId, CreateTeamID, CreateTeamName
		) VALUES (
			#{drawId}, #{type}, #{name}, #{address}, #{length}, #{acreage}, #{folderId}, #{folder}, #{latLon}, #{color}, #{url},
			#{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{isDel},
			#{projectId}, #{projectName}, #{reportUserRole}, #{createJobId}, #{createTeamID}, #{createTeamName}
		)
	</insert>
	<update id="update">
		update b_zsmap_draw set is_del = 1 where draw_id = #{drawId}
	</update>

	<update id="updateZsmapDraw">
		update b_zsmap_draw set name = #{name},color= #{color},update_by=#{updateBy},update_time=#{updateTime} where draw_id = #{drawId}
	</update>
	
	<update id="updateAddress">
		update b_zsmap_draw
		set address = #{address},
		    update_time = now()
		where draw_id = #{drawId}
	</update>
	<select id="select" resultType="cn.visolink.system.custMap.bo.ZsMapDrawResBO">
		select
			draw_id drawId,
			type type,
			name name,
			address address,
			length length,
			acreage acreage,
			folder folder,
			folder_id folderId,
			color color,
			lat_lon latLon,
			url url,
			create_by createBy,
			create_time createTime,
			update_by updateBy,
			update_time updateTime,
			is_del isDel,
			ProjectId projectId,
			ProjectName projectName,
			ReportUserRole reportUserRole,
			CreateJobId createJobId,
			CreateTeamID createTeamID,
			CreateTeamName createTeamName
		from
			b_zsmap_draw
		where is_del = 0
			<if test="drawId != null and drawId != ''">
				and draw_id = #{drawId}
			</if>
		<if test="name != null and name != ''">
			and name like concat('%', #{name}, '%')
		</if>
		<if test="type != null and type != ''">
			and `type` = #{type}
		</if>
		<if test="createUserName != null and createUserName != ''">
			and create_by  in (select ID from b_account where EmployeeName like concat('%', #{createUserName}, '%'))
		</if>
<!--		<if test="createUser != null and createUser != ''">-->
<!--			and create_by  = #{createUser}-->
<!--		</if>-->
		<if test="startTime != null and startTime != ''">
			AND create_time &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			AND create_time &lt;= DATE_ADD(#{endTime}, INTERVAL 1 DAY)
		</if>
		<if test='createUserS!=null and createUserS.size()>0'>
			AND create_by IN (
			<foreach collection="createUserS" item="item" separator=",">
				#{item}
			</foreach>
			)
		</if>
		<if test='types!=null and types.size()>0'>
			AND type IN (
			<foreach collection="types" item="item" separator=",">
				#{item}
			</foreach>
			)
		</if>
		<if test='projectIdS!=null and projectIdS.size()>0'>
			AND ProjectId IN (
			<foreach collection="projectIdS" item="item" separator=",">
				#{item}
			</foreach>
			)
		</if>
	</select>
</mapper>
