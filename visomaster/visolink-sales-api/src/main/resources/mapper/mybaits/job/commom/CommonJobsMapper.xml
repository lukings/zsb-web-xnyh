<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.visolink.system.job.common.dao.CommonJobsDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.visolink.system.job.common.model.CommonJobs" autoMapping="true">
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID, JobCode, JobName, JobDesc, AuthCompanyID, ProductID, Creator, CreateTime, Editor, EditTime, Status, IsDel
    </sql>
    <select id="findListBySystemCommonJobs" parameterType="cn.visolink.system.job.common.model.form.CommonJobsForm" resultType="cn.visolink.system.job.common.model.vo.CommonJobsVO">
        SELECT ID ,
        JobName ,
        JobDesc ,
        Status,
        JobCode
        FROM S_CommonJobs
		WHERE  IsDel = 0
        <if test="jobName!=null and jobName!=''">
            AND JobName LIKE "%"#{jobName}"%"
        </if>
        AND IsDel = 0 and isIdm=#{isIdm}
        ORDER BY JobName
    </select>
    <!--    查找已授权的菜单-->
    <select id="findMenusListByPermissions" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT DISTINCT
        		m.ID,
        		m.PID,
        		m.MenuName,
        		m.MenuSysName,
            m.IsLast,
        		m.Levels,
        		m.ListIndex,
        		concat('/',m.FullPath)
        	FROM (SELECT DISTINCT
        		jur.JobID,
        		j.JobName,
        		j.CommonJobID
        	FROM b_account a
        		INNER JOIN S_JobsUserRel jur ON a.ID = jur.AccountID and jur.status = 1
        		INNER JOIN S_Jobs j ON jur.JobID = j.ID and j.isIdm = 0
        	WHERE a.ID = #{UserID}
        		AND j.IsDel = 0 AND j.Status = 1
        		 AND j.ProductID = #{ProductID}) ujd

        		INNER JOIN S_CommonJobs cj ON ujd.CommonJobID = cj.ID
        		INNER JOIN S_CommonJobsMenuRel cjmr ON cj.ID = cjmr.JobID
        		INNER JOIN S_Menus m ON cjmr.MenuID = m.ID
        		INNER JOIN S_ProductMenuRel pmr ON m.ID = pmr.MenuID
        	WHERE cj.IsDel = 0 AND cj.Status = 1
        		AND m.IsDel = 0 AND m.Status = 1
        		AND cj.isIdm=0
        		AND pmr.ProductID = #{ProductID}
        		AND m.menusType=#{MenusType}

 union

 SELECT DISTINCT
        		 m.ID,
        		 m.PID,
        		 m.MenuName,
        		 m.MenuSysName,
             m.IsLast,
        		 m.Levels,
        		 m.ListIndex,
        		 concat('/',m.FullPath)
        	FROM (SELECT DISTINCT
        		jur.JobID,
        		j.JobName,
        		j.CommonJobID
        	FROM b_account a
        		INNER JOIN S_JobsUserRel jur ON a.ID = jur.AccountID
        		INNER JOIN S_Jobs j ON jur.JobID = j.ID and j.isIdm = 0
        	WHERE a.ID = #{UserID}
        		AND j.IsDel = 0 AND j.Status = 1
		AND j.ProductID = #{ProductID}) ujs

        		INNER JOIN S_JobsMenuRel jmr ON ujs.JobID = jmr.JobID
        		INNER JOIN S_Menus m ON jmr.MenuID = m.ID
        		INNER JOIN S_ProductMenuRel pmr ON m.ID = pmr.MenuID
        	WHERE m.IsDel = 0 AND m.Status = 1

        AND m.menusType=#{MenusType}

    </select>
    <select id="findFunctionsListByPermissions" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT DISTINCT
        	f.*
        FROM S_JobsUserRel jur
        	INNER JOIN S_Jobs j ON jur.JobID = j.ID and j.isIdm = 0
        	INNER JOIN S_Organization o ON j.JobOrgID = o.ID
        	INNER JOIN (
        		SELECT
        			JobID,
        			FuncID
        		FROM S_JobsFunctionsRel
        		UNION
        		SELECT
        			j.ID,
        			cjfr.FuncID
        		FROM S_CommonJobsFunctionsRel cjfr
        			INNER JOIN S_Jobs j ON cjfr.JobID = j.CommonJobID
        	) temp ON j.ID = temp.JobID
        	INNER JOIN S_Functions f ON temp.FuncID = f.ID
        WHERE j.IsDel = 0 AND j.Status = 1
        	AND o.IsDel = 0 AND o.Status = 1
        	AND f.IsDel = 0 AND f.Status = 1
        	AND jur.AccountID = #{UserID}
		    and jur.status = 1
    </select>

    <select id="findCommonJobFunctionsByPermissions" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        concat(IFNULL((
        	SELECT DISTINCT
        		group_concat(cjmr.MenuID separator ',')
        	FROM S_CommonJobsMenuRel cjmr
        		INNER JOIN S_Menus m ON cjmr.MenuID = m.ID
        	WHERE m.Status = 1
        		AND m.IsDel = 0
        		AND cjmr.JobID = {JobID}
        	#FOR XML PATH('')
        ),'') , IFNULL((
	      	SELECT DISTINCT
	      		group_concat(cjfr.FuncID separator ',')
	      	FROM S_CommonJobsFunctionsRel cjfr
	      		INNER JOIN S_Functions f ON cjfr.FuncID = f.ID
	      	WHERE f.Status = 1
	      		AND f.IsDel = 0
	      		AND cjfr.JobID = #{JobID}
	      		#FOR XML PATH('')
	      ),'') ) AS IDS
    </select>

	<select id="findOldMenusByPermissions" parameterType="java.util.Map" resultType="java.lang.String">
      select MenuID from s_commonjobsmenurel  where JobID=#{JobID};
	</select>

	<!--新增通用岗位-->
	<insert id="systemCommonJob_Insert" parameterType="cn.visolink.system.job.common.model.form.CommonJobsForm">
INSERT INTO s_commonjobs
	            ( ID ,
	              jobcode ,
	              JobName ,
	              JobDesc ,
	              AuthCompanyID ,
	              ProductID ,
	              Creator ,
	              CreateTime ,
	              Editor ,
	              EditTime ,
	              Status ,
	              IsDel
	            )
	    VALUES  ( #{id} ,
	              #{jobCode},
	              #{jobName} ,
	              #{jobDesc} ,
	              #{authCompanyId} ,
	              #{productId} ,
	              #{creator} ,
	              now() ,
	              NULL ,
	              NULL ,
	              #{status} ,
	              0
	            )
	</insert>

	<!--查询岗位是否存在-->
	<select id="systemCommonJobNameIsExists_Select">
      SELECT COUNT(1) AS A FROM s_commonjobs WHERE IsDel = 0

       AND JobName = #{JobName} AND
	</select>

	<!--删除通用岗位-->
	<update id="systemCommonJobDelete" parameterType="cn.visolink.system.job.common.model.form.CommonJobsForm">
		UPDATE s_commonjobs SET IsDel = 1 WHERE ID = #{id}
	</update>

	<!--启用禁用通用岗位-->
	<update id="systemCommonJobStatusUpdate" parameterType="cn.visolink.system.job.common.model.form.CommonJobsForm">
		UPDATE s_commonjobs SET Status = #{status} WHERE ID = #{id}
	</update>

	<update id="systemCommonJobUpdate" parameterType="cn.visolink.system.job.common.model.form.CommonJobsForm">
		UPDATE s_commonjobs
      SET
          JobName = #{jobName},
          JobDesc = #{jobDesc},
          Status = #{status},
          Editor = #{creator},
          jobCode = #{jobCode},
          EditTime = now()
      WHERE ID = #{id}
	</update>

</mapper>
